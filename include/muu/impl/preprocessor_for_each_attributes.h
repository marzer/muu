// This file is a part of muu and is subject to the the terms of the MIT license.
// Copyright (c) Mark Gillard <mark.gillard@outlook.com.au>
// See https://github.com/marzer/muu/blob/master/LICENSE for the full license text.
// SPDX-License-Identifier: MIT
//-----
// this file was generated by a script - do not modify it directly
//-----
#pragma once
/// \cond
// clang-format off

// for-each macros defined in this file:
// MUU_FOR_EACH_CALLCONV
// MUU_FOR_EACH_CALLCONV_NOEXCEPT
// MUU_FOR_EACH_CV
// MUU_FOR_EACH_CVREF
// MUU_FOR_EACH_CVREF_NOEXCEPT
// MUU_FOR_EACH_CV_NOEXCEPT
// MUU_FOR_EACH_MEMBER_CALLCONV
// MUU_FOR_EACH_MEMBER_CALLCONV_CV
// MUU_FOR_EACH_MEMBER_CALLCONV_CVREF
// MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT
// MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT
// MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT
// MUU_FOR_EACH_MEMBER_CALLCONV_REF
// MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT
// MUU_FOR_EACH_NOEXCEPT
// MUU_FOR_EACH_REF
// MUU_FOR_EACH_REF_NOEXCEPT

#ifndef MUU_BLANK
#define MUU_BLANK_3
#define MUU_BLANK_2 MUU_BLANK_3
#define MUU_BLANK_1 MUU_BLANK_2
#define MUU_BLANK	MUU_BLANK_1
#endif

#ifndef MUU_FOR_EACH_CV
#define MUU_FOR_EACH_CV(func) \
	func(MUU_BLANK) \
	func(const) \
	func(volatile) \
	func(const volatile)
#endif

#ifndef MUU_FOR_EACH_REF
#define MUU_FOR_EACH_REF(func) \
	func(MUU_BLANK) \
	func(&) \
	func(&&)
#endif

#ifndef MUU_FOR_EACH_CVREF
#define MUU_FOR_EACH_CVREF(func) \
	func(MUU_BLANK) \
	func(&) \
	func(&&) \
	func(const) \
	func(const&) \
	func(const&&) \
	func(volatile) \
	func(volatile&) \
	func(volatile&&) \
	func(const volatile) \
	func(const volatile&) \
	func(const volatile&&)
#endif

#ifndef MUU_FOR_EACH_NOEXCEPT
#define MUU_FOR_EACH_NOEXCEPT(func) \
	func(MUU_BLANK) \
	func(noexcept)
#endif

#ifndef MUU_FOR_EACH_CV_NOEXCEPT
#define MUU_FOR_EACH_CV_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, noexcept) \
	func(const, MUU_BLANK) \
	func(const, noexcept) \
	func(volatile, MUU_BLANK) \
	func(volatile, noexcept) \
	func(const volatile, MUU_BLANK) \
	func(const volatile, noexcept)
#endif

#ifndef MUU_FOR_EACH_REF_NOEXCEPT
#define MUU_FOR_EACH_REF_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, noexcept) \
	func(&, MUU_BLANK) \
	func(&, noexcept) \
	func(&&, MUU_BLANK) \
	func(&&, noexcept)
#endif

#ifndef MUU_FOR_EACH_CVREF_NOEXCEPT
#define MUU_FOR_EACH_CVREF_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, noexcept) \
	func(&, MUU_BLANK) \
	func(&, noexcept) \
	func(&&, MUU_BLANK) \
	func(&&, noexcept) \
	func(const, MUU_BLANK) \
	func(const, noexcept) \
	func(const&, MUU_BLANK) \
	func(const&, noexcept) \
	func(const&&, MUU_BLANK) \
	func(const&&, noexcept) \
	func(volatile, MUU_BLANK) \
	func(volatile, noexcept) \
	func(volatile&, MUU_BLANK) \
	func(volatile&, noexcept) \
	func(volatile&&, MUU_BLANK) \
	func(volatile&&, noexcept) \
	func(const volatile, MUU_BLANK) \
	func(const volatile, noexcept) \
	func(const volatile&, MUU_BLANK) \
	func(const volatile&, noexcept) \
	func(const volatile&&, MUU_BLANK) \
	func(const volatile&&, noexcept)
#endif

// free-function calling conventions
#if defined(_WIN32) && (defined(__amd64__) || defined(__amd64) || defined(__x86_64__) || defined(__x86_64) || defined(_M_AMD64))

#ifndef MUU_FOR_EACH_CALLCONV
#define MUU_FOR_EACH_CALLCONV(func) \
	func(__cdecl) \
	func(__vectorcall)
#endif

#ifndef MUU_FOR_EACH_CALLCONV_NOEXCEPT
#define MUU_FOR_EACH_CALLCONV_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, noexcept) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, noexcept)
#endif

#elif defined(_WIN32) && !(defined(__amd64__) || defined(__amd64) || defined(__x86_64__) || defined(__x86_64) || defined(_M_AMD64))

#ifndef MUU_FOR_EACH_CALLCONV
#define MUU_FOR_EACH_CALLCONV(func) \
	func(__cdecl) \
	func(__vectorcall) \
	func(__stdcall) \
	func(__fastcall)
#endif

#ifndef MUU_FOR_EACH_CALLCONV_NOEXCEPT
#define MUU_FOR_EACH_CALLCONV_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, noexcept) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, noexcept) \
	func(__stdcall, MUU_BLANK) \
	func(__stdcall, noexcept) \
	func(__fastcall, MUU_BLANK) \
	func(__fastcall, noexcept)
#endif

#elif !defined(_WIN32)

#ifndef MUU_FOR_EACH_CALLCONV
#define MUU_FOR_EACH_CALLCONV(func) \
	func(MUU_BLANK)
#endif

#ifndef MUU_FOR_EACH_CALLCONV_NOEXCEPT
#define MUU_FOR_EACH_CALLCONV_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, noexcept)
#endif

#endif

// member-function calling conventions
#if defined(_WIN32) && (defined(__amd64__) || defined(__amd64) || defined(__x86_64__) || defined(__x86_64) || defined(_M_AMD64))

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV
#define MUU_FOR_EACH_MEMBER_CALLCONV(func) \
	func(__cdecl) \
	func(__vectorcall)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CV
#define MUU_FOR_EACH_MEMBER_CALLCONV_CV(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, const) \
	func(__cdecl, volatile) \
	func(__cdecl, const volatile) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, const) \
	func(__vectorcall, volatile) \
	func(__vectorcall, const volatile)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_REF
#define MUU_FOR_EACH_MEMBER_CALLCONV_REF(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, &) \
	func(__cdecl, &&) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, &) \
	func(__vectorcall, &&)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CVREF
#define MUU_FOR_EACH_MEMBER_CALLCONV_CVREF(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, &) \
	func(__cdecl, &&) \
	func(__cdecl, const) \
	func(__cdecl, const&) \
	func(__cdecl, const&&) \
	func(__cdecl, volatile) \
	func(__cdecl, volatile&) \
	func(__cdecl, volatile&&) \
	func(__cdecl, const volatile) \
	func(__cdecl, const volatile&) \
	func(__cdecl, const volatile&&) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, &) \
	func(__vectorcall, &&) \
	func(__vectorcall, const) \
	func(__vectorcall, const&) \
	func(__vectorcall, const&&) \
	func(__vectorcall, volatile) \
	func(__vectorcall, volatile&) \
	func(__vectorcall, volatile&&) \
	func(__vectorcall, const volatile) \
	func(__vectorcall, const volatile&) \
	func(__vectorcall, const volatile&&)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, noexcept) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK, MUU_BLANK) \
	func(__cdecl, MUU_BLANK, noexcept) \
	func(__cdecl, const, MUU_BLANK) \
	func(__cdecl, const, noexcept) \
	func(__cdecl, volatile, MUU_BLANK) \
	func(__cdecl, volatile, noexcept) \
	func(__cdecl, const volatile, MUU_BLANK) \
	func(__cdecl, const volatile, noexcept) \
	func(__vectorcall, MUU_BLANK, MUU_BLANK) \
	func(__vectorcall, MUU_BLANK, noexcept) \
	func(__vectorcall, const, MUU_BLANK) \
	func(__vectorcall, const, noexcept) \
	func(__vectorcall, volatile, MUU_BLANK) \
	func(__vectorcall, volatile, noexcept) \
	func(__vectorcall, const volatile, MUU_BLANK) \
	func(__vectorcall, const volatile, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK, MUU_BLANK) \
	func(__cdecl, MUU_BLANK, noexcept) \
	func(__cdecl, &, MUU_BLANK) \
	func(__cdecl, &, noexcept) \
	func(__cdecl, &&, MUU_BLANK) \
	func(__cdecl, &&, noexcept) \
	func(__vectorcall, MUU_BLANK, MUU_BLANK) \
	func(__vectorcall, MUU_BLANK, noexcept) \
	func(__vectorcall, &, MUU_BLANK) \
	func(__vectorcall, &, noexcept) \
	func(__vectorcall, &&, MUU_BLANK) \
	func(__vectorcall, &&, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK, MUU_BLANK) \
	func(__cdecl, MUU_BLANK, noexcept) \
	func(__cdecl, &, MUU_BLANK) \
	func(__cdecl, &, noexcept) \
	func(__cdecl, &&, MUU_BLANK) \
	func(__cdecl, &&, noexcept) \
	func(__cdecl, const, MUU_BLANK) \
	func(__cdecl, const, noexcept) \
	func(__cdecl, const&, MUU_BLANK) \
	func(__cdecl, const&, noexcept) \
	func(__cdecl, const&&, MUU_BLANK) \
	func(__cdecl, const&&, noexcept) \
	func(__cdecl, volatile, MUU_BLANK) \
	func(__cdecl, volatile, noexcept) \
	func(__cdecl, volatile&, MUU_BLANK) \
	func(__cdecl, volatile&, noexcept) \
	func(__cdecl, volatile&&, MUU_BLANK) \
	func(__cdecl, volatile&&, noexcept) \
	func(__cdecl, const volatile, MUU_BLANK) \
	func(__cdecl, const volatile, noexcept) \
	func(__cdecl, const volatile&, MUU_BLANK) \
	func(__cdecl, const volatile&, noexcept) \
	func(__cdecl, const volatile&&, MUU_BLANK) \
	func(__cdecl, const volatile&&, noexcept) \
	func(__vectorcall, MUU_BLANK, MUU_BLANK) \
	func(__vectorcall, MUU_BLANK, noexcept) \
	func(__vectorcall, &, MUU_BLANK) \
	func(__vectorcall, &, noexcept) \
	func(__vectorcall, &&, MUU_BLANK) \
	func(__vectorcall, &&, noexcept) \
	func(__vectorcall, const, MUU_BLANK) \
	func(__vectorcall, const, noexcept) \
	func(__vectorcall, const&, MUU_BLANK) \
	func(__vectorcall, const&, noexcept) \
	func(__vectorcall, const&&, MUU_BLANK) \
	func(__vectorcall, const&&, noexcept) \
	func(__vectorcall, volatile, MUU_BLANK) \
	func(__vectorcall, volatile, noexcept) \
	func(__vectorcall, volatile&, MUU_BLANK) \
	func(__vectorcall, volatile&, noexcept) \
	func(__vectorcall, volatile&&, MUU_BLANK) \
	func(__vectorcall, volatile&&, noexcept) \
	func(__vectorcall, const volatile, MUU_BLANK) \
	func(__vectorcall, const volatile, noexcept) \
	func(__vectorcall, const volatile&, MUU_BLANK) \
	func(__vectorcall, const volatile&, noexcept) \
	func(__vectorcall, const volatile&&, MUU_BLANK) \
	func(__vectorcall, const volatile&&, noexcept)
#endif

#elif defined(_WIN32) && !(defined(__amd64__) || defined(__amd64) || defined(__x86_64__) || defined(__x86_64) || defined(_M_AMD64))

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV
#define MUU_FOR_EACH_MEMBER_CALLCONV(func) \
	func(__cdecl) \
	func(__vectorcall) \
	func(__stdcall) \
	func(__fastcall) \
	func(__thiscall)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CV
#define MUU_FOR_EACH_MEMBER_CALLCONV_CV(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, const) \
	func(__cdecl, volatile) \
	func(__cdecl, const volatile) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, const) \
	func(__vectorcall, volatile) \
	func(__vectorcall, const volatile) \
	func(__stdcall, MUU_BLANK) \
	func(__stdcall, const) \
	func(__stdcall, volatile) \
	func(__stdcall, const volatile) \
	func(__fastcall, MUU_BLANK) \
	func(__fastcall, const) \
	func(__fastcall, volatile) \
	func(__fastcall, const volatile) \
	func(__thiscall, MUU_BLANK) \
	func(__thiscall, const) \
	func(__thiscall, volatile) \
	func(__thiscall, const volatile)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_REF
#define MUU_FOR_EACH_MEMBER_CALLCONV_REF(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, &) \
	func(__cdecl, &&) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, &) \
	func(__vectorcall, &&) \
	func(__stdcall, MUU_BLANK) \
	func(__stdcall, &) \
	func(__stdcall, &&) \
	func(__fastcall, MUU_BLANK) \
	func(__fastcall, &) \
	func(__fastcall, &&) \
	func(__thiscall, MUU_BLANK) \
	func(__thiscall, &) \
	func(__thiscall, &&)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CVREF
#define MUU_FOR_EACH_MEMBER_CALLCONV_CVREF(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, &) \
	func(__cdecl, &&) \
	func(__cdecl, const) \
	func(__cdecl, const&) \
	func(__cdecl, const&&) \
	func(__cdecl, volatile) \
	func(__cdecl, volatile&) \
	func(__cdecl, volatile&&) \
	func(__cdecl, const volatile) \
	func(__cdecl, const volatile&) \
	func(__cdecl, const volatile&&) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, &) \
	func(__vectorcall, &&) \
	func(__vectorcall, const) \
	func(__vectorcall, const&) \
	func(__vectorcall, const&&) \
	func(__vectorcall, volatile) \
	func(__vectorcall, volatile&) \
	func(__vectorcall, volatile&&) \
	func(__vectorcall, const volatile) \
	func(__vectorcall, const volatile&) \
	func(__vectorcall, const volatile&&) \
	func(__stdcall, MUU_BLANK) \
	func(__stdcall, &) \
	func(__stdcall, &&) \
	func(__stdcall, const) \
	func(__stdcall, const&) \
	func(__stdcall, const&&) \
	func(__stdcall, volatile) \
	func(__stdcall, volatile&) \
	func(__stdcall, volatile&&) \
	func(__stdcall, const volatile) \
	func(__stdcall, const volatile&) \
	func(__stdcall, const volatile&&) \
	func(__fastcall, MUU_BLANK) \
	func(__fastcall, &) \
	func(__fastcall, &&) \
	func(__fastcall, const) \
	func(__fastcall, const&) \
	func(__fastcall, const&&) \
	func(__fastcall, volatile) \
	func(__fastcall, volatile&) \
	func(__fastcall, volatile&&) \
	func(__fastcall, const volatile) \
	func(__fastcall, const volatile&) \
	func(__fastcall, const volatile&&) \
	func(__thiscall, MUU_BLANK) \
	func(__thiscall, &) \
	func(__thiscall, &&) \
	func(__thiscall, const) \
	func(__thiscall, const&) \
	func(__thiscall, const&&) \
	func(__thiscall, volatile) \
	func(__thiscall, volatile&) \
	func(__thiscall, volatile&&) \
	func(__thiscall, const volatile) \
	func(__thiscall, const volatile&) \
	func(__thiscall, const volatile&&)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK) \
	func(__cdecl, noexcept) \
	func(__vectorcall, MUU_BLANK) \
	func(__vectorcall, noexcept) \
	func(__stdcall, MUU_BLANK) \
	func(__stdcall, noexcept) \
	func(__fastcall, MUU_BLANK) \
	func(__fastcall, noexcept) \
	func(__thiscall, MUU_BLANK) \
	func(__thiscall, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK, MUU_BLANK) \
	func(__cdecl, MUU_BLANK, noexcept) \
	func(__cdecl, const, MUU_BLANK) \
	func(__cdecl, const, noexcept) \
	func(__cdecl, volatile, MUU_BLANK) \
	func(__cdecl, volatile, noexcept) \
	func(__cdecl, const volatile, MUU_BLANK) \
	func(__cdecl, const volatile, noexcept) \
	func(__vectorcall, MUU_BLANK, MUU_BLANK) \
	func(__vectorcall, MUU_BLANK, noexcept) \
	func(__vectorcall, const, MUU_BLANK) \
	func(__vectorcall, const, noexcept) \
	func(__vectorcall, volatile, MUU_BLANK) \
	func(__vectorcall, volatile, noexcept) \
	func(__vectorcall, const volatile, MUU_BLANK) \
	func(__vectorcall, const volatile, noexcept) \
	func(__stdcall, MUU_BLANK, MUU_BLANK) \
	func(__stdcall, MUU_BLANK, noexcept) \
	func(__stdcall, const, MUU_BLANK) \
	func(__stdcall, const, noexcept) \
	func(__stdcall, volatile, MUU_BLANK) \
	func(__stdcall, volatile, noexcept) \
	func(__stdcall, const volatile, MUU_BLANK) \
	func(__stdcall, const volatile, noexcept) \
	func(__fastcall, MUU_BLANK, MUU_BLANK) \
	func(__fastcall, MUU_BLANK, noexcept) \
	func(__fastcall, const, MUU_BLANK) \
	func(__fastcall, const, noexcept) \
	func(__fastcall, volatile, MUU_BLANK) \
	func(__fastcall, volatile, noexcept) \
	func(__fastcall, const volatile, MUU_BLANK) \
	func(__fastcall, const volatile, noexcept) \
	func(__thiscall, MUU_BLANK, MUU_BLANK) \
	func(__thiscall, MUU_BLANK, noexcept) \
	func(__thiscall, const, MUU_BLANK) \
	func(__thiscall, const, noexcept) \
	func(__thiscall, volatile, MUU_BLANK) \
	func(__thiscall, volatile, noexcept) \
	func(__thiscall, const volatile, MUU_BLANK) \
	func(__thiscall, const volatile, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK, MUU_BLANK) \
	func(__cdecl, MUU_BLANK, noexcept) \
	func(__cdecl, &, MUU_BLANK) \
	func(__cdecl, &, noexcept) \
	func(__cdecl, &&, MUU_BLANK) \
	func(__cdecl, &&, noexcept) \
	func(__vectorcall, MUU_BLANK, MUU_BLANK) \
	func(__vectorcall, MUU_BLANK, noexcept) \
	func(__vectorcall, &, MUU_BLANK) \
	func(__vectorcall, &, noexcept) \
	func(__vectorcall, &&, MUU_BLANK) \
	func(__vectorcall, &&, noexcept) \
	func(__stdcall, MUU_BLANK, MUU_BLANK) \
	func(__stdcall, MUU_BLANK, noexcept) \
	func(__stdcall, &, MUU_BLANK) \
	func(__stdcall, &, noexcept) \
	func(__stdcall, &&, MUU_BLANK) \
	func(__stdcall, &&, noexcept) \
	func(__fastcall, MUU_BLANK, MUU_BLANK) \
	func(__fastcall, MUU_BLANK, noexcept) \
	func(__fastcall, &, MUU_BLANK) \
	func(__fastcall, &, noexcept) \
	func(__fastcall, &&, MUU_BLANK) \
	func(__fastcall, &&, noexcept) \
	func(__thiscall, MUU_BLANK, MUU_BLANK) \
	func(__thiscall, MUU_BLANK, noexcept) \
	func(__thiscall, &, MUU_BLANK) \
	func(__thiscall, &, noexcept) \
	func(__thiscall, &&, MUU_BLANK) \
	func(__thiscall, &&, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT(func) \
	func(__cdecl, MUU_BLANK, MUU_BLANK) \
	func(__cdecl, MUU_BLANK, noexcept) \
	func(__cdecl, &, MUU_BLANK) \
	func(__cdecl, &, noexcept) \
	func(__cdecl, &&, MUU_BLANK) \
	func(__cdecl, &&, noexcept) \
	func(__cdecl, const, MUU_BLANK) \
	func(__cdecl, const, noexcept) \
	func(__cdecl, const&, MUU_BLANK) \
	func(__cdecl, const&, noexcept) \
	func(__cdecl, const&&, MUU_BLANK) \
	func(__cdecl, const&&, noexcept) \
	func(__cdecl, volatile, MUU_BLANK) \
	func(__cdecl, volatile, noexcept) \
	func(__cdecl, volatile&, MUU_BLANK) \
	func(__cdecl, volatile&, noexcept) \
	func(__cdecl, volatile&&, MUU_BLANK) \
	func(__cdecl, volatile&&, noexcept) \
	func(__cdecl, const volatile, MUU_BLANK) \
	func(__cdecl, const volatile, noexcept) \
	func(__cdecl, const volatile&, MUU_BLANK) \
	func(__cdecl, const volatile&, noexcept) \
	func(__cdecl, const volatile&&, MUU_BLANK) \
	func(__cdecl, const volatile&&, noexcept) \
	func(__vectorcall, MUU_BLANK, MUU_BLANK) \
	func(__vectorcall, MUU_BLANK, noexcept) \
	func(__vectorcall, &, MUU_BLANK) \
	func(__vectorcall, &, noexcept) \
	func(__vectorcall, &&, MUU_BLANK) \
	func(__vectorcall, &&, noexcept) \
	func(__vectorcall, const, MUU_BLANK) \
	func(__vectorcall, const, noexcept) \
	func(__vectorcall, const&, MUU_BLANK) \
	func(__vectorcall, const&, noexcept) \
	func(__vectorcall, const&&, MUU_BLANK) \
	func(__vectorcall, const&&, noexcept) \
	func(__vectorcall, volatile, MUU_BLANK) \
	func(__vectorcall, volatile, noexcept) \
	func(__vectorcall, volatile&, MUU_BLANK) \
	func(__vectorcall, volatile&, noexcept) \
	func(__vectorcall, volatile&&, MUU_BLANK) \
	func(__vectorcall, volatile&&, noexcept) \
	func(__vectorcall, const volatile, MUU_BLANK) \
	func(__vectorcall, const volatile, noexcept) \
	func(__vectorcall, const volatile&, MUU_BLANK) \
	func(__vectorcall, const volatile&, noexcept) \
	func(__vectorcall, const volatile&&, MUU_BLANK) \
	func(__vectorcall, const volatile&&, noexcept) \
	func(__stdcall, MUU_BLANK, MUU_BLANK) \
	func(__stdcall, MUU_BLANK, noexcept) \
	func(__stdcall, &, MUU_BLANK) \
	func(__stdcall, &, noexcept) \
	func(__stdcall, &&, MUU_BLANK) \
	func(__stdcall, &&, noexcept) \
	func(__stdcall, const, MUU_BLANK) \
	func(__stdcall, const, noexcept) \
	func(__stdcall, const&, MUU_BLANK) \
	func(__stdcall, const&, noexcept) \
	func(__stdcall, const&&, MUU_BLANK) \
	func(__stdcall, const&&, noexcept) \
	func(__stdcall, volatile, MUU_BLANK) \
	func(__stdcall, volatile, noexcept) \
	func(__stdcall, volatile&, MUU_BLANK) \
	func(__stdcall, volatile&, noexcept) \
	func(__stdcall, volatile&&, MUU_BLANK) \
	func(__stdcall, volatile&&, noexcept) \
	func(__stdcall, const volatile, MUU_BLANK) \
	func(__stdcall, const volatile, noexcept) \
	func(__stdcall, const volatile&, MUU_BLANK) \
	func(__stdcall, const volatile&, noexcept) \
	func(__stdcall, const volatile&&, MUU_BLANK) \
	func(__stdcall, const volatile&&, noexcept) \
	func(__fastcall, MUU_BLANK, MUU_BLANK) \
	func(__fastcall, MUU_BLANK, noexcept) \
	func(__fastcall, &, MUU_BLANK) \
	func(__fastcall, &, noexcept) \
	func(__fastcall, &&, MUU_BLANK) \
	func(__fastcall, &&, noexcept) \
	func(__fastcall, const, MUU_BLANK) \
	func(__fastcall, const, noexcept) \
	func(__fastcall, const&, MUU_BLANK) \
	func(__fastcall, const&, noexcept) \
	func(__fastcall, const&&, MUU_BLANK) \
	func(__fastcall, const&&, noexcept) \
	func(__fastcall, volatile, MUU_BLANK) \
	func(__fastcall, volatile, noexcept) \
	func(__fastcall, volatile&, MUU_BLANK) \
	func(__fastcall, volatile&, noexcept) \
	func(__fastcall, volatile&&, MUU_BLANK) \
	func(__fastcall, volatile&&, noexcept) \
	func(__fastcall, const volatile, MUU_BLANK) \
	func(__fastcall, const volatile, noexcept) \
	func(__fastcall, const volatile&, MUU_BLANK) \
	func(__fastcall, const volatile&, noexcept) \
	func(__fastcall, const volatile&&, MUU_BLANK) \
	func(__fastcall, const volatile&&, noexcept) \
	func(__thiscall, MUU_BLANK, MUU_BLANK) \
	func(__thiscall, MUU_BLANK, noexcept) \
	func(__thiscall, &, MUU_BLANK) \
	func(__thiscall, &, noexcept) \
	func(__thiscall, &&, MUU_BLANK) \
	func(__thiscall, &&, noexcept) \
	func(__thiscall, const, MUU_BLANK) \
	func(__thiscall, const, noexcept) \
	func(__thiscall, const&, MUU_BLANK) \
	func(__thiscall, const&, noexcept) \
	func(__thiscall, const&&, MUU_BLANK) \
	func(__thiscall, const&&, noexcept) \
	func(__thiscall, volatile, MUU_BLANK) \
	func(__thiscall, volatile, noexcept) \
	func(__thiscall, volatile&, MUU_BLANK) \
	func(__thiscall, volatile&, noexcept) \
	func(__thiscall, volatile&&, MUU_BLANK) \
	func(__thiscall, volatile&&, noexcept) \
	func(__thiscall, const volatile, MUU_BLANK) \
	func(__thiscall, const volatile, noexcept) \
	func(__thiscall, const volatile&, MUU_BLANK) \
	func(__thiscall, const volatile&, noexcept) \
	func(__thiscall, const volatile&&, MUU_BLANK) \
	func(__thiscall, const volatile&&, noexcept)
#endif

#elif !defined(_WIN32)

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV
#define MUU_FOR_EACH_MEMBER_CALLCONV(func) \
	func(MUU_BLANK)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CV
#define MUU_FOR_EACH_MEMBER_CALLCONV_CV(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, const) \
	func(MUU_BLANK, volatile) \
	func(MUU_BLANK, const volatile)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_REF
#define MUU_FOR_EACH_MEMBER_CALLCONV_REF(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, &) \
	func(MUU_BLANK, &&)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CVREF
#define MUU_FOR_EACH_MEMBER_CALLCONV_CVREF(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, &) \
	func(MUU_BLANK, &&) \
	func(MUU_BLANK, const) \
	func(MUU_BLANK, const&) \
	func(MUU_BLANK, const&&) \
	func(MUU_BLANK, volatile) \
	func(MUU_BLANK, volatile&) \
	func(MUU_BLANK, volatile&&) \
	func(MUU_BLANK, const volatile) \
	func(MUU_BLANK, const volatile&) \
	func(MUU_BLANK, const volatile&&)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_CV_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, MUU_BLANK, noexcept) \
	func(MUU_BLANK, const, MUU_BLANK) \
	func(MUU_BLANK, const, noexcept) \
	func(MUU_BLANK, volatile, MUU_BLANK) \
	func(MUU_BLANK, volatile, noexcept) \
	func(MUU_BLANK, const volatile, MUU_BLANK) \
	func(MUU_BLANK, const volatile, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_REF_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, MUU_BLANK, noexcept) \
	func(MUU_BLANK, &, MUU_BLANK) \
	func(MUU_BLANK, &, noexcept) \
	func(MUU_BLANK, &&, MUU_BLANK) \
	func(MUU_BLANK, &&, noexcept)
#endif

#ifndef MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT
#define MUU_FOR_EACH_MEMBER_CALLCONV_CVREF_NOEXCEPT(func) \
	func(MUU_BLANK, MUU_BLANK, MUU_BLANK) \
	func(MUU_BLANK, MUU_BLANK, noexcept) \
	func(MUU_BLANK, &, MUU_BLANK) \
	func(MUU_BLANK, &, noexcept) \
	func(MUU_BLANK, &&, MUU_BLANK) \
	func(MUU_BLANK, &&, noexcept) \
	func(MUU_BLANK, const, MUU_BLANK) \
	func(MUU_BLANK, const, noexcept) \
	func(MUU_BLANK, const&, MUU_BLANK) \
	func(MUU_BLANK, const&, noexcept) \
	func(MUU_BLANK, const&&, MUU_BLANK) \
	func(MUU_BLANK, const&&, noexcept) \
	func(MUU_BLANK, volatile, MUU_BLANK) \
	func(MUU_BLANK, volatile, noexcept) \
	func(MUU_BLANK, volatile&, MUU_BLANK) \
	func(MUU_BLANK, volatile&, noexcept) \
	func(MUU_BLANK, volatile&&, MUU_BLANK) \
	func(MUU_BLANK, volatile&&, noexcept) \
	func(MUU_BLANK, const volatile, MUU_BLANK) \
	func(MUU_BLANK, const volatile, noexcept) \
	func(MUU_BLANK, const volatile&, MUU_BLANK) \
	func(MUU_BLANK, const volatile&, noexcept) \
	func(MUU_BLANK, const volatile&&, MUU_BLANK) \
	func(MUU_BLANK, const volatile&&, noexcept)
#endif

#endif

// clang-format on
/// \endcond
