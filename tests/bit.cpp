// This file is a part of muu and is subject to the the terms of the MIT license.
// Copyright (c) Mark Gillard <mark.gillard@outlook.com.au>
// See https://github.com/marzer/muu/blob/master/LICENSE for the full license text.
// SPDX-License-Identifier: MIT

#include "tests.h"
#include "../include/muu/bit.h"

TEST_CASE("bit - countl_zero")
{
	#if MUU_HAS_INT128
	SECTION("uint128_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000000_u64)) == 128);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000001_u64)) == 127);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000011_u64)) == 126);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000111_u64)) == 125);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000001111_u64)) == 124);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000011111_u64)) == 123);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000111111_u64)) == 122);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000001111111_u64)) == 121);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000011111111_u64)) == 120);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000111111111_u64)) == 119);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000001111111111_u64)) == 118);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000011111111111_u64)) == 117);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000111111111111_u64)) == 116);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000001111111111111_u64)) == 115);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000011111111111111_u64)) == 114);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000111111111111111_u64)) == 113);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000001111111111111111_u64)) == 112);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000011111111111111111_u64)) == 111);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000111111111111111111_u64)) == 110);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000001111111111111111111_u64)) == 109);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000011111111111111111111_u64)) == 108);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000111111111111111111111_u64)) == 107);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000001111111111111111111111_u64)) == 106);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000011111111111111111111111_u64)) == 105);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000111111111111111111111111_u64)) == 104);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000001111111111111111111111111_u64)) == 103);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000011111111111111111111111111_u64)) == 102);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000111111111111111111111111111_u64)) == 101);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000001111111111111111111111111111_u64)) == 100);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000011111111111111111111111111111_u64)) == 99);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000111111111111111111111111111111_u64)) == 98);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000001111111111111111111111111111111_u64)) == 97);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000011111111111111111111111111111111_u64)) == 96);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000111111111111111111111111111111111_u64)) == 95);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000001111111111111111111111111111111111_u64)) == 94);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000011111111111111111111111111111111111_u64)) == 93);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000111111111111111111111111111111111111_u64)) == 92);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000001111111111111111111111111111111111111_u64)) == 91);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000011111111111111111111111111111111111111_u64)) == 90);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000111111111111111111111111111111111111111_u64)) == 89);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000001111111111111111111111111111111111111111_u64)) == 88);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000011111111111111111111111111111111111111111_u64)) == 87);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000111111111111111111111111111111111111111111_u64)) == 86);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000001111111111111111111111111111111111111111111_u64)) == 85);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000011111111111111111111111111111111111111111111_u64)) == 84);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000000111111111111111111111111111111111111111111111_u64)) == 83);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000001111111111111111111111111111111111111111111111_u64)) == 82);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000011111111111111111111111111111111111111111111111_u64)) == 81);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000000111111111111111111111111111111111111111111111111_u64)) == 80);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000001111111111111111111111111111111111111111111111111_u64)) == 79);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000011111111111111111111111111111111111111111111111111_u64)) == 78);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000000111111111111111111111111111111111111111111111111111_u64)) == 77);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000001111111111111111111111111111111111111111111111111111_u64)) == 76);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000011111111111111111111111111111111111111111111111111111_u64)) == 75);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000000111111111111111111111111111111111111111111111111111111_u64)) == 74);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000001111111111111111111111111111111111111111111111111111111_u64)) == 73);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000011111111111111111111111111111111111111111111111111111111_u64)) == 72);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000000111111111111111111111111111111111111111111111111111111111_u64)) == 71);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000001111111111111111111111111111111111111111111111111111111111_u64)) == 70);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000011111111111111111111111111111111111111111111111111111111111_u64)) == 69);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0000111111111111111111111111111111111111111111111111111111111111_u64)) == 68);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0001111111111111111111111111111111111111111111111111111111111111_u64)) == 67);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0011111111111111111111111111111111111111111111111111111111111111_u64)) == 66);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0x0000000000000000_u64, 0b0111111111111111111111111111111111111111111111111111111111111111_u64)) == 65);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000000_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 64);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000001_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 63);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000011_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 62);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 61);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000001111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 60);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000011111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 59);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 58);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000001111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 57);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000011111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 56);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 55);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000001111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 54);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000011111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 53);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 52);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000001111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 51);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000011111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 50);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000000111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 49);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000001111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 48);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000011111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 47);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000000111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 46);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000001111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 45);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000011111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 44);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000000111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 43);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000001111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 42);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000011111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 41);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000000111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 40);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000001111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 39);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000011111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 38);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000000111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 37);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000001111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 36);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000011111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 35);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000000111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 34);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000001111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 33);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000011111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 32);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000000111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 31);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000001111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 30);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000011111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 29);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000000111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 28);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000001111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 27);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000011111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 26);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000000111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 25);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000001111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 24);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000011111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 23);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000000111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 22);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000001111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 21);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000011111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 20);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000000111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 19);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000001111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 18);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000011111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 17);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000000111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 16);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000001111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 15);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000011111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 14);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000000111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 13);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000001111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 12);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000011111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 11);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000000111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 10);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000001111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 9);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000011111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 8);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000000111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 7);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000001111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 6);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000011111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 5);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0000111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 4);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0001111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 3);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0011111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 2);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b0111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 1);
		CHECK_AND_STATIC_ASSERT(countl_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 0);
	}
	#endif

	SECTION("uint64_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000000000_u64) == 64);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000000001_u64) == 63);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000000011_u64) == 62);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000000111_u64) == 61);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000001111_u64) == 60);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000011111_u64) == 59);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000000111111_u64) == 58);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000001111011_u64) == 57);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000011111011_u64) == 56);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000000111111111_u64) == 55);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000001111111111_u64) == 54);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000011111111011_u64) == 53);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000000111111111111_u64) == 52);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000001111111110111_u64) == 51);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000011111111111111_u64) == 50);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000000111111111011111_u64) == 49);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000001111111111111111_u64) == 48);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000011111111111111111_u64) == 47);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000000111111111111111111_u64) == 46);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000001111111111011111111_u64) == 45);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000011111111111111111111_u64) == 44);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000000111111111110111111111_u64) == 43);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000001111111111111111111111_u64) == 42);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000011111111111111111111111_u64) == 41);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000000111111111111111111111111_u64) == 40);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000001111111111111110111111111_u64) == 39);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000011111111111111111111111111_u64) == 38);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000000111111111111111111111111111_u64) == 37);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000001111111111111111111111111111_u64) == 36);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000011111111111111110111011111111_u64) == 35);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000000111111111111111111111111111111_u64) == 34);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000001111111111111111111101111111111_u64) == 33);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000011111111111111101111111111111111_u64) == 32);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000000111111111111111111111111111111111_u64) == 31);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000001111111111111111111111111111111111_u64) == 30);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000011111111111111111111111111111111111_u64) == 29);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000000111111111101111111111111101111111111_u64) == 28);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000001111111111111111111101111111111111111_u64) == 27);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000011111111111111111111111111111111111111_u64) == 26);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000000111111111111111111111111111111111111111_u64) == 25);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000001111111111111111011111111111111111111111_u64) == 24);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000011111111111111011111111111111111111111111_u64) == 23);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000000111111111111111111111111111101100111111111_u64) == 22);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000001111111101111111111111111111111111111111111_u64) == 21);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000011111111111111101111111101111111111111111111_u64) == 20);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000000111111111101111111111111111111111111111111111_u64) == 19);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000001111111111111110111111101111111111111011111111_u64) == 18);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000011111111111111111111111111111111111111111111111_u64) == 17);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000111111111111111111111111111111111111111111111111_u64) == 16);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000001111111111101111111111111111111111110111111111111_u64) == 15);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000011111111111111110110111111111111111111111111111111_u64) == 14);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000111111111111111111111111111111111111111110111111111_u64) == 13);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000001111111110111111111111111111111111111111111111111111_u64) == 12);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000011111111111111111111111111101111111111111111111111111_u64) == 11);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000111111111111111111101111111101111111101111111111111111_u64) == 10);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000001111111101111111110111111111111111101111111111011111111_u64) == 9);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000011111111111111111101111101111111111111111111111111111111_u64) == 8);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000111111111111111110111111111111111111111111111110111111111_u64) == 7);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000001111111111111111111111111111011111111101111111111111111111_u64) == 6);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000011111111110111111111111111111111111111111111111111111111111_u64) == 5);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000111111111111111011111111101111111111111111111111111111111111_u64) == 4);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0001111111111111011111111111111111111111111111111110111111111111_u64) == 3);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0011111111111111111111111111111111111011111111011111111111111111_u64) == 2);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0111111111101111111111111111111111111111111111111111111111111111_u64) == 1);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b1111111111111111111111111111111111111111111111111111111111111111_u64) == 0);
	}

	SECTION("uint32_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000000000_u32) == 32);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000000001_u32) == 31);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000000011_u32) == 30);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000000111_u32) == 29);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000001111_u32) == 28);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000011111_u32) == 27);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000000111111_u32) == 26);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000001110111_u32) == 25);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000011111011_u32) == 24);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000000111111111_u32) == 23);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000001111011111_u32) == 22);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000011111101111_u32) == 21);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000000111111011111_u32) == 20);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000001111101111111_u32) == 19);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000011111111001111_u32) == 18);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000000111111111111111_u32) == 17);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000001111101111111101_u32) == 16);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000011110111011111111_u32) == 15);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000000111111111111011111_u32) == 14);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000001111110111111111111_u32) == 13);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000011111110111111111101_u32) == 12);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000000111111011011101111111_u32) == 11);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000001110111011111111011111_u32) == 10);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000011111111111111111011111_u32) == 9);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000111101111111111110111111_u32) == 8);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000001111111110111101111111111_u32) == 7);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000011111011101111111111111111_u32) == 6);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000111011111111111111001111111_u32) == 5);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00001111111111011111111111111111_u32) == 4);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00011111110011111011111110111111_u32) == 3);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00111110111111111111111111111110_u32) == 2);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b01111011101111101111101110011111_u32) == 1);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b11111111111011111111111111111111_u32) == 0);
	}

	SECTION("uint16_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000000_u16) == 16);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000001_u16) == 15);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000011_u16) == 14);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000000111_u16) == 13);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000001111_u16) == 12);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000011111_u16) == 11);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000000111011_u16) == 10);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000001101111_u16) == 9);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000011101101_u16) == 8);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000000110100111_u16) == 7);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000001111101111_u16) == 6);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000011011101111_u16) == 5);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0000111111111101_u16) == 4);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0001111011011011_u16) == 3);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0011101111011111_u16) == 2);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b0111111111111101_u16) == 1);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b1111001111011111_u16) == 0);
	}

	SECTION("uint8_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000000_u8) == 8);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000001_u8) == 7);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000011_u8) == 6);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00000101_u8) == 5);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00001110_u8) == 4);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00011011_u8) == 3);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b00111111_u8) == 2);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b01110011_u8) == 1);
		CHECK_AND_STATIC_ASSERT(countl_zero(0b11011011_u8) == 0);
	}
}

TEST_CASE("bit - countr_zero")
{
	#if MUU_HAS_INT128
	SECTION("uint128_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 128);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1000000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 127);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1100000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 126);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1110000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 125);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 124);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111100000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 123);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111110000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 122);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 121);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111100000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 120);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111110000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 119);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 118);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111100000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 117);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111110000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 116);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 115);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111100000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 114);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111110000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 113);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 112);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111100000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 111);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111110000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 110);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 109);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111100000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 108);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111110000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 107);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 106);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111100000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 105);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111110000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 104);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 103);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111100000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 102);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111110000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 101);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 100);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111100000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 99);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111110000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 98);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 97);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111100000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 96);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111110000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 95);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 94);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111100000000000000000000000000000_u64, 0x0000000000000000_u64)) == 93);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111110000000000000000000000000000_u64, 0x0000000000000000_u64)) == 92);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111000000000000000000000000000_u64, 0x0000000000000000_u64)) == 91);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111100000000000000000000000000_u64, 0x0000000000000000_u64)) == 90);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111110000000000000000000000000_u64, 0x0000000000000000_u64)) == 89);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111000000000000000000000000_u64, 0x0000000000000000_u64)) == 88);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111100000000000000000000000_u64, 0x0000000000000000_u64)) == 87);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111110000000000000000000000_u64, 0x0000000000000000_u64)) == 86);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111000000000000000000000_u64, 0x0000000000000000_u64)) == 85);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111100000000000000000000_u64, 0x0000000000000000_u64)) == 84);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111110000000000000000000_u64, 0x0000000000000000_u64)) == 83);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111000000000000000000_u64, 0x0000000000000000_u64)) == 82);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111100000000000000000_u64, 0x0000000000000000_u64)) == 81);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111110000000000000000_u64, 0x0000000000000000_u64)) == 80);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111000000000000000_u64, 0x0000000000000000_u64)) == 79);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111100000000000000_u64, 0x0000000000000000_u64)) == 78);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111110000000000000_u64, 0x0000000000000000_u64)) == 77);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111000000000000_u64, 0x0000000000000000_u64)) == 76);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111100000000000_u64, 0x0000000000000000_u64)) == 75);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111110000000000_u64, 0x0000000000000000_u64)) == 74);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111000000000_u64, 0x0000000000000000_u64)) == 73);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111100000000_u64, 0x0000000000000000_u64)) == 72);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111110000000_u64, 0x0000000000000000_u64)) == 71);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111000000_u64, 0x0000000000000000_u64)) == 70);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111100000_u64, 0x0000000000000000_u64)) == 69);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111110000_u64, 0x0000000000000000_u64)) == 68);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111000_u64, 0x0000000000000000_u64)) == 67);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111100_u64, 0x0000000000000000_u64)) == 66);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111110_u64, 0x0000000000000000_u64)) == 65);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0x0000000000000000_u64)) == 64);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1000000000000000000000000000000000000000000000000000000000000000_u64)) == 63);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1100000000000000000000000000000000000000000000000000000000000000_u64)) == 62);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1110000000000000000000000000000000000000000000000000000000000000_u64)) == 61);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111000000000000000000000000000000000000000000000000000000000000_u64)) == 60);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111100000000000000000000000000000000000000000000000000000000000_u64)) == 59);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111110000000000000000000000000000000000000000000000000000000000_u64)) == 58);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111000000000000000000000000000000000000000000000000000000000_u64)) == 57);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111100000000000000000000000000000000000000000000000000000000_u64)) == 56);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111110000000000000000000000000000000000000000000000000000000_u64)) == 55);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111000000000000000000000000000000000000000000000000000000_u64)) == 54);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111100000000000000000000000000000000000000000000000000000_u64)) == 53);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111110000000000000000000000000000000000000000000000000000_u64)) == 52);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111000000000000000000000000000000000000000000000000000_u64)) == 51);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111100000000000000000000000000000000000000000000000000_u64)) == 50);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111110000000000000000000000000000000000000000000000000_u64)) == 49);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111000000000000000000000000000000000000000000000000_u64)) == 48);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111100000000000000000000000000000000000000000000000_u64)) == 47);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111110000000000000000000000000000000000000000000000_u64)) == 46);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111000000000000000000000000000000000000000000000_u64)) == 45);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111100000000000000000000000000000000000000000000_u64)) == 44);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111110000000000000000000000000000000000000000000_u64)) == 43);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111000000000000000000000000000000000000000000_u64)) == 42);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111100000000000000000000000000000000000000000_u64)) == 41);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111110000000000000000000000000000000000000000_u64)) == 40);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111000000000000000000000000000000000000000_u64)) == 39);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111100000000000000000000000000000000000000_u64)) == 38);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111110000000000000000000000000000000000000_u64)) == 37);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111000000000000000000000000000000000000_u64)) == 36);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111100000000000000000000000000000000000_u64)) == 35);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111110000000000000000000000000000000000_u64)) == 34);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111000000000000000000000000000000000_u64)) == 33);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111100000000000000000000000000000000_u64)) == 32);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111110000000000000000000000000000000_u64)) == 31);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111000000000000000000000000000000_u64)) == 30);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111100000000000000000000000000000_u64)) == 29);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111110000000000000000000000000000_u64)) == 28);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111000000000000000000000000000_u64)) == 27);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111100000000000000000000000000_u64)) == 26);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111110000000000000000000000000_u64)) == 25);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111000000000000000000000000_u64)) == 24);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111100000000000000000000000_u64)) == 23);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111110000000000000000000000_u64)) == 22);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111000000000000000000000_u64)) == 21);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111100000000000000000000_u64)) == 20);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111110000000000000000000_u64)) == 19);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111000000000000000000_u64)) == 18);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111100000000000000000_u64)) == 17);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111110000000000000000_u64)) == 16);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111000000000000000_u64)) == 15);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111100000000000000_u64)) == 14);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111110000000000000_u64)) == 13);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111000000000000_u64)) == 12);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111100000000000_u64)) == 11);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111110000000000_u64)) == 10);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111000000000_u64)) == 9);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111100000000_u64)) == 8);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111110000000_u64)) == 7);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111000000_u64)) == 6);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111100000_u64)) == 5);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111110000_u64)) == 4);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111000_u64)) == 3);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111100_u64)) == 2);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111110_u64)) == 1);
		CHECK_AND_STATIC_ASSERT(countr_zero(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111111_u64)) == 0);
	}
	#endif

	SECTION("uint64_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_zero(0b0000000000000000000000000000000000000000000000000000000000000000_u64) == 64);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1000000000000000000000000000000000000000000000000000000000000000_u64) == 63);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1100000000000000000000000000000000000000000000000000000000000000_u64) == 62);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1110000000000000000000000000000000000000000000000000000000000000_u64) == 61);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111000000000000000000000000000000000000000000000000000000000000_u64) == 60);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111100000000000000000000000000000000000000000000000000000000000_u64) == 59);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111110000000000000000000000000000000000000000000000000000000000_u64) == 58);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1110111000000000000000000000000000000000000000000000000000000000_u64) == 57);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111100000000000000000000000000000000000000000000000000000000_u64) == 56);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111110000000000000000000000000000000000000000000000000000000_u64) == 55);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111100111000000000000000000000000000000000000000000000000000000_u64) == 54);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111100000000000000000000000000000000000000000000000000000_u64) == 53);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111010000000000000000000000000000000000000000000000000000_u64) == 52);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111011111111000000000000000000000000000000000000000000000000000_u64) == 51);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111100000000000000000000000000000000000000000000000000_u64) == 50);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111011111110000000000000000000000000000000000000000000000000_u64) == 49);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111000000000000000000000000000000000000000000000000_u64) == 48);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111110101111111100000000000000000000000000000000000000000000000_u64) == 47);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1011101110111111110000000000000000000000000000000000000000000000_u64) == 46);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111000000000000000000000000000000000000000000000_u64) == 45);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1101111111111111111100000000000000000000000000000000000000000000_u64) == 44);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111110111110000000000000000000000000000000000000000000_u64) == 43);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111101111111111111000000000000000000000000000000000000000000_u64) == 42);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111101111111111110111100000000000000000000000000000000000000000_u64) == 41);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111110111111111110000000000000000000000000000000000000000_u64) == 40);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111101111111111111111000000000000000000000000000000000000000_u64) == 39);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b0001111011111111111110111100000000000000000000000000000000000000_u64) == 38);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111110111111111111110000000000000000000000000000000000000_u64) == 37);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111110111111000000000000000000000000000000000000_u64) == 36);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111011110001111111110111111100000000000000000000000000000000000_u64) == 35);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1110111111111111111011011111110000000000000000000000000000000000_u64) == 34);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111110111111111111111000000000000000000000000000000000_u64) == 33);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111110111111111111101111111100000000000000000000000000000000_u64) == 32);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111110000000000000000000000000000000_u64) == 31);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111011111111011111011111011111111000000000000000000000000000000_u64) == 30);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111100000000000000000000000000000_u64) == 29);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111110000000000000000000000000000_u64) == 28);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111110111011111111111011011111111111000000000000000000000000000_u64) == 27);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111111100000000000000000000000000_u64) == 26);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111110110111110111111011111111110000000000000000000000000_u64) == 25);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111111111000000000000000000000000_u64) == 24);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111111111100000000000000000000000_u64) == 23);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111011111110111111111011011101111111110000000000000000000000_u64) == 22);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111110111111111111111111111111111111111000000000000000000000_u64) == 21);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111011111111111111111111111100000000000000000000_u64) == 20);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111011111111111111111111110000000000000000000_u64) == 19);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111101111111110111111111111111111111111011000000000000000000_u64) == 18);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111011111111101111111111100000000000000000_u64) == 17);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111101111011111111111111111011111111110000000000000000_u64) == 16);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111110111110111111111111111111111111111111111000000000000000_u64) == 15);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111011110111111111111111111111111111111101111111100000000000000_u64) == 14);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111101111111111111111111111111110000000000000_u64) == 13);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111110111011111111111111111111111111111111111111000000000000_u64) == 12);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111011111111111111111111111111111111111111111100000000000_u64) == 11);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111101111111110111111111111111110111111110000000000_u64) == 10);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111101111111111111111111101111111111111111111000000000_u64) == 9);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111100111111111111111111111111111100000000_u64) == 8);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111101111111111111111111111111111111111110000000_u64) == 7);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1000011111101111011111111111111001111111111111101111111111000000_u64) == 6);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111110111111011111111111111111111111111111111111111111111100000_u64) == 5);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111101111111111111111111111111111111111111111111111110000_u64) == 4);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111110111111111111111111111111111111111110111111111111111111000_u64) == 3);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111011111111111111111111111111111101111111111100_u64) == 2);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111111111111111111111111111111110_u64) == 1);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111111111111111111111111111111111111111111111111111_u64) == 0);
	}

	SECTION("uint32_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_zero(0b00000000000000000000000000000000_u32) == 32);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b10000000000000000000000000000000_u32) == 31);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11000000000000000000000000000000_u32) == 30);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11100000000000000000000000000000_u32) == 29);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11110000000000000000000000000000_u32) == 28);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111000000000000000000000000000_u32) == 27);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111100000000000000000000000000_u32) == 26);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110000000000000000000000000_u32) == 25);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11101111000000000000000000000000_u32) == 24);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11110111100000000000000000000000_u32) == 23);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111111110000000000000000000000_u32) == 22);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111101111000000000000000000000_u32) == 21);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111011111100000000000000000000_u32) == 20);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110111110000000000000000000_u32) == 19);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11011111111111000000000000000000_u32) == 18);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111111111111100000000000000000_u32) == 17);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110111111110000000000000000_u32) == 16);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11101110111011111000000000000000_u32) == 15);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111011111111111100000000000000_u32) == 14);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11101111111111111110000000000000_u32) == 13);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110101111111111000000000000_u32) == 12);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b10111111111111111111100000000000_u32) == 11);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110111111111111110000000000_u32) == 10);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111001111111101111111000000000_u32) == 9);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b10111111111111111111111100000000_u32) == 8);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111010111111111101111110000000_u32) == 7);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11110111111111111111111111000000_u32) == 6);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111111111111111111111111100000_u32) == 5);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111101010111111111111101110000_u32) == 4);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11110111111111110011111111111000_u32) == 3);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111111111111111101111111111100_u32) == 2);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11110111001101111111111111111110_u32) == 1);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110111111111111111111111111_u32) == 0);
	}

	SECTION("uint16_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_zero(0b0000000000000000_u16) == 16);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1000000000000000_u16) == 15);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1100000000000000_u16) == 14);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1110000000000000_u16) == 13);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111000000000000_u16) == 12);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1101100000000000_u16) == 11);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111110000000000_u16) == 10);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111000000000_u16) == 9);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1101111100000000_u16) == 8);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111110000000_u16) == 7);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1110111111000000_u16) == 6);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111100000_u16) == 5);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111110000_u16) == 4);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111011111000_u16) == 3);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111100_u16) == 2);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111101111111010_u16) == 1);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b1111111111111111_u16) == 0);
	}

	SECTION("uint8_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_zero(0b00000000_u8) == 8);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b10000000_u8) == 7);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11000000_u8) == 6);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b10100000_u8) == 5);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11110000_u8) == 4);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b01111000_u8) == 3);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11011100_u8) == 2);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b11111110_u8) == 1);
		CHECK_AND_STATIC_ASSERT(countr_zero(0b10001111_u8) == 0);
	}
}

TEST_CASE("bit - countl_one")
{
	#if MUU_HAS_INT128
	SECTION("uint128_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 0  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1000000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 1  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1100000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 2  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1110000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 3  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 4  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111100000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 5  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111110000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 6  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 7  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111100000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 8  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111110000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 9  );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 10 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111100000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 11 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111110000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 12 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 13 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111100000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 14 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111110000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 15 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 16 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111100000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 17 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111110000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 18 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 19 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111100000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 20 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111110000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 21 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 22 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111100000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 23 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111110000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 24 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111000000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 25 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111100000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 26 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111110000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 27 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111000000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 28 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111100000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 29 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111110000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 30 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111000000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 31 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111100000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 32 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111110000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 33 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111000000000000000000000000000000_u64, 0x0000000000000000_u64)) == 34 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111100000000000000000000000000000_u64, 0x0000000000000000_u64)) == 35 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111110000000000000000000000000000_u64, 0x0000000000000000_u64)) == 36 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111000000000000000000000000000_u64, 0x0000000000000000_u64)) == 37 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111100000000000000000000000000_u64, 0x0000000000000000_u64)) == 38 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111110000000000000000000000000_u64, 0x0000000000000000_u64)) == 39 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111000000000000000000000000_u64, 0x0000000000000000_u64)) == 40 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111100000000000000000000000_u64, 0x0000000000000000_u64)) == 41 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111110000000000000000000000_u64, 0x0000000000000000_u64)) == 42 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111000000000000000000000_u64, 0x0000000000000000_u64)) == 43 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111100000000000000000000_u64, 0x0000000000000000_u64)) == 44 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111110000000000000000000_u64, 0x0000000000000000_u64)) == 45 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111000000000000000000_u64, 0x0000000000000000_u64)) == 46 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111100000000000000000_u64, 0x0000000000000000_u64)) == 47 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111110000000000000000_u64, 0x0000000000000000_u64)) == 48 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111000000000000000_u64, 0x0000000000000000_u64)) == 49 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111100000000000000_u64, 0x0000000000000000_u64)) == 50 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111110000000000000_u64, 0x0000000000000000_u64)) == 51 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111000000000000_u64, 0x0000000000000000_u64)) == 52 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111100000000000_u64, 0x0000000000000000_u64)) == 53 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111110000000000_u64, 0x0000000000000000_u64)) == 54 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111000000000_u64, 0x0000000000000000_u64)) == 55 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111100000000_u64, 0x0000000000000000_u64)) == 56 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111110000000_u64, 0x0000000000000000_u64)) == 57 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111000000_u64, 0x0000000000000000_u64)) == 58 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111100000_u64, 0x0000000000000000_u64)) == 59 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111110000_u64, 0x0000000000000000_u64)) == 60 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111000_u64, 0x0000000000000000_u64)) == 61 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111100_u64, 0x0000000000000000_u64)) == 62 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111110_u64, 0x0000000000000000_u64)) == 63 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0x0000000000000000_u64)) == 64 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1000000000000000000000000000000000000000000000000000000000000000_u64)) == 65 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1100000000000000000000000000000000000000000000000000000000000000_u64)) == 66 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1110000000000000000000000000000000000000000000000000000000000000_u64)) == 67 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111000000000000000000000000000000000000000000000000000000000000_u64)) == 68 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111100000000000000000000000000000000000000000000000000000000000_u64)) == 69 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111110000000000000000000000000000000000000000000000000000000000_u64)) == 70 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111000000000000000000000000000000000000000000000000000000000_u64)) == 71 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111100000000000000000000000000000000000000000000000000000000_u64)) == 72 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111110000000000000000000000000000000000000000000000000000000_u64)) == 73 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111000000000000000000000000000000000000000000000000000000_u64)) == 74 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111100000000000000000000000000000000000000000000000000000_u64)) == 75 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111110000000000000000000000000000000000000000000000000000_u64)) == 76 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111000000000000000000000000000000000000000000000000000_u64)) == 77 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111100000000000000000000000000000000000000000000000000_u64)) == 78 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111110000000000000000000000000000000000000000000000000_u64)) == 79 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111000000000000000000000000000000000000000000000000_u64)) == 80 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111100000000000000000000000000000000000000000000000_u64)) == 81 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111110000000000000000000000000000000000000000000000_u64)) == 82 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111000000000000000000000000000000000000000000000_u64)) == 83 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111100000000000000000000000000000000000000000000_u64)) == 84 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111110000000000000000000000000000000000000000000_u64)) == 85 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111000000000000000000000000000000000000000000_u64)) == 86 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111100000000000000000000000000000000000000000_u64)) == 87 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111110000000000000000000000000000000000000000_u64)) == 88 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111000000000000000000000000000000000000000_u64)) == 89 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111100000000000000000000000000000000000000_u64)) == 90 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111110000000000000000000000000000000000000_u64)) == 91 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111000000000000000000000000000000000000_u64)) == 92 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111100000000000000000000000000000000000_u64)) == 93 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111110000000000000000000000000000000000_u64)) == 94 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111000000000000000000000000000000000_u64)) == 95 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111100000000000000000000000000000000_u64)) == 96 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111110000000000000000000000000000000_u64)) == 97 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111000000000000000000000000000000_u64)) == 98 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111100000000000000000000000000000_u64)) == 99 );
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111110000000000000000000000000000_u64)) == 100);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111000000000000000000000000000_u64)) == 101);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111100000000000000000000000000_u64)) == 102);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111110000000000000000000000000_u64)) == 103);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111000000000000000000000000_u64)) == 104);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111100000000000000000000000_u64)) == 105);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111110000000000000000000000_u64)) == 106);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111000000000000000000000_u64)) == 107);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111100000000000000000000_u64)) == 108);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111110000000000000000000_u64)) == 109);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111000000000000000000_u64)) == 110);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111100000000000000000_u64)) == 111);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111110000000000000000_u64)) == 112);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111000000000000000_u64)) == 113);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111100000000000000_u64)) == 114);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111110000000000000_u64)) == 115);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111000000000000_u64)) == 116);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111100000000000_u64)) == 117);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111110000000000_u64)) == 118);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111000000000_u64)) == 119);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111100000000_u64)) == 120);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111110000000_u64)) == 121);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111000000_u64)) == 122);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111100000_u64)) == 123);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111110000_u64)) == 124);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111000_u64)) == 125);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111100_u64)) == 126);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111110_u64)) == 127);
		CHECK_AND_STATIC_ASSERT(countl_one(bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111111_u64)) == 128);
	}
	#endif

	SECTION("uint64_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_one(0b0000000000000000000000000000000000000000000000000000000000000000_u64) == 0 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1000000000000000000000000000000000000000000000000000000000000000_u64) == 1 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1100000000000000000000000000000000000000000000000000000000000000_u64) == 2 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1110000000000000000000000000000000000000000000000000000000000000_u64) == 3 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111000000000000000000000000000000000000000000000000000000000000_u64) == 4 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111100000000000000000000000000000000000000000000000000000000000_u64) == 5 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111110000000000000000000000000000000000000000000000000000000000_u64) == 6 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111000000000000000000000000000000000000000000000000000000000_u64) == 7 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111100000000000000000000000000000000000000000000000000000000_u64) == 8 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111110000000000000000000000000000000000000000000000000000000_u64) == 9 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111000000000000000000000000000000000000000000000000000000_u64) == 10);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111100000000000000000000000000000000000000000000000000000_u64) == 11);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111110000000000000000000000000000000000000000000000000000_u64) == 12);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111000000000000000000000000000000000000000000000000000_u64) == 13);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111100000000000000000000000000000000000000000000000000_u64) == 14);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111110000000000000000000000000000000000000000000000000_u64) == 15);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111000000000000000000000000000000000000000000000000_u64) == 16);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111100000000000000000000000000000000000000000000000_u64) == 17);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111110000000000000000000000000000000000000000000000_u64) == 18);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111000000000000000000000000000000000000000000000_u64) == 19);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111100000000000000000000000000000000000000000000_u64) == 20);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111110000000000000000000000000000000000000000000_u64) == 21);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111000000000000000000000000000000000000000000_u64) == 22);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111100000000000000000000000000000000000000000_u64) == 23);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111110000000000000000000000000000000000000000_u64) == 24);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111000000000000000000000000000000000000000_u64) == 25);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111100000000000000000000000000000000000000_u64) == 26);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111110000000000000000000000000000000000000_u64) == 27);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111000000000000000000000000000000000000_u64) == 28);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111100000000000000000000000000000000000_u64) == 29);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111110000000000000000000000000000000000_u64) == 30);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111000000000000000000000000000000000_u64) == 31);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111100000000000000000000000000000000_u64) == 32);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111110000000000000000000000000000000_u64) == 33);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111000000000000000000000000000000_u64) == 34);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111100000000000000000000000000000_u64) == 35);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111110000000000000000000000000000_u64) == 36);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111000000000000000000000000000_u64) == 37);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111100000000000000000000000000_u64) == 38);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111110000000000000000000000000_u64) == 39);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111000000000000000000000000_u64) == 40);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111100000000000000000000000_u64) == 41);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111110000000000000000000000_u64) == 42);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111000000000000000000000_u64) == 43);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111100000000000000000000_u64) == 44);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111110000000000000000000_u64) == 45);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111000000000000000000_u64) == 46);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111100000000000000000_u64) == 47);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111110000000000000000_u64) == 48);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111000000000000000_u64) == 49);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111100000000000000_u64) == 50);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111110000000000000_u64) == 51);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111000000000000_u64) == 52);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111100000000000_u64) == 53);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111110000000000_u64) == 54);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111000000000_u64) == 55);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111100000000_u64) == 56);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111110000000_u64) == 57);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111000000_u64) == 58);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111100000_u64) == 59);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111110000_u64) == 60);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111111000_u64) == 61);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111111100_u64) == 62);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111111110_u64) == 63);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111111111111111111111111111111111111111111111111111_u64) == 64);
	}

	SECTION("uint32_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_one(0b00000000000000000000000000000000_u32) == 0 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b10000000000000000000000000000000_u32) == 1 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11000000000000000000000000000000_u32) == 2 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11100000000000000000000000000000_u32) == 3 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11110000000000000000000000000000_u32) == 4 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111000000000000000000000000000_u32) == 5 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111100000000000000000000000000_u32) == 6 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111110000000000000000000000000_u32) == 7 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111000000000000000000000000_u32) == 8 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111100000000000000000000000_u32) == 9 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111110000000000000000000000_u32) == 10);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111000000000000000000000_u32) == 11);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111100000000000000000000_u32) == 12);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111110000000000000000000_u32) == 13);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111000000000000000000_u32) == 14);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111100000000000000000_u32) == 15);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111110000000000000000_u32) == 16);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111000000000000000_u32) == 17);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111100000000000000_u32) == 18);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111110000000000000_u32) == 19);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111000000000000_u32) == 20);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111100000000000_u32) == 21);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111110000000000_u32) == 22);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111000000000_u32) == 23);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111100000000_u32) == 24);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111110000000_u32) == 25);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111000000_u32) == 26);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111100000_u32) == 27);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111110000_u32) == 28);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111111000_u32) == 29);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111111100_u32) == 30);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111111110_u32) == 31);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111111111111111111111111111_u32) == 32);
	}

	SECTION("uint16_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_one(0b0000000000000000_u16) == 0 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1000000000000000_u16) == 1 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1100000000000000_u16) == 2 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1110000000000000_u16) == 3 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111000000000000_u16) == 4 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111100000000000_u16) == 5 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111110000000000_u16) == 6 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111000000000_u16) == 7 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111100000000_u16) == 8 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111110000000_u16) == 9 );
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111000000_u16) == 10);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111100000_u16) == 11);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111110000_u16) == 12);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111000_u16) == 13);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111100_u16) == 14);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111110_u16) == 15);
		CHECK_AND_STATIC_ASSERT(countl_one(0b1111111111111111_u16) == 16);
	}

	SECTION("uint8_t")
	{
		CHECK_AND_STATIC_ASSERT(countl_one(0b00000000_u8) == 0);
		CHECK_AND_STATIC_ASSERT(countl_one(0b10000000_u8) == 1);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11000000_u8) == 2);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11100000_u8) == 3);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11110000_u8) == 4);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111000_u8) == 5);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111100_u8) == 6);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111110_u8) == 7);
		CHECK_AND_STATIC_ASSERT(countl_one(0b11111111_u8) == 8);
	}
}

TEST_CASE("bit - countr_one")
{
	#if MUU_HAS_INT128
	SECTION("uint128_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000000_u64)) == 0  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000001_u64)) == 1  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000011_u64)) == 2  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000111_u64)) == 3  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000001111_u64)) == 4  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000011111_u64)) == 5  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000111111_u64)) == 6  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000001111111_u64)) == 7  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000011111111_u64)) == 8  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000111111111_u64)) == 9  );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000001111111111_u64)) == 10 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000011111111111_u64)) == 11 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000111111111111_u64)) == 12 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000001111111111111_u64)) == 13 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000011111111111111_u64)) == 14 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000111111111111111_u64)) == 15 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000001111111111111111_u64)) == 16 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000011111111111111111_u64)) == 17 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000111111111111111111_u64)) == 18 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000001111111111111111111_u64)) == 19 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000011111111111111111111_u64)) == 20 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000111111111111111111111_u64)) == 21 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000001111111111111111111111_u64)) == 22 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000011111111111111111111111_u64)) == 23 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000111111111111111111111111_u64)) == 24 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000001111111111111111111111111_u64)) == 25 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000011111111111111111111111111_u64)) == 26 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000111111111111111111111111111_u64)) == 27 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000001111111111111111111111111111_u64)) == 28 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000011111111111111111111111111111_u64)) == 29 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000111111111111111111111111111111_u64)) == 30 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000001111111111111111111111111111111_u64)) == 31 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000011111111111111111111111111111111_u64)) == 32 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000111111111111111111111111111111111_u64)) == 33 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000001111111111111111111111111111111111_u64)) == 34 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000011111111111111111111111111111111111_u64)) == 35 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000111111111111111111111111111111111111_u64)) == 36 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000001111111111111111111111111111111111111_u64)) == 37 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000011111111111111111111111111111111111111_u64)) == 38 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000111111111111111111111111111111111111111_u64)) == 39 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000001111111111111111111111111111111111111111_u64)) == 40 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000011111111111111111111111111111111111111111_u64)) == 41 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000000111111111111111111111111111111111111111111_u64)) == 42 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000001111111111111111111111111111111111111111111_u64)) == 43 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000011111111111111111111111111111111111111111111_u64)) == 44 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000000111111111111111111111111111111111111111111111_u64)) == 45 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000001111111111111111111111111111111111111111111111_u64)) == 46 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000011111111111111111111111111111111111111111111111_u64)) == 47 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000000111111111111111111111111111111111111111111111111_u64)) == 48 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000001111111111111111111111111111111111111111111111111_u64)) == 49 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000011111111111111111111111111111111111111111111111111_u64)) == 50 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000000111111111111111111111111111111111111111111111111111_u64)) == 51 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000001111111111111111111111111111111111111111111111111111_u64)) == 52 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000011111111111111111111111111111111111111111111111111111_u64)) == 53 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000000111111111111111111111111111111111111111111111111111111_u64)) == 54 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000001111111111111111111111111111111111111111111111111111111_u64)) == 55 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000011111111111111111111111111111111111111111111111111111111_u64)) == 56 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000000111111111111111111111111111111111111111111111111111111111_u64)) == 57 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000001111111111111111111111111111111111111111111111111111111111_u64)) == 58 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000011111111111111111111111111111111111111111111111111111111111_u64)) == 59 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0000111111111111111111111111111111111111111111111111111111111111_u64)) == 60 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0001111111111111111111111111111111111111111111111111111111111111_u64)) == 61 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0011111111111111111111111111111111111111111111111111111111111111_u64)) == 62 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0x0000000000000000_u64, 0b0111111111111111111111111111111111111111111111111111111111111111_u64)) == 63 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000000_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 64 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000001_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 65 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000011_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 66 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 67 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000001111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 68 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000011111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 69 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000000111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 70 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000001111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 71 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000011111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 72 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000000111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 73 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000001111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 74 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000011111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 75 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000000111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 76 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000001111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 77 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000011111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 78 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000000111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 79 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000001111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 80 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000011111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 81 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000000111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 82 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000001111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 83 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000011111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 84 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000000111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 85 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000001111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 86 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000011111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 87 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000000111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 88 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000001111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 89 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000011111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 90 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000000111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 91 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000001111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 92 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000011111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 93 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000000111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 94 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000001111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 95 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000011111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 96 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000000111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 97 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000001111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 98 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000011111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 99 );
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000000111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 100);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000001111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 101);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000011111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 102);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000000111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 103);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000001111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 104);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000011111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 105);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000000111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 106);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000001111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 107);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000011111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 108);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000000111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 109);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000001111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 110);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000011111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 111);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000000111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 112);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000001111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 113);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000011111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 114);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000000111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 115);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000001111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 116);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000011111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 117);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000000111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 118);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000001111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 119);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000011111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 120);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000000111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 121);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000001111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 122);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000011111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 123);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0000111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 124);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0001111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 125);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0011111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 126);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b0111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 127);
		CHECK_AND_STATIC_ASSERT(countr_one(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64)) == 128);
	}
	#endif

	SECTION("uint64_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000000000_u64) == 0 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000000001_u64) == 1 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000000011_u64) == 2 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000000111_u64) == 3 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000001111_u64) == 4 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000011111_u64) == 5 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000000111111_u64) == 6 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000001111111_u64) == 7 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000011111111_u64) == 8 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000000111111111_u64) == 9 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000001111111111_u64) == 10);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000011111111111_u64) == 11);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000000111111111111_u64) == 12);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000001111111111111_u64) == 13);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000011111111111111_u64) == 14);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000000111111111111111_u64) == 15);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000001111111111111111_u64) == 16);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000011111111111111111_u64) == 17);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000000111111111111111111_u64) == 18);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000001111111111111111111_u64) == 19);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000011111111111111111111_u64) == 20);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000000111111111111111111111_u64) == 21);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000001111111111111111111111_u64) == 22);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000011111111111111111111111_u64) == 23);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000000111111111111111111111111_u64) == 24);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000001111111111111111111111111_u64) == 25);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000011111111111111111111111111_u64) == 26);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000000111111111111111111111111111_u64) == 27);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000001111111111111111111111111111_u64) == 28);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000011111111111111111111111111111_u64) == 29);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000000111111111111111111111111111111_u64) == 30);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000001111111111111111111111111111111_u64) == 31);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000011111111111111111111111111111111_u64) == 32);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000000111111111111111111111111111111111_u64) == 33);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000001111111111111111111111111111111111_u64) == 34);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000011111111111111111111111111111111111_u64) == 35);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000000111111111111111111111111111111111111_u64) == 36);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000001111111111111111111111111111111111111_u64) == 37);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000011111111111111111111111111111111111111_u64) == 38);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000000111111111111111111111111111111111111111_u64) == 39);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000001111111111111111111111111111111111111111_u64) == 40);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000011111111111111111111111111111111111111111_u64) == 41);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000000111111111111111111111111111111111111111111_u64) == 42);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000001111111111111111111111111111111111111111111_u64) == 43);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000011111111111111111111111111111111111111111111_u64) == 44);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000000111111111111111111111111111111111111111111111_u64) == 45);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000001111111111111111111111111111111111111111111111_u64) == 46);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000011111111111111111111111111111111111111111111111_u64) == 47);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000111111111111111111111111111111111111111111111111_u64) == 48);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000001111111111111111111111111111111111111111111111111_u64) == 49);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000011111111111111111111111111111111111111111111111111_u64) == 50);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000111111111111111111111111111111111111111111111111111_u64) == 51);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000001111111111111111111111111111111111111111111111111111_u64) == 52);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000011111111111111111111111111111111111111111111111111111_u64) == 53);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000111111111111111111111111111111111111111111111111111111_u64) == 54);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000001111111111111111111111111111111111111111111111111111111_u64) == 55);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000011111111111111111111111111111111111111111111111111111111_u64) == 56);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000111111111111111111111111111111111111111111111111111111111_u64) == 57);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000001111111111111111111111111111111111111111111111111111111111_u64) == 58);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000011111111111111111111111111111111111111111111111111111111111_u64) == 59);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000111111111111111111111111111111111111111111111111111111111111_u64) == 60);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0001111111111111111111111111111111111111111111111111111111111111_u64) == 61);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0011111111111111111111111111111111111111111111111111111111111111_u64) == 62);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0111111111111111111111111111111111111111111111111111111111111111_u64) == 63);
		CHECK_AND_STATIC_ASSERT(countr_one(0b1111111111111111111111111111111111111111111111111111111111111111_u64) == 64);
	}

	SECTION("uint32_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000000000_u32) == 0 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000000001_u32) == 1 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000000011_u32) == 2 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000000111_u32) == 3 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000001111_u32) == 4 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000011111_u32) == 5 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000000111111_u32) == 6 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000001111111_u32) == 7 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000011111111_u32) == 8 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000000111111111_u32) == 9 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000001111111111_u32) == 10);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000011111111111_u32) == 11);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000000111111111111_u32) == 12);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000001111111111111_u32) == 13);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000011111111111111_u32) == 14);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000000111111111111111_u32) == 15);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000001111111111111111_u32) == 16);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000011111111111111111_u32) == 17);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000000111111111111111111_u32) == 18);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000001111111111111111111_u32) == 19);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000011111111111111111111_u32) == 20);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000000111111111111111111111_u32) == 21);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000001111111111111111111111_u32) == 22);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000011111111111111111111111_u32) == 23);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000111111111111111111111111_u32) == 24);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000001111111111111111111111111_u32) == 25);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000011111111111111111111111111_u32) == 26);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000111111111111111111111111111_u32) == 27);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00001111111111111111111111111111_u32) == 28);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00011111111111111111111111111111_u32) == 29);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00111111111111111111111111111111_u32) == 30);
		CHECK_AND_STATIC_ASSERT(countr_one(0b01111111111111111111111111111111_u32) == 31);
		CHECK_AND_STATIC_ASSERT(countr_one(0b11111111111111111111111111111111_u32) == 32);
	}

	SECTION("uint16_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000000_u16) == 0 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000001_u16) == 1 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000011_u16) == 2 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000000111_u16) == 3 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000001111_u16) == 4 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000011111_u16) == 5 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000000111111_u16) == 6 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000001111111_u16) == 7 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000011111111_u16) == 8 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000000111111111_u16) == 9 );
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000001111111111_u16) == 10);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000011111111111_u16) == 11);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0000111111111111_u16) == 12);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0001111111111111_u16) == 13);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0011111111111111_u16) == 14);
		CHECK_AND_STATIC_ASSERT(countr_one(0b0111111111111111_u16) == 15);
		CHECK_AND_STATIC_ASSERT(countr_one(0b1111111111111111_u16) == 16);
	}

	SECTION("uint8_t")
	{
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000000_u8) == 0);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000001_u8) == 1);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000011_u8) == 2);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00000111_u8) == 3);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00001111_u8) == 4);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00011111_u8) == 5);
		CHECK_AND_STATIC_ASSERT(countr_one(0b00111111_u8) == 6);
		CHECK_AND_STATIC_ASSERT(countr_one(0b01111111_u8) == 7);
		CHECK_AND_STATIC_ASSERT(countr_one(0b11111111_u8) == 8);
	}
}

TEST_CASE("bit - bit_ceil")
{
	CHECK_AND_STATIC_ASSERT(bit_ceil(1u) == 1u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(2u) == 2u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(3u) == 4u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(4u) == 4u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(5u) == 8u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(6u) == 8u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(7u) == 8u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(8u) == 8u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(9u) == 16u);
	CHECK_AND_STATIC_ASSERT(bit_ceil(10u) == 16u);
}

TEST_CASE("bit - bit_floor")
{
	CHECK_AND_STATIC_ASSERT(bit_floor(1u) == 1u);
	CHECK_AND_STATIC_ASSERT(bit_floor(2u) == 2u);
	CHECK_AND_STATIC_ASSERT(bit_floor(3u) == 2u);
	CHECK_AND_STATIC_ASSERT(bit_floor(4u) == 4u);
	CHECK_AND_STATIC_ASSERT(bit_floor(5u) == 4u);
	CHECK_AND_STATIC_ASSERT(bit_floor(6u) == 4u);
	CHECK_AND_STATIC_ASSERT(bit_floor(7u) == 4u);
	CHECK_AND_STATIC_ASSERT(bit_floor(8u) == 8u);
	CHECK_AND_STATIC_ASSERT(bit_floor(9u) == 8u);
	CHECK_AND_STATIC_ASSERT(bit_floor(10u) == 8u);
}

TEST_CASE("bit - has_single_bit")
{
	CHECK_AND_STATIC_ASSERT(!has_single_bit(0u));
	CHECK_AND_STATIC_ASSERT(has_single_bit(1u));
	CHECK_AND_STATIC_ASSERT(has_single_bit(2u));
	CHECK_AND_STATIC_ASSERT(!has_single_bit(3u));
	CHECK_AND_STATIC_ASSERT(has_single_bit(4u));
	CHECK_AND_STATIC_ASSERT(!has_single_bit(5u));
	CHECK_AND_STATIC_ASSERT(!has_single_bit(6u));
	CHECK_AND_STATIC_ASSERT(!has_single_bit(7u));
	CHECK_AND_STATIC_ASSERT(has_single_bit(8u));
	CHECK_AND_STATIC_ASSERT(!has_single_bit(9u));
	CHECK_AND_STATIC_ASSERT(!has_single_bit(10u));
}

TEST_CASE("bit - bit_width")
{
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000000000_u64) == 0);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000000001_u64) == 1);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000000011_u64) == 2);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000000111_u64) == 3);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000001111_u64) == 4);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000011111_u64) == 5);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000000111111_u64) == 6);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000001111111_u64) == 7);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000011111111_u64) == 8);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000000111111111_u64) == 9);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000001111110111_u64) == 10);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000011111111111_u64) == 11);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000000111111111111_u64) == 12);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000001111111111111_u64) == 13);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000011111111101111_u64) == 14);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000000111111111111111_u64) == 15);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000001111111111111111_u64) == 16);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000011111110111110111_u64) == 17);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000000111111111111111111_u64) == 18);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000001111101111111110111_u64) == 19);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000011111111111101110111_u64) == 20);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000000111111111111111111111_u64) == 21);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000001111101111111111111111_u64) == 22);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000011111111110111011111111_u64) == 23);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000000111111111111111111111111_u64) == 24);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000001111111111111111111011111_u64) == 25);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000011111111111111111111111111_u64) == 26);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000000111101111110111111111111111_u64) == 27);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000001111111111111111111101111111_u64) == 28);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000011111111111111110001110111111_u64) == 29);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000000111111111111011110001111011111_u64) == 30);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000001111111111111111111111111111111_u64) == 31);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000011111000111111111110111111111111_u64) == 32);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000000111111111101111111111111111111111_u64) == 33);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000001111111111111111111011111111111111_u64) == 34);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000011111111111111111111110001101011111_u64) == 35);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000000111111111000011111111111111111111111_u64) == 36);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000001111111111111111110111111111111111111_u64) == 37);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000011111111111111111111111111011111111111_u64) == 38);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000000111111110001111100111111111111101111111_u64) == 39);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000001111111111111111111111111111111111111111_u64) == 40);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000011111111111111111111110111111111111111111_u64) == 41);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000000111111111111101111111111111011111111111111_u64) == 42);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000001111111111111110111111111111111100011111111_u64) == 43);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000011111111100010111111111111111111111111111111_u64) == 44);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000000111111111111111111000111111111100111111111111_u64) == 45);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000001111111111111111110111111111111111111011111111_u64) == 46);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000011111100001111111111111111111111101111111111111_u64) == 47);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000111111111111111111011111111111111111111111111111_u64) == 48);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000001111111111111111111111111111111110011000111111111_u64) == 49);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000011111110001111110111111111111111111111111111111111_u64) == 50);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000111111111111111101111111111110111111111111111111111_u64) == 51);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000001111111110111111111111111111111001111111111111111111_u64) == 52);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000011111111111111111111100111111111111111111111111111111_u64) == 53);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000111111111110001111111111111111111111111111111111111111_u64) == 54);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000001111111011111101111111111111111111111111111110001111111_u64) == 55);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000011111111111111111100111111111111111101111111111111111111_u64) == 56);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000111111111111111111111111111111101111111111111111111111111_u64) == 57);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000001111111000110001111111111111100011111111111111111111111111_u64) == 58);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000011111111111111111111111111011111111011111111111111111111111_u64) == 59);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000111111111000111111111111111111111111111111111111111111111111_u64) == 60);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0001111111111111111111111111111100111111000111100011111111111111_u64) == 61);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0011111111111111110011111111111111111111111111111111111111111111_u64) == 62);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0111111111111111111111111111111111111111111111111111111111111111_u64) == 63);
	CHECK_AND_STATIC_ASSERT(bit_width(0b1111111000111111111111111111111111111111000111111111111111111111_u64) == 64);

	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000000000_u32) == 0);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000000001_u32) == 1);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000000011_u32) == 2);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000000111_u32) == 3);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000001111_u32) == 4);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000011111_u32) == 5);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000000111111_u32) == 6);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000001111111_u32) == 7);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000011111111_u32) == 8);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000000111001101_u32) == 9);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000001111111111_u32) == 10);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000011111111011_u32) == 11);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000000111111001111_u32) == 12);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000001111111111111_u32) == 13);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000011111111111111_u32) == 14);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000000111110111011111_u32) == 15);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000001111111111111111_u32) == 16);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000011111111000111111_u32) == 17);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000000111111111111111111_u32) == 18);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000001110111111111011101_u32) == 19);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000011111111111000111111_u32) == 20);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000000111111111111111111111_u32) == 21);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000001111111011111111111111_u32) == 22);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000011111111111111111011111_u32) == 23);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000111101111111111100111111_u32) == 24);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000001111111111111111111111111_u32) == 25);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000011101110001111111001111111_u32) == 26);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000111111111111111111111011111_u32) == 27);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00001111111111111111111111111111_u32) == 28);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00011111111111101111110001111111_u32) == 29);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00111100011111111111111111111111_u32) == 30);
	CHECK_AND_STATIC_ASSERT(bit_width(0b01111111110001111111111111111111_u32) == 31);
	CHECK_AND_STATIC_ASSERT(bit_width(0b11111111111111111110011111111111_u32) == 32);

	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000000_u16) == 0);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000001_u16) == 1);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000011_u16) == 2);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000000111_u16) == 3);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000001111_u16) == 4);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000011111_u16) == 5);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000000111011_u16) == 6);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000001111111_u16) == 7);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000011100111_u16) == 8);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000000111111111_u16) == 9);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000001111111111_u16) == 10);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000011111011111_u16) == 11);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0000111111111111_u16) == 12);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0001111011111001_u16) == 13);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0011111110111111_u16) == 14);
	CHECK_AND_STATIC_ASSERT(bit_width(0b0111100111111111_u16) == 15);
	CHECK_AND_STATIC_ASSERT(bit_width(0b1111111110011111_u16) == 16);

	CHECK_AND_STATIC_ASSERT(bit_width(0b00000000_u8) == 0);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000001_u8) == 1);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000011_u8) == 2);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00000111_u8) == 3);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00001101_u8) == 4);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00011101_u8) == 5);
	CHECK_AND_STATIC_ASSERT(bit_width(0b00111111_u8) == 6);
	CHECK_AND_STATIC_ASSERT(bit_width(0b01110111_u8) == 7);
	CHECK_AND_STATIC_ASSERT(bit_width(0b11111101_u8) == 8);
}

TEST_CASE("bit - bit_fill_right")
{
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(0)  == 0b00000000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(1)  == 0b00000001_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(2)  == 0b00000011_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(3)  == 0b00000111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(4)  == 0b00001111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(5)  == 0b00011111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(6)  == 0b00111111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(7)  == 0b01111111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(8)  == 0b11111111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint8_t>(99) == 0b11111111_u8);

	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(0)  == 0b0000000000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(1)  == 0b0000000000000001_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(2)  == 0b0000000000000011_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(3)  == 0b0000000000000111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(4)  == 0b0000000000001111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(5)  == 0b0000000000011111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(6)  == 0b0000000000111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(7)  == 0b0000000001111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(8)  == 0b0000000011111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(9)  == 0b0000000111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(10) == 0b0000001111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(11) == 0b0000011111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(12) == 0b0000111111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(13) == 0b0001111111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(14) == 0b0011111111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(15) == 0b0111111111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(16) == 0b1111111111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint16_t>(99) == 0b1111111111111111_u16);

	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(0)  == 0b00000000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(1)  == 0b00000000000000000000000000000001_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(2)  == 0b00000000000000000000000000000011_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(3)  == 0b00000000000000000000000000000111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(4)  == 0b00000000000000000000000000001111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(5)  == 0b00000000000000000000000000011111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(6)  == 0b00000000000000000000000000111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(7)  == 0b00000000000000000000000001111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(8)  == 0b00000000000000000000000011111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(9)  == 0b00000000000000000000000111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(10) == 0b00000000000000000000001111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(11) == 0b00000000000000000000011111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(12) == 0b00000000000000000000111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(13) == 0b00000000000000000001111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(14) == 0b00000000000000000011111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(15) == 0b00000000000000000111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(16) == 0b00000000000000001111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(17) == 0b00000000000000011111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(18) == 0b00000000000000111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(19) == 0b00000000000001111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(20) == 0b00000000000011111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(21) == 0b00000000000111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(22) == 0b00000000001111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(23) == 0b00000000011111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(24) == 0b00000000111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(25) == 0b00000001111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(26) == 0b00000011111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(27) == 0b00000111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(28) == 0b00001111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(29) == 0b00011111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(30) == 0b00111111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(31) == 0b01111111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(32) == 0b11111111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint32_t>(99) == 0b11111111111111111111111111111111_u32);

	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(0)  == 0b0000000000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(1)  == 0b0000000000000000000000000000000000000000000000000000000000000001_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(2)  == 0b0000000000000000000000000000000000000000000000000000000000000011_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(3)  == 0b0000000000000000000000000000000000000000000000000000000000000111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(4)  == 0b0000000000000000000000000000000000000000000000000000000000001111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(5)  == 0b0000000000000000000000000000000000000000000000000000000000011111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(6)  == 0b0000000000000000000000000000000000000000000000000000000000111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(7)  == 0b0000000000000000000000000000000000000000000000000000000001111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(8)  == 0b0000000000000000000000000000000000000000000000000000000011111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(9)  == 0b0000000000000000000000000000000000000000000000000000000111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(10) == 0b0000000000000000000000000000000000000000000000000000001111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(11) == 0b0000000000000000000000000000000000000000000000000000011111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(12) == 0b0000000000000000000000000000000000000000000000000000111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(13) == 0b0000000000000000000000000000000000000000000000000001111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(14) == 0b0000000000000000000000000000000000000000000000000011111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(15) == 0b0000000000000000000000000000000000000000000000000111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(16) == 0b0000000000000000000000000000000000000000000000001111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(17) == 0b0000000000000000000000000000000000000000000000011111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(18) == 0b0000000000000000000000000000000000000000000000111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(19) == 0b0000000000000000000000000000000000000000000001111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(20) == 0b0000000000000000000000000000000000000000000011111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(21) == 0b0000000000000000000000000000000000000000000111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(22) == 0b0000000000000000000000000000000000000000001111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(23) == 0b0000000000000000000000000000000000000000011111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(24) == 0b0000000000000000000000000000000000000000111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(25) == 0b0000000000000000000000000000000000000001111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(26) == 0b0000000000000000000000000000000000000011111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(27) == 0b0000000000000000000000000000000000000111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(28) == 0b0000000000000000000000000000000000001111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(29) == 0b0000000000000000000000000000000000011111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(30) == 0b0000000000000000000000000000000000111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(31) == 0b0000000000000000000000000000000001111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(32) == 0b0000000000000000000000000000000011111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(33) == 0b0000000000000000000000000000000111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(34) == 0b0000000000000000000000000000001111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(35) == 0b0000000000000000000000000000011111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(36) == 0b0000000000000000000000000000111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(37) == 0b0000000000000000000000000001111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(38) == 0b0000000000000000000000000011111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(39) == 0b0000000000000000000000000111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(40) == 0b0000000000000000000000001111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(41) == 0b0000000000000000000000011111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(42) == 0b0000000000000000000000111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(43) == 0b0000000000000000000001111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(44) == 0b0000000000000000000011111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(45) == 0b0000000000000000000111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(46) == 0b0000000000000000001111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(47) == 0b0000000000000000011111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(48) == 0b0000000000000000111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(49) == 0b0000000000000001111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(50) == 0b0000000000000011111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(51) == 0b0000000000000111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(52) == 0b0000000000001111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(53) == 0b0000000000011111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(54) == 0b0000000000111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(55) == 0b0000000001111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(56) == 0b0000000011111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(57) == 0b0000000111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(58) == 0b0000001111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(59) == 0b0000011111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(60) == 0b0000111111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(61) == 0b0001111111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(62) == 0b0011111111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(63) == 0b0111111111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(64) == 0b1111111111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint64_t>(99) == 0b1111111111111111111111111111111111111111111111111111111111111111_u64);

	#if MUU_HAS_INT128
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(0 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(1 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000001_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(2 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000011_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(3 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(4 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000001111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(5 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000011111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(6 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(7 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000001111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(8 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000011111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(9 )  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(10)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000001111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(11)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000011111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(12)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(13)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000001111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(14)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000011111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(15)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000000111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(16)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000001111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(17)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000011111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(18)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000000111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(19)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000001111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(20)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000011111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(21)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000000111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(22)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000001111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(23)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000011111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(24)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000000111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(25)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000001111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(26)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000011111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(27)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000000111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(28)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000001111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(29)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000011111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(30)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000000111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(31)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000001111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(32)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000011111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(33)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000000111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(34)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000001111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(35)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000011111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(36)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000000111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(37)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000001111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(38)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000011111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(39)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000000111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(40)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000001111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(41)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000011111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(42)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000000111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(43)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000001111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(44)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000011111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(45)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000000111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(46)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000001111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(47)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000011111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(48)  == bit_pack(0x0000000000000000_u64, 0b0000000000000000111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(49)  == bit_pack(0x0000000000000000_u64, 0b0000000000000001111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(50)  == bit_pack(0x0000000000000000_u64, 0b0000000000000011111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(51)  == bit_pack(0x0000000000000000_u64, 0b0000000000000111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(52)  == bit_pack(0x0000000000000000_u64, 0b0000000000001111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(53)  == bit_pack(0x0000000000000000_u64, 0b0000000000011111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(54)  == bit_pack(0x0000000000000000_u64, 0b0000000000111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(55)  == bit_pack(0x0000000000000000_u64, 0b0000000001111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(56)  == bit_pack(0x0000000000000000_u64, 0b0000000011111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(57)  == bit_pack(0x0000000000000000_u64, 0b0000000111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(58)  == bit_pack(0x0000000000000000_u64, 0b0000001111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(59)  == bit_pack(0x0000000000000000_u64, 0b0000011111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(60)  == bit_pack(0x0000000000000000_u64, 0b0000111111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(61)  == bit_pack(0x0000000000000000_u64, 0b0001111111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(62)  == bit_pack(0x0000000000000000_u64, 0b0011111111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(63)  == bit_pack(0x0000000000000000_u64, 0b0111111111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(64)  == bit_pack(0x0000000000000000_u64, 0b1111111111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(65)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000000001_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(66)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000000011_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(67)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000000111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(68)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000001111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(69)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000011111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(70)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(71)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000001111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(72)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000011111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(73)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(74)  == bit_pack(0b0000000000000000000000000000000000000000000000000000001111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(75)  == bit_pack(0b0000000000000000000000000000000000000000000000000000011111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(76)  == bit_pack(0b0000000000000000000000000000000000000000000000000000111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(77)  == bit_pack(0b0000000000000000000000000000000000000000000000000001111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(78)  == bit_pack(0b0000000000000000000000000000000000000000000000000011111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(79)  == bit_pack(0b0000000000000000000000000000000000000000000000000111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(80)  == bit_pack(0b0000000000000000000000000000000000000000000000001111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(81)  == bit_pack(0b0000000000000000000000000000000000000000000000011111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(82)  == bit_pack(0b0000000000000000000000000000000000000000000000111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(83)  == bit_pack(0b0000000000000000000000000000000000000000000001111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(84)  == bit_pack(0b0000000000000000000000000000000000000000000011111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(85)  == bit_pack(0b0000000000000000000000000000000000000000000111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(86)  == bit_pack(0b0000000000000000000000000000000000000000001111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(87)  == bit_pack(0b0000000000000000000000000000000000000000011111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(88)  == bit_pack(0b0000000000000000000000000000000000000000111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(89)  == bit_pack(0b0000000000000000000000000000000000000001111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(90)  == bit_pack(0b0000000000000000000000000000000000000011111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(91)  == bit_pack(0b0000000000000000000000000000000000000111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(92)  == bit_pack(0b0000000000000000000000000000000000001111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(93)  == bit_pack(0b0000000000000000000000000000000000011111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(94)  == bit_pack(0b0000000000000000000000000000000000111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(95)  == bit_pack(0b0000000000000000000000000000000001111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(96)  == bit_pack(0b0000000000000000000000000000000011111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(97)  == bit_pack(0b0000000000000000000000000000000111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(98)  == bit_pack(0b0000000000000000000000000000001111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(99)  == bit_pack(0b0000000000000000000000000000011111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(100) == bit_pack(0b0000000000000000000000000000111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(101) == bit_pack(0b0000000000000000000000000001111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(102) == bit_pack(0b0000000000000000000000000011111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(103) == bit_pack(0b0000000000000000000000000111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(104) == bit_pack(0b0000000000000000000000001111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(105) == bit_pack(0b0000000000000000000000011111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(106) == bit_pack(0b0000000000000000000000111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(107) == bit_pack(0b0000000000000000000001111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(108) == bit_pack(0b0000000000000000000011111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(109) == bit_pack(0b0000000000000000000111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(110) == bit_pack(0b0000000000000000001111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(111) == bit_pack(0b0000000000000000011111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(112) == bit_pack(0b0000000000000000111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(113) == bit_pack(0b0000000000000001111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(114) == bit_pack(0b0000000000000011111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(115) == bit_pack(0b0000000000000111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(116) == bit_pack(0b0000000000001111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(117) == bit_pack(0b0000000000011111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(118) == bit_pack(0b0000000000111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(119) == bit_pack(0b0000000001111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(120) == bit_pack(0b0000000011111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(121) == bit_pack(0b0000000111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(122) == bit_pack(0b0000001111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(123) == bit_pack(0b0000011111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(124) == bit_pack(0b0000111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(125) == bit_pack(0b0001111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(126) == bit_pack(0b0011111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(127) == bit_pack(0b0111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(128) == bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_right<uint128_t>(999) == bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0xFFFFFFFFFFFFFFFF_u64));
	#endif
}

TEST_CASE("bit - bit_fill_left")
{
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(0)  == 0b00000000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(1)  == 0b10000000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(2)  == 0b11000000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(3)  == 0b11100000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(4)  == 0b11110000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(5)  == 0b11111000_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(6)  == 0b11111100_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(7)  == 0b11111110_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(8)  == 0b11111111_u8);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint8_t>(99) == 0b11111111_u8);

	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(0)  == 0b0000000000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(1)  == 0b1000000000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(2)  == 0b1100000000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(3)  == 0b1110000000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(4)  == 0b1111000000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(5)  == 0b1111100000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(6)  == 0b1111110000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(7)  == 0b1111111000000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(8)  == 0b1111111100000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(9)  == 0b1111111110000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(10) == 0b1111111111000000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(11) == 0b1111111111100000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(12) == 0b1111111111110000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(13) == 0b1111111111111000_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(14) == 0b1111111111111100_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(15) == 0b1111111111111110_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(16) == 0b1111111111111111_u16);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint16_t>(99) == 0b1111111111111111_u16);

	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(0)  == 0b00000000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(1)  == 0b10000000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(2)  == 0b11000000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(3)  == 0b11100000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(4)  == 0b11110000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(5)  == 0b11111000000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(6)  == 0b11111100000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(7)  == 0b11111110000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(8)  == 0b11111111000000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(9)  == 0b11111111100000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(10) == 0b11111111110000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(11) == 0b11111111111000000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(12) == 0b11111111111100000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(13) == 0b11111111111110000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(14) == 0b11111111111111000000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(15) == 0b11111111111111100000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(16) == 0b11111111111111110000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(17) == 0b11111111111111111000000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(18) == 0b11111111111111111100000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(19) == 0b11111111111111111110000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(20) == 0b11111111111111111111000000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(21) == 0b11111111111111111111100000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(22) == 0b11111111111111111111110000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(23) == 0b11111111111111111111111000000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(24) == 0b11111111111111111111111100000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(25) == 0b11111111111111111111111110000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(26) == 0b11111111111111111111111111000000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(27) == 0b11111111111111111111111111100000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(28) == 0b11111111111111111111111111110000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(29) == 0b11111111111111111111111111111000_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(30) == 0b11111111111111111111111111111100_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(31) == 0b11111111111111111111111111111110_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(32) == 0b11111111111111111111111111111111_u32);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint32_t>(99) == 0b11111111111111111111111111111111_u32);

	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(0)  == 0b0000000000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(1)  == 0b1000000000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(2)  == 0b1100000000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(3)  == 0b1110000000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(4)  == 0b1111000000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(5)  == 0b1111100000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(6)  == 0b1111110000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(7)  == 0b1111111000000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(8)  == 0b1111111100000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(9)  == 0b1111111110000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(10) == 0b1111111111000000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(11) == 0b1111111111100000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(12) == 0b1111111111110000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(13) == 0b1111111111111000000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(14) == 0b1111111111111100000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(15) == 0b1111111111111110000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(16) == 0b1111111111111111000000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(17) == 0b1111111111111111100000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(18) == 0b1111111111111111110000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(19) == 0b1111111111111111111000000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(20) == 0b1111111111111111111100000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(21) == 0b1111111111111111111110000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(22) == 0b1111111111111111111111000000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(23) == 0b1111111111111111111111100000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(24) == 0b1111111111111111111111110000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(25) == 0b1111111111111111111111111000000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(26) == 0b1111111111111111111111111100000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(27) == 0b1111111111111111111111111110000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(28) == 0b1111111111111111111111111111000000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(29) == 0b1111111111111111111111111111100000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(30) == 0b1111111111111111111111111111110000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(31) == 0b1111111111111111111111111111111000000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(32) == 0b1111111111111111111111111111111100000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(33) == 0b1111111111111111111111111111111110000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(34) == 0b1111111111111111111111111111111111000000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(35) == 0b1111111111111111111111111111111111100000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(36) == 0b1111111111111111111111111111111111110000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(37) == 0b1111111111111111111111111111111111111000000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(38) == 0b1111111111111111111111111111111111111100000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(39) == 0b1111111111111111111111111111111111111110000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(40) == 0b1111111111111111111111111111111111111111000000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(41) == 0b1111111111111111111111111111111111111111100000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(42) == 0b1111111111111111111111111111111111111111110000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(43) == 0b1111111111111111111111111111111111111111111000000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(44) == 0b1111111111111111111111111111111111111111111100000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(45) == 0b1111111111111111111111111111111111111111111110000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(46) == 0b1111111111111111111111111111111111111111111111000000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(47) == 0b1111111111111111111111111111111111111111111111100000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(48) == 0b1111111111111111111111111111111111111111111111110000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(49) == 0b1111111111111111111111111111111111111111111111111000000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(50) == 0b1111111111111111111111111111111111111111111111111100000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(51) == 0b1111111111111111111111111111111111111111111111111110000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(52) == 0b1111111111111111111111111111111111111111111111111111000000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(53) == 0b1111111111111111111111111111111111111111111111111111100000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(54) == 0b1111111111111111111111111111111111111111111111111111110000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(55) == 0b1111111111111111111111111111111111111111111111111111111000000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(56) == 0b1111111111111111111111111111111111111111111111111111111100000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(57) == 0b1111111111111111111111111111111111111111111111111111111110000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(58) == 0b1111111111111111111111111111111111111111111111111111111111000000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(59) == 0b1111111111111111111111111111111111111111111111111111111111100000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(60) == 0b1111111111111111111111111111111111111111111111111111111111110000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(61) == 0b1111111111111111111111111111111111111111111111111111111111111000_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(62) == 0b1111111111111111111111111111111111111111111111111111111111111100_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(63) == 0b1111111111111111111111111111111111111111111111111111111111111110_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(64) == 0b1111111111111111111111111111111111111111111111111111111111111111_u64);
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint64_t>(99) == 0b1111111111111111111111111111111111111111111111111111111111111111_u64);

	#if MUU_HAS_INT128
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 0)  == bit_pack(0b0000000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 1)  == bit_pack(0b1000000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 2)  == bit_pack(0b1100000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 3)  == bit_pack(0b1110000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 4)  == bit_pack(0b1111000000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 5)  == bit_pack(0b1111100000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 6)  == bit_pack(0b1111110000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 7)  == bit_pack(0b1111111000000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 8)  == bit_pack(0b1111111100000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>( 9)  == bit_pack(0b1111111110000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(10)  == bit_pack(0b1111111111000000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(11)  == bit_pack(0b1111111111100000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(12)  == bit_pack(0b1111111111110000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(13)  == bit_pack(0b1111111111111000000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(14)  == bit_pack(0b1111111111111100000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(15)  == bit_pack(0b1111111111111110000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(16)  == bit_pack(0b1111111111111111000000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(17)  == bit_pack(0b1111111111111111100000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(18)  == bit_pack(0b1111111111111111110000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(19)  == bit_pack(0b1111111111111111111000000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(20)  == bit_pack(0b1111111111111111111100000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(21)  == bit_pack(0b1111111111111111111110000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(22)  == bit_pack(0b1111111111111111111111000000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(23)  == bit_pack(0b1111111111111111111111100000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(24)  == bit_pack(0b1111111111111111111111110000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(25)  == bit_pack(0b1111111111111111111111111000000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(26)  == bit_pack(0b1111111111111111111111111100000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(27)  == bit_pack(0b1111111111111111111111111110000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(28)  == bit_pack(0b1111111111111111111111111111000000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(29)  == bit_pack(0b1111111111111111111111111111100000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(30)  == bit_pack(0b1111111111111111111111111111110000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(31)  == bit_pack(0b1111111111111111111111111111111000000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(32)  == bit_pack(0b1111111111111111111111111111111100000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(33)  == bit_pack(0b1111111111111111111111111111111110000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(34)  == bit_pack(0b1111111111111111111111111111111111000000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(35)  == bit_pack(0b1111111111111111111111111111111111100000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(36)  == bit_pack(0b1111111111111111111111111111111111110000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(37)  == bit_pack(0b1111111111111111111111111111111111111000000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(38)  == bit_pack(0b1111111111111111111111111111111111111100000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(39)  == bit_pack(0b1111111111111111111111111111111111111110000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(40)  == bit_pack(0b1111111111111111111111111111111111111111000000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(41)  == bit_pack(0b1111111111111111111111111111111111111111100000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(42)  == bit_pack(0b1111111111111111111111111111111111111111110000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(43)  == bit_pack(0b1111111111111111111111111111111111111111111000000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(44)  == bit_pack(0b1111111111111111111111111111111111111111111100000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(45)  == bit_pack(0b1111111111111111111111111111111111111111111110000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(46)  == bit_pack(0b1111111111111111111111111111111111111111111111000000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(47)  == bit_pack(0b1111111111111111111111111111111111111111111111100000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(48)  == bit_pack(0b1111111111111111111111111111111111111111111111110000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(49)  == bit_pack(0b1111111111111111111111111111111111111111111111111000000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(50)  == bit_pack(0b1111111111111111111111111111111111111111111111111100000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(51)  == bit_pack(0b1111111111111111111111111111111111111111111111111110000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(52)  == bit_pack(0b1111111111111111111111111111111111111111111111111111000000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(53)  == bit_pack(0b1111111111111111111111111111111111111111111111111111100000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(54)  == bit_pack(0b1111111111111111111111111111111111111111111111111111110000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(55)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111000000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(56)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111100000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(57)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111110000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(58)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111000000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(59)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111100000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(60)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111110000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(61)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111111000_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(62)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111111100_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(63)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111111110_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(64)  == bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0x0000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(65)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1000000000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(66)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1100000000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(67)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1110000000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(68)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111000000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(69)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111100000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(70)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111110000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(71)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111000000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(72)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111100000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(73)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111110000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(74)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111000000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(75)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111100000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(76)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111110000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(77)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111000000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(78)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111100000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(79)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111110000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(80)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111000000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(81)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111100000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(82)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111110000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(83)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111000000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(84)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111100000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(85)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111110000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(86)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111000000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(87)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111100000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(88)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111110000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(89)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111000000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(90)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111100000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(91)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111110000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(92)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111000000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(93)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111100000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(94)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111110000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(95)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111000000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(96)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111100000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(97)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111110000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(98)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111000000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(99)  == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111100000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(100) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111110000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(101) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111000000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(102) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111100000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(103) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111110000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(104) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111000000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(105) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111100000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(106) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111110000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(107) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111000000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(108) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111100000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(109) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111110000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(110) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111000000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(111) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111100000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(112) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111110000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(113) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111000000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(114) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111100000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(115) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111110000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(116) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111000000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(117) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111100000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(118) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111110000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(119) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111000000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(120) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111100000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(121) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111110000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(122) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111000000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(123) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111100000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(124) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111110000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(125) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111000_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(126) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111100_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(127) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111110_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(128) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111111_u64));
	CHECK_AND_STATIC_ASSERT(bit_fill_left<uint128_t>(999) == bit_pack(0xFFFFFFFFFFFFFFFF_u64, 0b1111111111111111111111111111111111111111111111111111111111111111_u64));
	#endif
}

TEST_CASE("bit - popcount")
{
	CHECK_AND_STATIC_ASSERT(popcount(0b00000000_u8) == 0);
	CHECK_AND_STATIC_ASSERT(popcount(0b00000010_u8) == 1);
	CHECK_AND_STATIC_ASSERT(popcount(0b00110010_u8) == 3);
	CHECK_AND_STATIC_ASSERT(popcount(0b10110010_u8) == 4);
	CHECK_AND_STATIC_ASSERT(popcount(0b11111111_u8) == 8);

	CHECK_AND_STATIC_ASSERT(popcount(0b0000000000000000_u16) == 0);
	CHECK_AND_STATIC_ASSERT(popcount(0b0000001000000010_u16) == 2);
	CHECK_AND_STATIC_ASSERT(popcount(0b0011001000110010_u16) == 6);
	CHECK_AND_STATIC_ASSERT(popcount(0b1011001010110010_u16) == 8);
	CHECK_AND_STATIC_ASSERT(popcount(0b1111111111111111_u16) == 16);

	CHECK_AND_STATIC_ASSERT(popcount(0b00000000000000000000000000000000_u32) == 0);
	CHECK_AND_STATIC_ASSERT(popcount(0b00000010000000100000001000000010_u32) == 4);
	CHECK_AND_STATIC_ASSERT(popcount(0b00110010001100100011001000110010_u32) == 12);
	CHECK_AND_STATIC_ASSERT(popcount(0b10110010101100101011001010110010_u32) == 16);
	CHECK_AND_STATIC_ASSERT(popcount(0b11111111111111111111111111111111_u32) == 32);

	CHECK_AND_STATIC_ASSERT(popcount(0b0000000000000000000000000000000000000000000000000000000000000000_u64) == 0);
	CHECK_AND_STATIC_ASSERT(popcount(0b0000001000000010000000100000001000000010000000100000001000000010_u64) == 8);
	CHECK_AND_STATIC_ASSERT(popcount(0b0011001000110010001100100011001000110010001100100011001000110010_u64) == 24);
	CHECK_AND_STATIC_ASSERT(popcount(0b1011001010110010101100101011001010110010101100101011001010110010_u64) == 32);
	CHECK_AND_STATIC_ASSERT(popcount(0b1111111111111111111111111111111111111111111111111111111111111111_u64) == 64);
	#if MUU_HAS_INT128
	CHECK_AND_STATIC_ASSERT(popcount(bit_pack(0b0000000000000000000000000000000000000000000000000000000000000000_u64, 0b0000000000000000000000000000000000000000000000000000000000000000_u64)) == 0);
	CHECK_AND_STATIC_ASSERT(popcount(bit_pack(0b0000001000000010000000100000001000000010000000100000001000000010_u64, 0b0000001000000010000000100000001000000010000000100000001000000010_u64)) == 16);
	CHECK_AND_STATIC_ASSERT(popcount(bit_pack(0b0011001000110010001100100011001000110010001100100011001000110010_u64, 0b0011001000110010001100100011001000110010001100100011001000110010_u64)) == 48);
	CHECK_AND_STATIC_ASSERT(popcount(bit_pack(0b1011001010110010101100101011001010110010101100101011001010110010_u64, 0b1011001010110010101100101011001010110010101100101011001010110010_u64)) == 64);
	CHECK_AND_STATIC_ASSERT(popcount(bit_pack(0b1111111111111111111111111111111111111111111111111111111111111111_u64, 0b1111111111111111111111111111111111111111111111111111111111111111_u64)) == 128);
	#endif
}

TEST_CASE("bit - bit_pack")
{
	CHECK_AND_STATIC_ASSERT(bit_pack(0xFEDCBA98_u32, 0x76543210_u32) == 0xFEDCBA9876543210_u64);
	CHECK_AND_STATIC_ASSERT(bit_pack(0xFEDC_u16, 0xBA98_u16, 0x76543210_u32) == 0xFEDCBA9876543210_u64);
	CHECK_AND_STATIC_ASSERT(bit_pack(0xFEDC_u16, 0xBA98_u16, 0x7654_u16, 0x3210_u16) == 0xFEDCBA9876543210_u64);
	CHECK_AND_STATIC_ASSERT(bit_pack(0xFEDC_u16, 0xBA_u8, 0x98_u8, 0x7654_u16, 0x32_u8, 0x10_u8) == 0xFEDCBA9876543210_u64);
}

TEST_CASE("bit - byte_select")
{
	#define CHECK_BYTE_SELECT(index, expected, ...)										\
		CHECK_AND_STATIC_ASSERT(byte_select<index>(__VA_ARGS__) == 0x##expected##_u8);	\
		CHECK_AND_STATIC_ASSERT(byte_select(__VA_ARGS__, index) == 0x##expected##_u8)


	#if MUU_HAS_INT128
	CHECK_BYTE_SELECT(15, FE, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT(14, DC, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT(13, BA, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT(12, 98, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT(11, 76, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT(10, 54, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 9, 32, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 8, 10, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 7, AA, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 6, BB, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 5, CC, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 4, DD, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 3, AB, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 2, CD, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 1, EF, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	CHECK_BYTE_SELECT( 0, 01, bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64));
	#endif

	CHECK_BYTE_SELECT(7, AA, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(6, BB, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(5, CC, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(4, DD, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(3, AB, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(2, CD, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(1, EF, 0xAABBCCDDABCDEF01_u64);
	CHECK_BYTE_SELECT(0, 01, 0xAABBCCDDABCDEF01_u64);

	CHECK_BYTE_SELECT(3, AB, 0xABCDEF01_u32);
	CHECK_BYTE_SELECT(2, CD, 0xABCDEF01_u32);
	CHECK_BYTE_SELECT(1, EF, 0xABCDEF01_u32);
	CHECK_BYTE_SELECT(0, 01, 0xABCDEF01_u32);

	CHECK_BYTE_SELECT(1, EF, 0xEF01_u16);
	CHECK_BYTE_SELECT(0, 01, 0xEF01_u16);

	CHECK_BYTE_SELECT(0, 01, 0x01_u8);
}

TEST_CASE("bit - byte_reverse")
{
	#if MUU_HAS_INT128

	CHECK_AND_STATIC_ASSERT(byte_reverse(bit_pack(0xFEDCBA9876543210_u64, 0xAABBCCDDABCDEF01_u64)) == bit_pack(0x01EFCDABDDCCBBAA_u64, 0x1032547698BADCFE_u64));

	#endif

	CHECK_AND_STATIC_ASSERT(byte_reverse(0xAABBCCDDABCDEF01_u64) == 0x01EFCDABDDCCBBAA_u64);
	CHECK_AND_STATIC_ASSERT(byte_reverse(0xABCDEF01_u32) == 0x01EFCDAB_u32);
	CHECK_AND_STATIC_ASSERT(byte_reverse(0xABCD_u16) == 0xCDAB_u16);
}

TEST_CASE("bit - swizzle")
{
	#define CHECK_SWIZZLE(input, expected, ...)	\
		CHECK_AND_STATIC_ASSERT(swizzle<__VA_ARGS__>(input) == expected)

	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xDD_u8, 0);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xCCDD_u16, 1, 0);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xBBCCDD_u32, 2, 1, 0);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xAABBCCDD_u32, 3, 2, 1, 0);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xAA_u8, 3);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xCCCC_u16, 1, 1);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xBBDDBB_u32, 2, 0, 2);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xAAAABBBB_u32, 3, 3, 2, 2);
	CHECK_SWIZZLE(0xAABBCCDD_u32, 0xAACCBBCCDD_u64, 3, 1, 2, 1, 0);

	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xDD_i8, 0);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xCCDD_i16, 1, 0);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xBBCCDD_i32, 2, 1, 0);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xAABBCCDD_i32, 3, 2, 1, 0);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xAA_i8, 3);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xCCCC_i16, 1, 1);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xBBDDBB_i32, 2, 0, 2);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xAAAABBBB_i32, 3, 3, 2, 2);
	CHECK_SWIZZLE(0xAABBCCDD_i32, 0xAACCBBCCDD_i64, 3, 1, 2, 1, 0);
}
