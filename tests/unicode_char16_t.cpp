// This file is a part of muu and is subject to the the terms of the MIT license.
// Copyright (c) 2020 Mark Gillard <mark.gillard@outlook.com.au>
// See https://github.com/marzer/muu/blob/master/LICENSE for the full license text.
// SPDX-License-Identifier: MIT
//-----
// this file was generated by generate_unicode_functions.py - do not modify it directly

#include "tests.h"
#include "unicode.h"
#include "../include/muu/strings.h"

TEST_CASE("unicode - is_ascii_code_point (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_code_point);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\0', u'\x7F' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<1>(fn, r));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\x80', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_ascii_hyphen (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_hyphen);
 
	// values which should return true
	static constexpr char16_t true_values[] = 
	{
		u'-',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<2>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u',' }, { u'.', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_ascii_letter (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_letter);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'A', u'Z' }, { u'a', u'z' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<3>(fn, r));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'@' }, { u'[', u'`' }, { u'{', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_ascii_lowercase (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_lowercase);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'a', u'z' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<6>(fn, r));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'`' }, { u'{', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_ascii_number (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_number);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'0', u'9' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<4>(fn, r));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'/' }, { u':', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_ascii_uppercase (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_uppercase);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'A', u'Z' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<7>(fn, r));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'@' }, { u'[', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_ascii_whitespace (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_ascii_whitespace);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\t', u'\r' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<5>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u' ',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<5>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\b' }, { u'\x0E', u'\x1F' }, { u'!', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_non_ascii_code_point (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_code_point);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\x80', u'\uD7FF' }, { u'\uE000', u'\uFFFF' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<1>(fn, r));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\x7F' }, { 0xD800u, 0xDFFFu },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_non_ascii_hyphen (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_hyphen);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\u2010', u'\u2011' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<2>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u'\xAD', u'\u058A', u'\u1806', u'\u2E17', u'\u30FB', u'\uFE63',
		u'\uFF0D', u'\uFF65',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<2>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\xAC' }, { u'\xAE', u'\u0589' }, { u'\u058B', u'\u1805' },
		{ u'\u1807', u'\u200F' }, { u'\u2012', u'\u2E16' }, { u'\u2E18', u'\u30FA' },
		{ u'\u30FC', u'\uFE62' }, { u'\uFE64', u'\uFF0C' }, { u'\uFF0E', u'\uFF64' },
		{ u'\uFF66', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_non_ascii_letter (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_letter);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\xC0', u'\xD6' }, { u'\xD8', u'\xF6' }, { u'\xF8', u'\u02C1' },
		{ u'\u02C6', u'\u02D1' }, { u'\u02E0', u'\u02E4' }, { u'\u0370', u'\u0374' },
		{ u'\u0376', u'\u0377' }, { u'\u037A', u'\u037D' }, { u'\u0388', u'\u038A' },
		{ u'\u038E', u'\u03A1' }, { u'\u03A3', u'\u03F5' }, { u'\u03F7', u'\u0481' },
		{ u'\u048A', u'\u052F' }, { u'\u0531', u'\u0556' }, { u'\u0560', u'\u0588' },
		{ u'\u05D0', u'\u05EA' }, { u'\u05EF', u'\u05F2' }, { u'\u0620', u'\u064A' },
		{ u'\u066E', u'\u066F' }, { u'\u0671', u'\u06D3' }, { u'\u06E5', u'\u06E6' },
		{ u'\u06EE', u'\u06EF' }, { u'\u06FA', u'\u06FC' }, { u'\u0712', u'\u072F' },
		{ u'\u074D', u'\u07A5' }, { u'\u07CA', u'\u07EA' }, { u'\u07F4', u'\u07F5' },
		{ u'\u0800', u'\u0815' }, { u'\u0840', u'\u0858' }, { u'\u0860', u'\u086A' },
		{ u'\u08A0', u'\u08B4' }, { u'\u08B6', u'\u08C7' }, { u'\u0904', u'\u0939' },
		{ u'\u0958', u'\u0961' }, { u'\u0971', u'\u0980' }, { u'\u0985', u'\u098C' },
		{ u'\u098F', u'\u0990' }, { u'\u0993', u'\u09A8' }, { u'\u09AA', u'\u09B0' },
		{ u'\u09B6', u'\u09B9' }, { u'\u09DC', u'\u09DD' }, { u'\u09DF', u'\u09E1' },
		{ u'\u09F0', u'\u09F1' }, { u'\u0A05', u'\u0A0A' }, { u'\u0A0F', u'\u0A10' },
		{ u'\u0A13', u'\u0A28' }, { u'\u0A2A', u'\u0A30' }, { u'\u0A32', u'\u0A33' },
		{ u'\u0A35', u'\u0A36' }, { u'\u0A38', u'\u0A39' }, { u'\u0A59', u'\u0A5C' },
		{ u'\u0A72', u'\u0A74' }, { u'\u0A85', u'\u0A8D' }, { u'\u0A8F', u'\u0A91' },
		{ u'\u0A93', u'\u0AA8' }, { u'\u0AAA', u'\u0AB0' }, { u'\u0AB2', u'\u0AB3' },
		{ u'\u0AB5', u'\u0AB9' }, { u'\u0AE0', u'\u0AE1' }, { u'\u0B05', u'\u0B0C' },
		{ u'\u0B0F', u'\u0B10' }, { u'\u0B13', u'\u0B28' }, { u'\u0B2A', u'\u0B30' },
		{ u'\u0B32', u'\u0B33' }, { u'\u0B35', u'\u0B39' }, { u'\u0B5C', u'\u0B5D' },
		{ u'\u0B5F', u'\u0B61' }, { u'\u0B85', u'\u0B8A' }, { u'\u0B8E', u'\u0B90' },
		{ u'\u0B92', u'\u0B95' }, { u'\u0B99', u'\u0B9A' }, { u'\u0B9E', u'\u0B9F' },
		{ u'\u0BA3', u'\u0BA4' }, { u'\u0BA8', u'\u0BAA' }, { u'\u0BAE', u'\u0BB9' },
		{ u'\u0C05', u'\u0C0C' }, { u'\u0C0E', u'\u0C10' }, { u'\u0C12', u'\u0C28' },
		{ u'\u0C2A', u'\u0C39' }, { u'\u0C58', u'\u0C5A' }, { u'\u0C60', u'\u0C61' },
		{ u'\u0C85', u'\u0C8C' }, { u'\u0C8E', u'\u0C90' }, { u'\u0C92', u'\u0CA8' },
		{ u'\u0CAA', u'\u0CB3' }, { u'\u0CB5', u'\u0CB9' }, { u'\u0CE0', u'\u0CE1' },
		{ u'\u0CF1', u'\u0CF2' }, { u'\u0D04', u'\u0D0C' }, { u'\u0D0E', u'\u0D10' },
		{ u'\u0D12', u'\u0D3A' }, { u'\u0D54', u'\u0D56' }, { u'\u0D5F', u'\u0D61' },
		{ u'\u0D7A', u'\u0D7F' }, { u'\u0D85', u'\u0D96' }, { u'\u0D9A', u'\u0DB1' },
		{ u'\u0DB3', u'\u0DBB' }, { u'\u0DC0', u'\u0DC6' }, { u'\u0E01', u'\u0E30' },
		{ u'\u0E32', u'\u0E33' }, { u'\u0E40', u'\u0E46' }, { u'\u0E81', u'\u0E82' },
		{ u'\u0E86', u'\u0E8A' }, { u'\u0E8C', u'\u0EA3' }, { u'\u0EA7', u'\u0EB0' },
		{ u'\u0EB2', u'\u0EB3' }, { u'\u0EC0', u'\u0EC4' }, { u'\u0EDC', u'\u0EDF' },
		{ u'\u0F40', u'\u0F47' }, { u'\u0F49', u'\u0F6C' }, { u'\u0F88', u'\u0F8C' },
		{ u'\u1000', u'\u102A' }, { u'\u1050', u'\u1055' }, { u'\u105A', u'\u105D' },
		{ u'\u1065', u'\u1066' }, { u'\u106E', u'\u1070' }, { u'\u1075', u'\u1081' },
		{ u'\u10A0', u'\u10C5' }, { u'\u10D0', u'\u10FA' }, { u'\u10FC', u'\u1248' },
		{ u'\u124A', u'\u124D' }, { u'\u1250', u'\u1256' }, { u'\u125A', u'\u125D' },
		{ u'\u1260', u'\u1288' }, { u'\u128A', u'\u128D' }, { u'\u1290', u'\u12B0' },
		{ u'\u12B2', u'\u12B5' }, { u'\u12B8', u'\u12BE' }, { u'\u12C2', u'\u12C5' },
		{ u'\u12C8', u'\u12D6' }, { u'\u12D8', u'\u1310' }, { u'\u1312', u'\u1315' },
		{ u'\u1318', u'\u135A' }, { u'\u1380', u'\u138F' }, { u'\u13A0', u'\u13F5' },
		{ u'\u13F8', u'\u13FD' }, { u'\u1401', u'\u166C' }, { u'\u166F', u'\u167F' },
		{ u'\u1681', u'\u169A' }, { u'\u16A0', u'\u16EA' }, { u'\u16F1', u'\u16F8' },
		{ u'\u1700', u'\u170C' }, { u'\u170E', u'\u1711' }, { u'\u1720', u'\u1731' },
		{ u'\u1740', u'\u1751' }, { u'\u1760', u'\u176C' }, { u'\u176E', u'\u1770' },
		{ u'\u1780', u'\u17B3' }, { u'\u1820', u'\u1878' }, { u'\u1880', u'\u1884' },
		{ u'\u1887', u'\u18A8' }, { u'\u18B0', u'\u18F5' }, { u'\u1900', u'\u191E' },
		{ u'\u1950', u'\u196D' }, { u'\u1970', u'\u1974' }, { u'\u1980', u'\u19AB' },
		{ u'\u19B0', u'\u19C9' }, { u'\u1A00', u'\u1A16' }, { u'\u1A20', u'\u1A54' },
		{ u'\u1B05', u'\u1B33' }, { u'\u1B45', u'\u1B4B' }, { u'\u1B83', u'\u1BA0' },
		{ u'\u1BAE', u'\u1BAF' }, { u'\u1BBA', u'\u1BE5' }, { u'\u1C00', u'\u1C23' },
		{ u'\u1C4D', u'\u1C4F' }, { u'\u1C5A', u'\u1C7D' }, { u'\u1C80', u'\u1C88' },
		{ u'\u1C90', u'\u1CBA' }, { u'\u1CBD', u'\u1CBF' }, { u'\u1CE9', u'\u1CEC' },
		{ u'\u1CEE', u'\u1CF3' }, { u'\u1CF5', u'\u1CF6' }, { u'\u1D00', u'\u1DBF' },
		{ u'\u1E00', u'\u1F15' }, { u'\u1F18', u'\u1F1D' }, { u'\u1F20', u'\u1F45' },
		{ u'\u1F48', u'\u1F4D' }, { u'\u1F50', u'\u1F57' }, { u'\u1F5F', u'\u1F7D' },
		{ u'\u1F80', u'\u1FB4' }, { u'\u1FB6', u'\u1FBC' }, { u'\u1FC2', u'\u1FC4' },
		{ u'\u1FC6', u'\u1FCC' }, { u'\u1FD0', u'\u1FD3' }, { u'\u1FD6', u'\u1FDB' },
		{ u'\u1FE0', u'\u1FEC' }, { u'\u1FF2', u'\u1FF4' }, { u'\u1FF6', u'\u1FFC' },
		{ u'\u2090', u'\u209C' }, { u'\u210A', u'\u2113' }, { u'\u2119', u'\u211D' },
		{ u'\u212A', u'\u212D' }, { u'\u212F', u'\u2139' }, { u'\u213C', u'\u213F' },
		{ u'\u2145', u'\u2149' }, { u'\u2183', u'\u2184' }, { u'\u2C00', u'\u2C2E' },
		{ u'\u2C30', u'\u2C5E' }, { u'\u2C60', u'\u2CE4' }, { u'\u2CEB', u'\u2CEE' },
		{ u'\u2CF2', u'\u2CF3' }, { u'\u2D00', u'\u2D25' }, { u'\u2D30', u'\u2D67' },
		{ u'\u2D80', u'\u2D96' }, { u'\u2DA0', u'\u2DA6' }, { u'\u2DA8', u'\u2DAE' },
		{ u'\u2DB0', u'\u2DB6' }, { u'\u2DB8', u'\u2DBE' }, { u'\u2DC0', u'\u2DC6' },
		{ u'\u2DC8', u'\u2DCE' }, { u'\u2DD0', u'\u2DD6' }, { u'\u2DD8', u'\u2DDE' },
		{ u'\u3005', u'\u3006' }, { u'\u3031', u'\u3035' }, { u'\u303B', u'\u303C' },
		{ u'\u3041', u'\u3096' }, { u'\u309D', u'\u309F' }, { u'\u30A1', u'\u30FA' },
		{ u'\u30FC', u'\u30FF' }, { u'\u3105', u'\u312F' }, { u'\u3131', u'\u318E' },
		{ u'\u31A0', u'\u31BF' }, { u'\u31F0', u'\u31FF' }, { u'\u3400', u'\u4DBF' },
		{ u'\u4E00', u'\u9FFC' }, { u'\uA000', u'\uA48C' }, { u'\uA4D0', u'\uA4FD' },
		{ u'\uA500', u'\uA60C' }, { u'\uA610', u'\uA61F' }, { u'\uA62A', u'\uA62B' },
		{ u'\uA640', u'\uA66E' }, { u'\uA67F', u'\uA69D' }, { u'\uA6A0', u'\uA6E5' },
		{ u'\uA717', u'\uA71F' }, { u'\uA722', u'\uA788' }, { u'\uA78B', u'\uA7BF' },
		{ u'\uA7C2', u'\uA7CA' }, { u'\uA7F5', u'\uA801' }, { u'\uA803', u'\uA805' },
		{ u'\uA807', u'\uA80A' }, { u'\uA80C', u'\uA822' }, { u'\uA840', u'\uA873' },
		{ u'\uA882', u'\uA8B3' }, { u'\uA8F2', u'\uA8F7' }, { u'\uA8FD', u'\uA8FE' },
		{ u'\uA90A', u'\uA925' }, { u'\uA930', u'\uA946' }, { u'\uA960', u'\uA97C' },
		{ u'\uA984', u'\uA9B2' }, { u'\uA9E0', u'\uA9E4' }, { u'\uA9E6', u'\uA9EF' },
		{ u'\uA9FA', u'\uA9FE' }, { u'\uAA00', u'\uAA28' }, { u'\uAA40', u'\uAA42' },
		{ u'\uAA44', u'\uAA4B' }, { u'\uAA60', u'\uAA76' }, { u'\uAA7E', u'\uAAAF' },
		{ u'\uAAB5', u'\uAAB6' }, { u'\uAAB9', u'\uAABD' }, { u'\uAADB', u'\uAADD' },
		{ u'\uAAE0', u'\uAAEA' }, { u'\uAAF2', u'\uAAF4' }, { u'\uAB01', u'\uAB06' },
		{ u'\uAB09', u'\uAB0E' }, { u'\uAB11', u'\uAB16' }, { u'\uAB20', u'\uAB26' },
		{ u'\uAB28', u'\uAB2E' }, { u'\uAB30', u'\uAB5A' }, { u'\uAB5C', u'\uAB69' },
		{ u'\uAB70', u'\uABE2' }, { u'\uAC00', u'\uD7A3' }, { u'\uD7B0', u'\uD7C6' },
		{ u'\uD7CB', u'\uD7FB' }, { u'\uF900', u'\uFA6D' }, { u'\uFA70', u'\uFAD9' },
		{ u'\uFB00', u'\uFB06' }, { u'\uFB13', u'\uFB17' }, { u'\uFB1F', u'\uFB28' },
		{ u'\uFB2A', u'\uFB36' }, { u'\uFB38', u'\uFB3C' }, { u'\uFB40', u'\uFB41' },
		{ u'\uFB43', u'\uFB44' }, { u'\uFB46', u'\uFBB1' }, { u'\uFBD3', u'\uFD3D' },
		{ u'\uFD50', u'\uFD8F' }, { u'\uFD92', u'\uFDC7' }, { u'\uFDF0', u'\uFDFB' },
		{ u'\uFE70', u'\uFE74' }, { u'\uFE76', u'\uFEFC' }, { u'\uFF21', u'\uFF3A' },
		{ u'\uFF41', u'\uFF5A' }, { u'\uFF66', u'\uFFBE' }, { u'\uFFC2', u'\uFFC7' },
		{ u'\uFFCA', u'\uFFCF' }, { u'\uFFD2', u'\uFFD7' }, { u'\uFFDA', u'\uFFDC' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<3>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u'\xAA', u'\xB5', u'\xBA', u'\u02EC', u'\u02EE', u'\u037F',
		u'\u0386', u'\u038C', u'\u0559', u'\u06D5', u'\u06FF', u'\u0710',
		u'\u07B1', u'\u07FA', u'\u081A', u'\u0824', u'\u0828', u'\u093D',
		u'\u0950', u'\u09B2', u'\u09BD', u'\u09CE', u'\u09FC', u'\u0A5E',
		u'\u0ABD', u'\u0AD0', u'\u0AF9', u'\u0B3D', u'\u0B71', u'\u0B83',
		u'\u0B9C', u'\u0BD0', u'\u0C3D', u'\u0C80', u'\u0CBD', u'\u0CDE',
		u'\u0D3D', u'\u0D4E', u'\u0DBD', u'\u0E84', u'\u0EA5', u'\u0EBD',
		u'\u0EC6', u'\u0F00', u'\u103F', u'\u1061', u'\u108E', u'\u10C7',
		u'\u10CD', u'\u1258', u'\u12C0', u'\u17D7', u'\u17DC', u'\u18AA',
		u'\u1AA7', u'\u1CFA', u'\u1F59', u'\u1F5B', u'\u1F5D', u'\u1FBE',
		u'\u2071', u'\u207F', u'\u2102', u'\u2107', u'\u2115', u'\u2124',
		u'\u2126', u'\u2128', u'\u214E', u'\u2D27', u'\u2D2D', u'\u2D6F',
		u'\u2E2F', u'\uA8FB', u'\uA9CF', u'\uAA7A', u'\uAAB1', u'\uAAC0',
		u'\uAAC2', u'\uFB1D', u'\uFB3E',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<3>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\xA9' }, { u'\xAB', u'\xB4' }, { u'\xB6', u'\xB9' },
		{ u'\xBB', u'\xBF' }, { u'\u02C2', u'\u02C5' }, { u'\u02D2', u'\u02DF' },
		{ u'\u02E5', u'\u02EB' }, { u'\u02EF', u'\u036F' }, { u'\u0378', u'\u0379' },
		{ u'\u0380', u'\u0385' }, { u'\u0482', u'\u0489' }, { u'\u0557', u'\u0558' },
		{ u'\u055A', u'\u055F' }, { u'\u0589', u'\u05CF' }, { u'\u05EB', u'\u05EE' },
		{ u'\u05F3', u'\u061F' }, { u'\u064B', u'\u066D' }, { u'\u06D6', u'\u06E4' },
		{ u'\u06E7', u'\u06ED' }, { u'\u06F0', u'\u06F9' }, { u'\u06FD', u'\u06FE' },
		{ u'\u0700', u'\u070F' }, { u'\u0730', u'\u074C' }, { u'\u07A6', u'\u07B0' },
		{ u'\u07B2', u'\u07C9' }, { u'\u07EB', u'\u07F3' }, { u'\u07F6', u'\u07F9' },
		{ u'\u07FB', u'\u07FF' }, { u'\u0816', u'\u0819' }, { u'\u081B', u'\u0823' },
		{ u'\u0825', u'\u0827' }, { u'\u0829', u'\u083F' }, { u'\u0859', u'\u085F' },
		{ u'\u086B', u'\u089F' }, { u'\u08C8', u'\u0903' }, { u'\u093A', u'\u093C' },
		{ u'\u093E', u'\u094F' }, { u'\u0951', u'\u0957' }, { u'\u0962', u'\u0970' },
		{ u'\u0981', u'\u0984' }, { u'\u098D', u'\u098E' }, { u'\u0991', u'\u0992' },
		{ u'\u09B3', u'\u09B5' }, { u'\u09BA', u'\u09BC' }, { u'\u09BE', u'\u09CD' },
		{ u'\u09CF', u'\u09DB' }, { u'\u09E2', u'\u09EF' }, { u'\u09F2', u'\u09FB' },
		{ u'\u09FD', u'\u0A04' }, { u'\u0A0B', u'\u0A0E' }, { u'\u0A11', u'\u0A12' },
		{ u'\u0A3A', u'\u0A58' }, { u'\u0A5F', u'\u0A71' }, { u'\u0A75', u'\u0A84' },
		{ u'\u0ABA', u'\u0ABC' }, { u'\u0ABE', u'\u0ACF' }, { u'\u0AD1', u'\u0ADF' },
		{ u'\u0AE2', u'\u0AF8' }, { u'\u0AFA', u'\u0B04' }, { u'\u0B0D', u'\u0B0E' },
		{ u'\u0B11', u'\u0B12' }, { u'\u0B3A', u'\u0B3C' }, { u'\u0B3E', u'\u0B5B' },
		{ u'\u0B62', u'\u0B70' }, { u'\u0B72', u'\u0B82' }, { u'\u0B8B', u'\u0B8D' },
		{ u'\u0B96', u'\u0B98' }, { u'\u0BA0', u'\u0BA2' }, { u'\u0BA5', u'\u0BA7' },
		{ u'\u0BAB', u'\u0BAD' }, { u'\u0BBA', u'\u0BCF' }, { u'\u0BD1', u'\u0C04' },
		{ u'\u0C3A', u'\u0C3C' }, { u'\u0C3E', u'\u0C57' }, { u'\u0C5B', u'\u0C5F' },
		{ u'\u0C62', u'\u0C7F' }, { u'\u0C81', u'\u0C84' }, { u'\u0CBA', u'\u0CBC' },
		{ u'\u0CBE', u'\u0CDD' }, { u'\u0CE2', u'\u0CF0' }, { u'\u0CF3', u'\u0D03' },
		{ u'\u0D3B', u'\u0D3C' }, { u'\u0D3E', u'\u0D4D' }, { u'\u0D4F', u'\u0D53' },
		{ u'\u0D57', u'\u0D5E' }, { u'\u0D62', u'\u0D79' }, { u'\u0D80', u'\u0D84' },
		{ u'\u0D97', u'\u0D99' }, { u'\u0DBE', u'\u0DBF' }, { u'\u0DC7', u'\u0E00' },
		{ u'\u0E34', u'\u0E3F' }, { u'\u0E47', u'\u0E80' }, { u'\u0EB4', u'\u0EBC' },
		{ u'\u0EBE', u'\u0EBF' }, { u'\u0EC7', u'\u0EDB' }, { u'\u0EE0', u'\u0EFF' },
		{ u'\u0F01', u'\u0F3F' }, { u'\u0F6D', u'\u0F87' }, { u'\u0F8D', u'\u0FFF' },
		{ u'\u102B', u'\u103E' }, { u'\u1040', u'\u104F' }, { u'\u1056', u'\u1059' },
		{ u'\u105E', u'\u1060' }, { u'\u1062', u'\u1064' }, { u'\u1067', u'\u106D' },
		{ u'\u1071', u'\u1074' }, { u'\u1082', u'\u108D' }, { u'\u108F', u'\u109F' },
		{ u'\u10C8', u'\u10CC' }, { u'\u10CE', u'\u10CF' }, { u'\u124E', u'\u124F' },
		{ u'\u125E', u'\u125F' }, { u'\u128E', u'\u128F' }, { u'\u12B6', u'\u12B7' },
		{ u'\u12C6', u'\u12C7' }, { u'\u1316', u'\u1317' }, { u'\u135B', u'\u137F' },
		{ u'\u1390', u'\u139F' }, { u'\u13F6', u'\u13F7' }, { u'\u13FE', u'\u1400' },
		{ u'\u166D', u'\u166E' }, { u'\u169B', u'\u169F' }, { u'\u16EB', u'\u16F0' },
		{ u'\u16F9', u'\u16FF' }, { u'\u1712', u'\u171F' }, { u'\u1732', u'\u173F' },
		{ u'\u1752', u'\u175F' }, { u'\u1771', u'\u177F' }, { u'\u17B4', u'\u17D6' },
		{ u'\u17D8', u'\u17DB' }, { u'\u17DD', u'\u181F' }, { u'\u1879', u'\u187F' },
		{ u'\u1885', u'\u1886' }, { u'\u18AB', u'\u18AF' }, { u'\u18F6', u'\u18FF' },
		{ u'\u191F', u'\u194F' }, { u'\u196E', u'\u196F' }, { u'\u1975', u'\u197F' },
		{ u'\u19AC', u'\u19AF' }, { u'\u19CA', u'\u19FF' }, { u'\u1A17', u'\u1A1F' },
		{ u'\u1A55', u'\u1AA6' }, { u'\u1AA8', u'\u1B04' }, { u'\u1B34', u'\u1B44' },
		{ u'\u1B4C', u'\u1B82' }, { u'\u1BA1', u'\u1BAD' }, { u'\u1BB0', u'\u1BB9' },
		{ u'\u1BE6', u'\u1BFF' }, { u'\u1C24', u'\u1C4C' }, { u'\u1C50', u'\u1C59' },
		{ u'\u1C7E', u'\u1C7F' }, { u'\u1C89', u'\u1C8F' }, { u'\u1CBB', u'\u1CBC' },
		{ u'\u1CC0', u'\u1CE8' }, { u'\u1CF7', u'\u1CF9' }, { u'\u1CFB', u'\u1CFF' },
		{ u'\u1DC0', u'\u1DFF' }, { u'\u1F16', u'\u1F17' }, { u'\u1F1E', u'\u1F1F' },
		{ u'\u1F46', u'\u1F47' }, { u'\u1F4E', u'\u1F4F' }, { u'\u1F7E', u'\u1F7F' },
		{ u'\u1FBF', u'\u1FC1' }, { u'\u1FCD', u'\u1FCF' }, { u'\u1FD4', u'\u1FD5' },
		{ u'\u1FDC', u'\u1FDF' }, { u'\u1FED', u'\u1FF1' }, { u'\u1FFD', u'\u2070' },
		{ u'\u2072', u'\u207E' }, { u'\u2080', u'\u208F' }, { u'\u209D', u'\u2101' },
		{ u'\u2103', u'\u2106' }, { u'\u2108', u'\u2109' }, { u'\u2116', u'\u2118' },
		{ u'\u211E', u'\u2123' }, { u'\u213A', u'\u213B' }, { u'\u2140', u'\u2144' },
		{ u'\u214A', u'\u214D' }, { u'\u214F', u'\u2182' }, { u'\u2185', u'\u2BFF' },
		{ u'\u2CE5', u'\u2CEA' }, { u'\u2CEF', u'\u2CF1' }, { u'\u2CF4', u'\u2CFF' },
		{ u'\u2D28', u'\u2D2C' }, { u'\u2D2E', u'\u2D2F' }, { u'\u2D68', u'\u2D6E' },
		{ u'\u2D70', u'\u2D7F' }, { u'\u2D97', u'\u2D9F' }, { u'\u2DDF', u'\u2E2E' },
		{ u'\u2E30', u'\u3004' }, { u'\u3007', u'\u3030' }, { u'\u3036', u'\u303A' },
		{ u'\u303D', u'\u3040' }, { u'\u3097', u'\u309C' }, { u'\u3100', u'\u3104' },
		{ u'\u318F', u'\u319F' }, { u'\u31C0', u'\u31EF' }, { u'\u3200', u'\u33FF' },
		{ u'\u4DC0', u'\u4DFF' }, { u'\u9FFD', u'\u9FFF' }, { u'\uA48D', u'\uA4CF' },
		{ u'\uA4FE', u'\uA4FF' }, { u'\uA60D', u'\uA60F' }, { u'\uA620', u'\uA629' },
		{ u'\uA62C', u'\uA63F' }, { u'\uA66F', u'\uA67E' }, { u'\uA69E', u'\uA69F' },
		{ u'\uA6E6', u'\uA716' }, { u'\uA720', u'\uA721' }, { u'\uA789', u'\uA78A' },
		{ u'\uA7C0', u'\uA7C1' }, { u'\uA7CB', u'\uA7F4' }, { u'\uA823', u'\uA83F' },
		{ u'\uA874', u'\uA881' }, { u'\uA8B4', u'\uA8F1' }, { u'\uA8F8', u'\uA8FA' },
		{ u'\uA8FF', u'\uA909' }, { u'\uA926', u'\uA92F' }, { u'\uA947', u'\uA95F' },
		{ u'\uA97D', u'\uA983' }, { u'\uA9B3', u'\uA9CE' }, { u'\uA9D0', u'\uA9DF' },
		{ u'\uA9F0', u'\uA9F9' }, { u'\uAA29', u'\uAA3F' }, { u'\uAA4C', u'\uAA5F' },
		{ u'\uAA77', u'\uAA79' }, { u'\uAA7B', u'\uAA7D' }, { u'\uAAB2', u'\uAAB4' },
		{ u'\uAAB7', u'\uAAB8' }, { u'\uAABE', u'\uAABF' }, { u'\uAAC3', u'\uAADA' },
		{ u'\uAADE', u'\uAADF' }, { u'\uAAEB', u'\uAAF1' }, { u'\uAAF5', u'\uAB00' },
		{ u'\uAB07', u'\uAB08' }, { u'\uAB0F', u'\uAB10' }, { u'\uAB17', u'\uAB1F' },
		{ u'\uAB6A', u'\uAB6F' }, { u'\uABE3', u'\uABFF' }, { u'\uD7A4', u'\uD7AF' },
		{ u'\uD7C7', u'\uD7CA' }, { u'\uD7FC', u'\uF8FF' }, { u'\uFA6E', u'\uFA6F' },
		{ u'\uFADA', u'\uFAFF' }, { u'\uFB07', u'\uFB12' }, { u'\uFB18', u'\uFB1C' },
		{ u'\uFBB2', u'\uFBD2' }, { u'\uFD3E', u'\uFD4F' }, { u'\uFD90', u'\uFD91' },
		{ u'\uFDC8', u'\uFDEF' }, { u'\uFDFC', u'\uFE6F' }, { u'\uFEFD', u'\uFF20' },
		{ u'\uFF3B', u'\uFF40' }, { u'\uFF5B', u'\uFF65' }, { u'\uFFBF', u'\uFFC1' },
		{ u'\uFFC8', u'\uFFC9' }, { u'\uFFD0', u'\uFFD1' }, { u'\uFFD8', u'\uFFD9' },
		{ u'\uFFDD', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
	static constexpr char16_t false_values[] = 
	{
		u'\xD7', u'\xF7', u'\u02ED', u'\u0375', u'\u037E', u'\u0387',
		u'\u038B', u'\u038D', u'\u03A2', u'\u03F6', u'\u0530', u'\u0670',
		u'\u06D4', u'\u0711', u'\u08B5', u'\u09A9', u'\u09B1', u'\u09DE',
		u'\u0A29', u'\u0A31', u'\u0A34', u'\u0A37', u'\u0A5D', u'\u0A8E',
		u'\u0A92', u'\u0AA9', u'\u0AB1', u'\u0AB4', u'\u0B29', u'\u0B31',
		u'\u0B34', u'\u0B5E', u'\u0B84', u'\u0B91', u'\u0B9B', u'\u0B9D',
		u'\u0C0D', u'\u0C11', u'\u0C29', u'\u0C8D', u'\u0C91', u'\u0CA9',
		u'\u0CB4', u'\u0CDF', u'\u0D0D', u'\u0D11', u'\u0DB2', u'\u0DBC',
		u'\u0E31', u'\u0E83', u'\u0E85', u'\u0E8B', u'\u0EA4', u'\u0EA6',
		u'\u0EB1', u'\u0EC5', u'\u0F48', u'\u10C6', u'\u10FB', u'\u1249',
		u'\u1257', u'\u1259', u'\u1289', u'\u12B1', u'\u12BF', u'\u12C1',
		u'\u12D7', u'\u1311', u'\u1680', u'\u170D', u'\u176D', u'\u18A9',
		u'\u1CED', u'\u1CF4', u'\u1F58', u'\u1F5A', u'\u1F5C', u'\u1F5E',
		u'\u1FB5', u'\u1FBD', u'\u1FC5', u'\u1FF5', u'\u2114', u'\u2125',
		u'\u2127', u'\u2129', u'\u212E', u'\u2C2F', u'\u2C5F', u'\u2D26',
		u'\u2DA7', u'\u2DAF', u'\u2DB7', u'\u2DBF', u'\u2DC7', u'\u2DCF',
		u'\u2DD7', u'\u30A0', u'\u30FB', u'\u3130', u'\uA802', u'\uA806',
		u'\uA80B', u'\uA8FC', u'\uA9E5', u'\uA9FF', u'\uAA43', u'\uAAB0',
		u'\uAAC1', u'\uAB27', u'\uAB2F', u'\uAB5B', u'\uFB1E', u'\uFB29',
		u'\uFB37', u'\uFB3D', u'\uFB3F', u'\uFB42', u'\uFB45', u'\uFE75',
	};
	for (auto v : false_values)
		REQUIRE(!fn(v));
}

TEST_CASE("unicode - is_non_ascii_lowercase (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_lowercase);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\xDF', u'\xF6' }, { u'\xF8', u'\xFF' }, { u'\u0137', u'\u0138' },
		{ u'\u0148', u'\u0149' }, { u'\u017E', u'\u0180' }, { u'\u018C', u'\u018D' },
		{ u'\u0199', u'\u019B' }, { u'\u01AA', u'\u01AB' }, { u'\u01B9', u'\u01BA' },
		{ u'\u01BD', u'\u01BF' }, { u'\u01DC', u'\u01DD' }, { u'\u01EF', u'\u01F0' },
		{ u'\u0233', u'\u0239' }, { u'\u023F', u'\u0240' }, { u'\u024F', u'\u0293' },
		{ u'\u0295', u'\u02B8' }, { u'\u02C0', u'\u02C1' }, { u'\u02E0', u'\u02E4' },
		{ u'\u037A', u'\u037D' }, { u'\u03AC', u'\u03CE' }, { u'\u03D0', u'\u03D1' },
		{ u'\u03D5', u'\u03D7' }, { u'\u03EF', u'\u03F3' }, { u'\u03FB', u'\u03FC' },
		{ u'\u0430', u'\u045F' }, { u'\u04CE', u'\u04CF' }, { u'\u0560', u'\u0588' },
		{ u'\u10D0', u'\u10FA' }, { u'\u10FD', u'\u10FF' }, { u'\u13F8', u'\u13FD' },
		{ u'\u1C80', u'\u1C88' }, { u'\u1D00', u'\u1DBF' }, { u'\u1E95', u'\u1E9D' },
		{ u'\u1EFF', u'\u1F07' }, { u'\u1F10', u'\u1F15' }, { u'\u1F20', u'\u1F27' },
		{ u'\u1F30', u'\u1F37' }, { u'\u1F40', u'\u1F45' }, { u'\u1F50', u'\u1F57' },
		{ u'\u1F60', u'\u1F67' }, { u'\u1F70', u'\u1F7D' }, { u'\u1F80', u'\u1F87' },
		{ u'\u1F90', u'\u1F97' }, { u'\u1FA0', u'\u1FA7' }, { u'\u1FB0', u'\u1FB4' },
		{ u'\u1FB6', u'\u1FB7' }, { u'\u1FC2', u'\u1FC4' }, { u'\u1FC6', u'\u1FC7' },
		{ u'\u1FD0', u'\u1FD3' }, { u'\u1FD6', u'\u1FD7' }, { u'\u1FE0', u'\u1FE7' },
		{ u'\u1FF2', u'\u1FF4' }, { u'\u1FF6', u'\u1FF7' }, { u'\u2090', u'\u209C' },
		{ u'\u210E', u'\u210F' }, { u'\u213C', u'\u213D' }, { u'\u2146', u'\u2149' },
		{ u'\u2170', u'\u217F' }, { u'\u24D0', u'\u24E9' }, { u'\u2C30', u'\u2C5E' },
		{ u'\u2C65', u'\u2C66' }, { u'\u2C73', u'\u2C74' }, { u'\u2C76', u'\u2C7D' },
		{ u'\u2CE3', u'\u2CE4' }, { u'\u2D00', u'\u2D25' }, { u'\uA69B', u'\uA69D' },
		{ u'\uA72F', u'\uA731' }, { u'\uA76F', u'\uA778' }, { u'\uA793', u'\uA795' },
		{ u'\uA7F8', u'\uA7FA' }, { u'\uAB30', u'\uAB5A' }, { u'\uAB5C', u'\uAB68' },
		{ u'\uAB70', u'\uABBF' }, { u'\uFB00', u'\uFB06' }, { u'\uFB13', u'\uFB17' },
		{ u'\uFF41', u'\uFF5A' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<6>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u'\xAA', u'\xB5', u'\xBA', u'\u0101', u'\u0103', u'\u0105',
		u'\u0107', u'\u0109', u'\u010B', u'\u010D', u'\u010F', u'\u0111',
		u'\u0113', u'\u0115', u'\u0117', u'\u0119', u'\u011B', u'\u011D',
		u'\u011F', u'\u0121', u'\u0123', u'\u0125', u'\u0127', u'\u0129',
		u'\u012B', u'\u012D', u'\u012F', u'\u0131', u'\u0133', u'\u0135',
		u'\u013A', u'\u013C', u'\u013E', u'\u0140', u'\u0142', u'\u0144',
		u'\u0146', u'\u014B', u'\u014D', u'\u014F', u'\u0151', u'\u0153',
		u'\u0155', u'\u0157', u'\u0159', u'\u015B', u'\u015D', u'\u015F',
		u'\u0161', u'\u0163', u'\u0165', u'\u0167', u'\u0169', u'\u016B',
		u'\u016D', u'\u016F', u'\u0171', u'\u0173', u'\u0175', u'\u0177',
		u'\u017A', u'\u017C', u'\u0183', u'\u0185', u'\u0188', u'\u0192',
		u'\u0195', u'\u019E', u'\u01A1', u'\u01A3', u'\u01A5', u'\u01A8',
		u'\u01AD', u'\u01B0', u'\u01B4', u'\u01B6', u'\u01C6', u'\u01C9',
		u'\u01CC', u'\u01CE', u'\u01D0', u'\u01D2', u'\u01D4', u'\u01D6',
		u'\u01D8', u'\u01DA', u'\u01DF', u'\u01E1', u'\u01E3', u'\u01E5',
		u'\u01E7', u'\u01E9', u'\u01EB', u'\u01ED', u'\u01F3', u'\u01F5',
		u'\u01F9', u'\u01FB', u'\u01FD', u'\u01FF', u'\u0201', u'\u0203',
		u'\u0205', u'\u0207', u'\u0209', u'\u020B', u'\u020D', u'\u020F',
		u'\u0211', u'\u0213', u'\u0215', u'\u0217', u'\u0219', u'\u021B',
		u'\u021D', u'\u021F', u'\u0221', u'\u0223', u'\u0225', u'\u0227',
		u'\u0229', u'\u022B', u'\u022D', u'\u022F', u'\u0231', u'\u023C',
		u'\u0242', u'\u0247', u'\u0249', u'\u024B', u'\u024D', u'\u0345',
		u'\u0371', u'\u0373', u'\u0377', u'\u0390', u'\u03D9', u'\u03DB',
		u'\u03DD', u'\u03DF', u'\u03E1', u'\u03E3', u'\u03E5', u'\u03E7',
		u'\u03E9', u'\u03EB', u'\u03ED', u'\u03F5', u'\u03F8', u'\u0461',
		u'\u0463', u'\u0465', u'\u0467', u'\u0469', u'\u046B', u'\u046D',
		u'\u046F', u'\u0471', u'\u0473', u'\u0475', u'\u0477', u'\u0479',
		u'\u047B', u'\u047D', u'\u047F', u'\u0481', u'\u048B', u'\u048D',
		u'\u048F', u'\u0491', u'\u0493', u'\u0495', u'\u0497', u'\u0499',
		u'\u049B', u'\u049D', u'\u049F', u'\u04A1', u'\u04A3', u'\u04A5',
		u'\u04A7', u'\u04A9', u'\u04AB', u'\u04AD', u'\u04AF', u'\u04B1',
		u'\u04B3', u'\u04B5', u'\u04B7', u'\u04B9', u'\u04BB', u'\u04BD',
		u'\u04BF', u'\u04C2', u'\u04C4', u'\u04C6', u'\u04C8', u'\u04CA',
		u'\u04CC', u'\u04D1', u'\u04D3', u'\u04D5', u'\u04D7', u'\u04D9',
		u'\u04DB', u'\u04DD', u'\u04DF', u'\u04E1', u'\u04E3', u'\u04E5',
		u'\u04E7', u'\u04E9', u'\u04EB', u'\u04ED', u'\u04EF', u'\u04F1',
		u'\u04F3', u'\u04F5', u'\u04F7', u'\u04F9', u'\u04FB', u'\u04FD',
		u'\u04FF', u'\u0501', u'\u0503', u'\u0505', u'\u0507', u'\u0509',
		u'\u050B', u'\u050D', u'\u050F', u'\u0511', u'\u0513', u'\u0515',
		u'\u0517', u'\u0519', u'\u051B', u'\u051D', u'\u051F', u'\u0521',
		u'\u0523', u'\u0525', u'\u0527', u'\u0529', u'\u052B', u'\u052D',
		u'\u052F', u'\u1E01', u'\u1E03', u'\u1E05', u'\u1E07', u'\u1E09',
		u'\u1E0B', u'\u1E0D', u'\u1E0F', u'\u1E11', u'\u1E13', u'\u1E15',
		u'\u1E17', u'\u1E19', u'\u1E1B', u'\u1E1D', u'\u1E1F', u'\u1E21',
		u'\u1E23', u'\u1E25', u'\u1E27', u'\u1E29', u'\u1E2B', u'\u1E2D',
		u'\u1E2F', u'\u1E31', u'\u1E33', u'\u1E35', u'\u1E37', u'\u1E39',
		u'\u1E3B', u'\u1E3D', u'\u1E3F', u'\u1E41', u'\u1E43', u'\u1E45',
		u'\u1E47', u'\u1E49', u'\u1E4B', u'\u1E4D', u'\u1E4F', u'\u1E51',
		u'\u1E53', u'\u1E55', u'\u1E57', u'\u1E59', u'\u1E5B', u'\u1E5D',
		u'\u1E5F', u'\u1E61', u'\u1E63', u'\u1E65', u'\u1E67', u'\u1E69',
		u'\u1E6B', u'\u1E6D', u'\u1E6F', u'\u1E71', u'\u1E73', u'\u1E75',
		u'\u1E77', u'\u1E79', u'\u1E7B', u'\u1E7D', u'\u1E7F', u'\u1E81',
		u'\u1E83', u'\u1E85', u'\u1E87', u'\u1E89', u'\u1E8B', u'\u1E8D',
		u'\u1E8F', u'\u1E91', u'\u1E93', u'\u1E9F', u'\u1EA1', u'\u1EA3',
		u'\u1EA5', u'\u1EA7', u'\u1EA9', u'\u1EAB', u'\u1EAD', u'\u1EAF',
		u'\u1EB1', u'\u1EB3', u'\u1EB5', u'\u1EB7', u'\u1EB9', u'\u1EBB',
		u'\u1EBD', u'\u1EBF', u'\u1EC1', u'\u1EC3', u'\u1EC5', u'\u1EC7',
		u'\u1EC9', u'\u1ECB', u'\u1ECD', u'\u1ECF', u'\u1ED1', u'\u1ED3',
		u'\u1ED5', u'\u1ED7', u'\u1ED9', u'\u1EDB', u'\u1EDD', u'\u1EDF',
		u'\u1EE1', u'\u1EE3', u'\u1EE5', u'\u1EE7', u'\u1EE9', u'\u1EEB',
		u'\u1EED', u'\u1EEF', u'\u1EF1', u'\u1EF3', u'\u1EF5', u'\u1EF7',
		u'\u1EF9', u'\u1EFB', u'\u1EFD', u'\u1FBE', u'\u2071', u'\u207F',
		u'\u210A', u'\u2113', u'\u212F', u'\u2134', u'\u2139', u'\u214E',
		u'\u2184', u'\u2C61', u'\u2C68', u'\u2C6A', u'\u2C6C', u'\u2C71',
		u'\u2C81', u'\u2C83', u'\u2C85', u'\u2C87', u'\u2C89', u'\u2C8B',
		u'\u2C8D', u'\u2C8F', u'\u2C91', u'\u2C93', u'\u2C95', u'\u2C97',
		u'\u2C99', u'\u2C9B', u'\u2C9D', u'\u2C9F', u'\u2CA1', u'\u2CA3',
		u'\u2CA5', u'\u2CA7', u'\u2CA9', u'\u2CAB', u'\u2CAD', u'\u2CAF',
		u'\u2CB1', u'\u2CB3', u'\u2CB5', u'\u2CB7', u'\u2CB9', u'\u2CBB',
		u'\u2CBD', u'\u2CBF', u'\u2CC1', u'\u2CC3', u'\u2CC5', u'\u2CC7',
		u'\u2CC9', u'\u2CCB', u'\u2CCD', u'\u2CCF', u'\u2CD1', u'\u2CD3',
		u'\u2CD5', u'\u2CD7', u'\u2CD9', u'\u2CDB', u'\u2CDD', u'\u2CDF',
		u'\u2CE1', u'\u2CEC', u'\u2CEE', u'\u2CF3', u'\u2D27', u'\u2D2D',
		u'\uA641', u'\uA643', u'\uA645', u'\uA647', u'\uA649', u'\uA64B',
		u'\uA64D', u'\uA64F', u'\uA651', u'\uA653', u'\uA655', u'\uA657',
		u'\uA659', u'\uA65B', u'\uA65D', u'\uA65F', u'\uA661', u'\uA663',
		u'\uA665', u'\uA667', u'\uA669', u'\uA66B', u'\uA66D', u'\uA681',
		u'\uA683', u'\uA685', u'\uA687', u'\uA689', u'\uA68B', u'\uA68D',
		u'\uA68F', u'\uA691', u'\uA693', u'\uA695', u'\uA697', u'\uA699',
		u'\uA723', u'\uA725', u'\uA727', u'\uA729', u'\uA72B', u'\uA72D',
		u'\uA733', u'\uA735', u'\uA737', u'\uA739', u'\uA73B', u'\uA73D',
		u'\uA73F', u'\uA741', u'\uA743', u'\uA745', u'\uA747', u'\uA749',
		u'\uA74B', u'\uA74D', u'\uA74F', u'\uA751', u'\uA753', u'\uA755',
		u'\uA757', u'\uA759', u'\uA75B', u'\uA75D', u'\uA75F', u'\uA761',
		u'\uA763', u'\uA765', u'\uA767', u'\uA769', u'\uA76B', u'\uA76D',
		u'\uA77A', u'\uA77C', u'\uA77F', u'\uA781', u'\uA783', u'\uA785',
		u'\uA787', u'\uA78C', u'\uA78E', u'\uA791', u'\uA797', u'\uA799',
		u'\uA79B', u'\uA79D', u'\uA79F', u'\uA7A1', u'\uA7A3', u'\uA7A5',
		u'\uA7A7', u'\uA7A9', u'\uA7AF', u'\uA7B5', u'\uA7B7', u'\uA7B9',
		u'\uA7BB', u'\uA7BD', u'\uA7BF', u'\uA7C3', u'\uA7C8', u'\uA7CA',
		u'\uA7F6',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<6>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\xA9' }, { u'\xAB', u'\xB4' }, { u'\xB6', u'\xB9' },
		{ u'\xBB', u'\xDE' }, { u'\u0178', u'\u0179' }, { u'\u0181', u'\u0182' },
		{ u'\u0186', u'\u0187' }, { u'\u0189', u'\u018B' }, { u'\u018E', u'\u0191' },
		{ u'\u0193', u'\u0194' }, { u'\u0196', u'\u0198' }, { u'\u019C', u'\u019D' },
		{ u'\u019F', u'\u01A0' }, { u'\u01A6', u'\u01A7' }, { u'\u01AE', u'\u01AF' },
		{ u'\u01B1', u'\u01B3' }, { u'\u01B7', u'\u01B8' }, { u'\u01BB', u'\u01BC' },
		{ u'\u01C0', u'\u01C5' }, { u'\u01C7', u'\u01C8' }, { u'\u01CA', u'\u01CB' },
		{ u'\u01F1', u'\u01F2' }, { u'\u01F6', u'\u01F8' }, { u'\u023A', u'\u023B' },
		{ u'\u023D', u'\u023E' }, { u'\u0243', u'\u0246' }, { u'\u02B9', u'\u02BF' },
		{ u'\u02C2', u'\u02DF' }, { u'\u02E5', u'\u0344' }, { u'\u0346', u'\u0370' },
		{ u'\u0374', u'\u0376' }, { u'\u0378', u'\u0379' }, { u'\u037E', u'\u038F' },
		{ u'\u0391', u'\u03AB' }, { u'\u03D2', u'\u03D4' }, { u'\u03F6', u'\u03F7' },
		{ u'\u03F9', u'\u03FA' }, { u'\u03FD', u'\u042F' }, { u'\u0482', u'\u048A' },
		{ u'\u04C0', u'\u04C1' }, { u'\u0530', u'\u055F' }, { u'\u0589', u'\u10CF' },
		{ u'\u10FB', u'\u10FC' }, { u'\u1100', u'\u13F7' }, { u'\u13FE', u'\u1C7F' },
		{ u'\u1C89', u'\u1CFF' }, { u'\u1DC0', u'\u1E00' }, { u'\u1F08', u'\u1F0F' },
		{ u'\u1F16', u'\u1F1F' }, { u'\u1F28', u'\u1F2F' }, { u'\u1F38', u'\u1F3F' },
		{ u'\u1F46', u'\u1F4F' }, { u'\u1F58', u'\u1F5F' }, { u'\u1F68', u'\u1F6F' },
		{ u'\u1F7E', u'\u1F7F' }, { u'\u1F88', u'\u1F8F' }, { u'\u1F98', u'\u1F9F' },
		{ u'\u1FA8', u'\u1FAF' }, { u'\u1FB8', u'\u1FBD' }, { u'\u1FBF', u'\u1FC1' },
		{ u'\u1FC8', u'\u1FCF' }, { u'\u1FD4', u'\u1FD5' }, { u'\u1FD8', u'\u1FDF' },
		{ u'\u1FE8', u'\u1FF1' }, { u'\u1FF8', u'\u2070' }, { u'\u2072', u'\u207E' },
		{ u'\u2080', u'\u208F' }, { u'\u209D', u'\u2109' }, { u'\u210B', u'\u210D' },
		{ u'\u2110', u'\u2112' }, { u'\u2114', u'\u212E' }, { u'\u2130', u'\u2133' },
		{ u'\u2135', u'\u2138' }, { u'\u213A', u'\u213B' }, { u'\u213E', u'\u2145' },
		{ u'\u214A', u'\u214D' }, { u'\u214F', u'\u216F' }, { u'\u2180', u'\u2183' },
		{ u'\u2185', u'\u24CF' }, { u'\u24EA', u'\u2C2F' }, { u'\u2C5F', u'\u2C60' },
		{ u'\u2C62', u'\u2C64' }, { u'\u2C6D', u'\u2C70' }, { u'\u2C7E', u'\u2C80' },
		{ u'\u2CE5', u'\u2CEB' }, { u'\u2CEF', u'\u2CF2' }, { u'\u2CF4', u'\u2CFF' },
		{ u'\u2D28', u'\u2D2C' }, { u'\u2D2E', u'\uA640' }, { u'\uA66E', u'\uA680' },
		{ u'\uA69E', u'\uA722' }, { u'\uA77D', u'\uA77E' }, { u'\uA788', u'\uA78B' },
		{ u'\uA78F', u'\uA790' }, { u'\uA7AA', u'\uA7AE' }, { u'\uA7B0', u'\uA7B4' },
		{ u'\uA7C0', u'\uA7C2' }, { u'\uA7C4', u'\uA7C7' }, { u'\uA7CB', u'\uA7F5' },
		{ u'\uA7FB', u'\uAB2F' }, { u'\uAB69', u'\uAB6F' }, { u'\uABC0', u'\uFAFF' },
		{ u'\uFB07', u'\uFB12' }, { u'\uFB18', u'\uFF40' }, { u'\uFF5B', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
	static constexpr char16_t false_values[] = 
	{
		u'\xF7', u'\u0100', u'\u0102', u'\u0104', u'\u0106', u'\u0108',
		u'\u010A', u'\u010C', u'\u010E', u'\u0110', u'\u0112', u'\u0114',
		u'\u0116', u'\u0118', u'\u011A', u'\u011C', u'\u011E', u'\u0120',
		u'\u0122', u'\u0124', u'\u0126', u'\u0128', u'\u012A', u'\u012C',
		u'\u012E', u'\u0130', u'\u0132', u'\u0134', u'\u0136', u'\u0139',
		u'\u013B', u'\u013D', u'\u013F', u'\u0141', u'\u0143', u'\u0145',
		u'\u0147', u'\u014A', u'\u014C', u'\u014E', u'\u0150', u'\u0152',
		u'\u0154', u'\u0156', u'\u0158', u'\u015A', u'\u015C', u'\u015E',
		u'\u0160', u'\u0162', u'\u0164', u'\u0166', u'\u0168', u'\u016A',
		u'\u016C', u'\u016E', u'\u0170', u'\u0172', u'\u0174', u'\u0176',
		u'\u017B', u'\u017D', u'\u0184', u'\u01A2', u'\u01A4', u'\u01A9',
		u'\u01AC', u'\u01B5', u'\u01CD', u'\u01CF', u'\u01D1', u'\u01D3',
		u'\u01D5', u'\u01D7', u'\u01D9', u'\u01DB', u'\u01DE', u'\u01E0',
		u'\u01E2', u'\u01E4', u'\u01E6', u'\u01E8', u'\u01EA', u'\u01EC',
		u'\u01EE', u'\u01F4', u'\u01FA', u'\u01FC', u'\u01FE', u'\u0200',
		u'\u0202', u'\u0204', u'\u0206', u'\u0208', u'\u020A', u'\u020C',
		u'\u020E', u'\u0210', u'\u0212', u'\u0214', u'\u0216', u'\u0218',
		u'\u021A', u'\u021C', u'\u021E', u'\u0220', u'\u0222', u'\u0224',
		u'\u0226', u'\u0228', u'\u022A', u'\u022C', u'\u022E', u'\u0230',
		u'\u0232', u'\u0241', u'\u0248', u'\u024A', u'\u024C', u'\u024E',
		u'\u0294', u'\u0372', u'\u03CF', u'\u03D8', u'\u03DA', u'\u03DC',
		u'\u03DE', u'\u03E0', u'\u03E2', u'\u03E4', u'\u03E6', u'\u03E8',
		u'\u03EA', u'\u03EC', u'\u03EE', u'\u03F4', u'\u0460', u'\u0462',
		u'\u0464', u'\u0466', u'\u0468', u'\u046A', u'\u046C', u'\u046E',
		u'\u0470', u'\u0472', u'\u0474', u'\u0476', u'\u0478', u'\u047A',
		u'\u047C', u'\u047E', u'\u0480', u'\u048C', u'\u048E', u'\u0490',
		u'\u0492', u'\u0494', u'\u0496', u'\u0498', u'\u049A', u'\u049C',
		u'\u049E', u'\u04A0', u'\u04A2', u'\u04A4', u'\u04A6', u'\u04A8',
		u'\u04AA', u'\u04AC', u'\u04AE', u'\u04B0', u'\u04B2', u'\u04B4',
		u'\u04B6', u'\u04B8', u'\u04BA', u'\u04BC', u'\u04BE', u'\u04C3',
		u'\u04C5', u'\u04C7', u'\u04C9', u'\u04CB', u'\u04CD', u'\u04D0',
		u'\u04D2', u'\u04D4', u'\u04D6', u'\u04D8', u'\u04DA', u'\u04DC',
		u'\u04DE', u'\u04E0', u'\u04E2', u'\u04E4', u'\u04E6', u'\u04E8',
		u'\u04EA', u'\u04EC', u'\u04EE', u'\u04F0', u'\u04F2', u'\u04F4',
		u'\u04F6', u'\u04F8', u'\u04FA', u'\u04FC', u'\u04FE', u'\u0500',
		u'\u0502', u'\u0504', u'\u0506', u'\u0508', u'\u050A', u'\u050C',
		u'\u050E', u'\u0510', u'\u0512', u'\u0514', u'\u0516', u'\u0518',
		u'\u051A', u'\u051C', u'\u051E', u'\u0520', u'\u0522', u'\u0524',
		u'\u0526', u'\u0528', u'\u052A', u'\u052C', u'\u052E', u'\u1E02',
		u'\u1E04', u'\u1E06', u'\u1E08', u'\u1E0A', u'\u1E0C', u'\u1E0E',
		u'\u1E10', u'\u1E12', u'\u1E14', u'\u1E16', u'\u1E18', u'\u1E1A',
		u'\u1E1C', u'\u1E1E', u'\u1E20', u'\u1E22', u'\u1E24', u'\u1E26',
		u'\u1E28', u'\u1E2A', u'\u1E2C', u'\u1E2E', u'\u1E30', u'\u1E32',
		u'\u1E34', u'\u1E36', u'\u1E38', u'\u1E3A', u'\u1E3C', u'\u1E3E',
		u'\u1E40', u'\u1E42', u'\u1E44', u'\u1E46', u'\u1E48', u'\u1E4A',
		u'\u1E4C', u'\u1E4E', u'\u1E50', u'\u1E52', u'\u1E54', u'\u1E56',
		u'\u1E58', u'\u1E5A', u'\u1E5C', u'\u1E5E', u'\u1E60', u'\u1E62',
		u'\u1E64', u'\u1E66', u'\u1E68', u'\u1E6A', u'\u1E6C', u'\u1E6E',
		u'\u1E70', u'\u1E72', u'\u1E74', u'\u1E76', u'\u1E78', u'\u1E7A',
		u'\u1E7C', u'\u1E7E', u'\u1E80', u'\u1E82', u'\u1E84', u'\u1E86',
		u'\u1E88', u'\u1E8A', u'\u1E8C', u'\u1E8E', u'\u1E90', u'\u1E92',
		u'\u1E94', u'\u1E9E', u'\u1EA0', u'\u1EA2', u'\u1EA4', u'\u1EA6',
		u'\u1EA8', u'\u1EAA', u'\u1EAC', u'\u1EAE', u'\u1EB0', u'\u1EB2',
		u'\u1EB4', u'\u1EB6', u'\u1EB8', u'\u1EBA', u'\u1EBC', u'\u1EBE',
		u'\u1EC0', u'\u1EC2', u'\u1EC4', u'\u1EC6', u'\u1EC8', u'\u1ECA',
		u'\u1ECC', u'\u1ECE', u'\u1ED0', u'\u1ED2', u'\u1ED4', u'\u1ED6',
		u'\u1ED8', u'\u1EDA', u'\u1EDC', u'\u1EDE', u'\u1EE0', u'\u1EE2',
		u'\u1EE4', u'\u1EE6', u'\u1EE8', u'\u1EEA', u'\u1EEC', u'\u1EEE',
		u'\u1EF0', u'\u1EF2', u'\u1EF4', u'\u1EF6', u'\u1EF8', u'\u1EFA',
		u'\u1EFC', u'\u1EFE', u'\u1FB5', u'\u1FC5', u'\u1FF5', u'\u2C67',
		u'\u2C69', u'\u2C6B', u'\u2C72', u'\u2C75', u'\u2C82', u'\u2C84',
		u'\u2C86', u'\u2C88', u'\u2C8A', u'\u2C8C', u'\u2C8E', u'\u2C90',
		u'\u2C92', u'\u2C94', u'\u2C96', u'\u2C98', u'\u2C9A', u'\u2C9C',
		u'\u2C9E', u'\u2CA0', u'\u2CA2', u'\u2CA4', u'\u2CA6', u'\u2CA8',
		u'\u2CAA', u'\u2CAC', u'\u2CAE', u'\u2CB0', u'\u2CB2', u'\u2CB4',
		u'\u2CB6', u'\u2CB8', u'\u2CBA', u'\u2CBC', u'\u2CBE', u'\u2CC0',
		u'\u2CC2', u'\u2CC4', u'\u2CC6', u'\u2CC8', u'\u2CCA', u'\u2CCC',
		u'\u2CCE', u'\u2CD0', u'\u2CD2', u'\u2CD4', u'\u2CD6', u'\u2CD8',
		u'\u2CDA', u'\u2CDC', u'\u2CDE', u'\u2CE0', u'\u2CE2', u'\u2CED',
		u'\u2D26', u'\uA642', u'\uA644', u'\uA646', u'\uA648', u'\uA64A',
		u'\uA64C', u'\uA64E', u'\uA650', u'\uA652', u'\uA654', u'\uA656',
		u'\uA658', u'\uA65A', u'\uA65C', u'\uA65E', u'\uA660', u'\uA662',
		u'\uA664', u'\uA666', u'\uA668', u'\uA66A', u'\uA66C', u'\uA682',
		u'\uA684', u'\uA686', u'\uA688', u'\uA68A', u'\uA68C', u'\uA68E',
		u'\uA690', u'\uA692', u'\uA694', u'\uA696', u'\uA698', u'\uA69A',
		u'\uA724', u'\uA726', u'\uA728', u'\uA72A', u'\uA72C', u'\uA72E',
		u'\uA732', u'\uA734', u'\uA736', u'\uA738', u'\uA73A', u'\uA73C',
		u'\uA73E', u'\uA740', u'\uA742', u'\uA744', u'\uA746', u'\uA748',
		u'\uA74A', u'\uA74C', u'\uA74E', u'\uA750', u'\uA752', u'\uA754',
		u'\uA756', u'\uA758', u'\uA75A', u'\uA75C', u'\uA75E', u'\uA760',
		u'\uA762', u'\uA764', u'\uA766', u'\uA768', u'\uA76A', u'\uA76C',
		u'\uA76E', u'\uA779', u'\uA77B', u'\uA780', u'\uA782', u'\uA784',
		u'\uA786', u'\uA78D', u'\uA792', u'\uA796', u'\uA798', u'\uA79A',
		u'\uA79C', u'\uA79E', u'\uA7A0', u'\uA7A2', u'\uA7A4', u'\uA7A6',
		u'\uA7A8', u'\uA7B6', u'\uA7B8', u'\uA7BA', u'\uA7BC', u'\uA7BE',
		u'\uA7C9', u'\uA7F7', u'\uAB5B',
	};
	for (auto v : false_values)
		REQUIRE(!fn(v));
}

TEST_CASE("unicode - is_non_ascii_number (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_number);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\u0660', u'\u0669' }, { u'\u06F0', u'\u06F9' }, { u'\u07C0', u'\u07C9' },
		{ u'\u0966', u'\u096F' }, { u'\u09E6', u'\u09EF' }, { u'\u0A66', u'\u0A6F' },
		{ u'\u0AE6', u'\u0AEF' }, { u'\u0B66', u'\u0B6F' }, { u'\u0BE6', u'\u0BEF' },
		{ u'\u0C66', u'\u0C6F' }, { u'\u0CE6', u'\u0CEF' }, { u'\u0D66', u'\u0D6F' },
		{ u'\u0DE6', u'\u0DEF' }, { u'\u0E50', u'\u0E59' }, { u'\u0ED0', u'\u0ED9' },
		{ u'\u0F20', u'\u0F29' }, { u'\u1040', u'\u1049' }, { u'\u1090', u'\u1099' },
		{ u'\u16EE', u'\u16F0' }, { u'\u17E0', u'\u17E9' }, { u'\u1810', u'\u1819' },
		{ u'\u1946', u'\u194F' }, { u'\u19D0', u'\u19D9' }, { u'\u1A80', u'\u1A89' },
		{ u'\u1A90', u'\u1A99' }, { u'\u1B50', u'\u1B59' }, { u'\u1BB0', u'\u1BB9' },
		{ u'\u1C40', u'\u1C49' }, { u'\u1C50', u'\u1C59' }, { u'\u2160', u'\u2182' },
		{ u'\u2185', u'\u2188' }, { u'\u3021', u'\u3029' }, { u'\u3038', u'\u303A' },
		{ u'\uA620', u'\uA629' }, { u'\uA6E6', u'\uA6EF' }, { u'\uA8D0', u'\uA8D9' },
		{ u'\uA900', u'\uA909' }, { u'\uA9D0', u'\uA9D9' }, { u'\uA9F0', u'\uA9F9' },
		{ u'\uAA50', u'\uAA59' }, { u'\uABF0', u'\uABF9' }, { u'\uFF10', u'\uFF19' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<4>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u'\u3007',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<4>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\u065F' }, { u'\u066A', u'\u06EF' }, { u'\u06FA', u'\u07BF' },
		{ u'\u07CA', u'\u0965' }, { u'\u0970', u'\u09E5' }, { u'\u09F0', u'\u0A65' },
		{ u'\u0A70', u'\u0AE5' }, { u'\u0AF0', u'\u0B65' }, { u'\u0B70', u'\u0BE5' },
		{ u'\u0BF0', u'\u0C65' }, { u'\u0C70', u'\u0CE5' }, { u'\u0CF0', u'\u0D65' },
		{ u'\u0D70', u'\u0DE5' }, { u'\u0DF0', u'\u0E4F' }, { u'\u0E5A', u'\u0ECF' },
		{ u'\u0EDA', u'\u0F1F' }, { u'\u0F2A', u'\u103F' }, { u'\u104A', u'\u108F' },
		{ u'\u109A', u'\u16ED' }, { u'\u16F1', u'\u17DF' }, { u'\u17EA', u'\u180F' },
		{ u'\u181A', u'\u1945' }, { u'\u1950', u'\u19CF' }, { u'\u19DA', u'\u1A7F' },
		{ u'\u1A8A', u'\u1A8F' }, { u'\u1A9A', u'\u1B4F' }, { u'\u1B5A', u'\u1BAF' },
		{ u'\u1BBA', u'\u1C3F' }, { u'\u1C4A', u'\u1C4F' }, { u'\u1C5A', u'\u215F' },
		{ u'\u2183', u'\u2184' }, { u'\u2189', u'\u3006' }, { u'\u3008', u'\u3020' },
		{ u'\u302A', u'\u3037' }, { u'\u303B', u'\uA61F' }, { u'\uA62A', u'\uA6E5' },
		{ u'\uA6F0', u'\uA8CF' }, { u'\uA8DA', u'\uA8FF' }, { u'\uA90A', u'\uA9CF' },
		{ u'\uA9DA', u'\uA9EF' }, { u'\uA9FA', u'\uAA4F' }, { u'\uAA5A', u'\uABEF' },
		{ u'\uABFA', u'\uFF0F' }, { u'\uFF1A', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_non_ascii_uppercase (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_uppercase);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\xC0', u'\xD6' }, { u'\xD8', u'\xDE' }, { u'\u0178', u'\u0179' },
		{ u'\u0181', u'\u0182' }, { u'\u0186', u'\u0187' }, { u'\u0189', u'\u018B' },
		{ u'\u018E', u'\u0191' }, { u'\u0193', u'\u0194' }, { u'\u0196', u'\u0198' },
		{ u'\u019C', u'\u019D' }, { u'\u019F', u'\u01A0' }, { u'\u01A6', u'\u01A7' },
		{ u'\u01AE', u'\u01AF' }, { u'\u01B1', u'\u01B3' }, { u'\u01B7', u'\u01B8' },
		{ u'\u01F6', u'\u01F8' }, { u'\u023A', u'\u023B' }, { u'\u023D', u'\u023E' },
		{ u'\u0243', u'\u0246' }, { u'\u0388', u'\u038A' }, { u'\u038E', u'\u038F' },
		{ u'\u0391', u'\u03A1' }, { u'\u03A3', u'\u03AB' }, { u'\u03D2', u'\u03D4' },
		{ u'\u03F9', u'\u03FA' }, { u'\u03FD', u'\u042F' }, { u'\u04C0', u'\u04C1' },
		{ u'\u0531', u'\u0556' }, { u'\u10A0', u'\u10C5' }, { u'\u13A0', u'\u13F5' },
		{ u'\u1C90', u'\u1CBA' }, { u'\u1CBD', u'\u1CBF' }, { u'\u1F08', u'\u1F0F' },
		{ u'\u1F18', u'\u1F1D' }, { u'\u1F28', u'\u1F2F' }, { u'\u1F38', u'\u1F3F' },
		{ u'\u1F48', u'\u1F4D' }, { u'\u1F68', u'\u1F6F' }, { u'\u1FB8', u'\u1FBB' },
		{ u'\u1FC8', u'\u1FCB' }, { u'\u1FD8', u'\u1FDB' }, { u'\u1FE8', u'\u1FEC' },
		{ u'\u1FF8', u'\u1FFB' }, { u'\u210B', u'\u210D' }, { u'\u2110', u'\u2112' },
		{ u'\u2119', u'\u211D' }, { u'\u212A', u'\u212D' }, { u'\u2130', u'\u2133' },
		{ u'\u213E', u'\u213F' }, { u'\u2160', u'\u216F' }, { u'\u24B6', u'\u24CF' },
		{ u'\u2C00', u'\u2C2E' }, { u'\u2C62', u'\u2C64' }, { u'\u2C6D', u'\u2C70' },
		{ u'\u2C7E', u'\u2C80' }, { u'\uA77D', u'\uA77E' }, { u'\uA7AA', u'\uA7AE' },
		{ u'\uA7B0', u'\uA7B4' }, { u'\uA7C4', u'\uA7C7' }, { u'\uFF21', u'\uFF3A' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<7>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u'\u0100', u'\u0102', u'\u0104', u'\u0106', u'\u0108', u'\u010A',
		u'\u010C', u'\u010E', u'\u0110', u'\u0112', u'\u0114', u'\u0116',
		u'\u0118', u'\u011A', u'\u011C', u'\u011E', u'\u0120', u'\u0122',
		u'\u0124', u'\u0126', u'\u0128', u'\u012A', u'\u012C', u'\u012E',
		u'\u0130', u'\u0132', u'\u0134', u'\u0136', u'\u0139', u'\u013B',
		u'\u013D', u'\u013F', u'\u0141', u'\u0143', u'\u0145', u'\u0147',
		u'\u014A', u'\u014C', u'\u014E', u'\u0150', u'\u0152', u'\u0154',
		u'\u0156', u'\u0158', u'\u015A', u'\u015C', u'\u015E', u'\u0160',
		u'\u0162', u'\u0164', u'\u0166', u'\u0168', u'\u016A', u'\u016C',
		u'\u016E', u'\u0170', u'\u0172', u'\u0174', u'\u0176', u'\u017B',
		u'\u017D', u'\u0184', u'\u01A2', u'\u01A4', u'\u01A9', u'\u01AC',
		u'\u01B5', u'\u01BC', u'\u01C4', u'\u01C7', u'\u01CA', u'\u01CD',
		u'\u01CF', u'\u01D1', u'\u01D3', u'\u01D5', u'\u01D7', u'\u01D9',
		u'\u01DB', u'\u01DE', u'\u01E0', u'\u01E2', u'\u01E4', u'\u01E6',
		u'\u01E8', u'\u01EA', u'\u01EC', u'\u01EE', u'\u01F1', u'\u01F4',
		u'\u01FA', u'\u01FC', u'\u01FE', u'\u0200', u'\u0202', u'\u0204',
		u'\u0206', u'\u0208', u'\u020A', u'\u020C', u'\u020E', u'\u0210',
		u'\u0212', u'\u0214', u'\u0216', u'\u0218', u'\u021A', u'\u021C',
		u'\u021E', u'\u0220', u'\u0222', u'\u0224', u'\u0226', u'\u0228',
		u'\u022A', u'\u022C', u'\u022E', u'\u0230', u'\u0232', u'\u0241',
		u'\u0248', u'\u024A', u'\u024C', u'\u024E', u'\u0370', u'\u0372',
		u'\u0376', u'\u037F', u'\u0386', u'\u038C', u'\u03CF', u'\u03D8',
		u'\u03DA', u'\u03DC', u'\u03DE', u'\u03E0', u'\u03E2', u'\u03E4',
		u'\u03E6', u'\u03E8', u'\u03EA', u'\u03EC', u'\u03EE', u'\u03F4',
		u'\u03F7', u'\u0460', u'\u0462', u'\u0464', u'\u0466', u'\u0468',
		u'\u046A', u'\u046C', u'\u046E', u'\u0470', u'\u0472', u'\u0474',
		u'\u0476', u'\u0478', u'\u047A', u'\u047C', u'\u047E', u'\u0480',
		u'\u048A', u'\u048C', u'\u048E', u'\u0490', u'\u0492', u'\u0494',
		u'\u0496', u'\u0498', u'\u049A', u'\u049C', u'\u049E', u'\u04A0',
		u'\u04A2', u'\u04A4', u'\u04A6', u'\u04A8', u'\u04AA', u'\u04AC',
		u'\u04AE', u'\u04B0', u'\u04B2', u'\u04B4', u'\u04B6', u'\u04B8',
		u'\u04BA', u'\u04BC', u'\u04BE', u'\u04C3', u'\u04C5', u'\u04C7',
		u'\u04C9', u'\u04CB', u'\u04CD', u'\u04D0', u'\u04D2', u'\u04D4',
		u'\u04D6', u'\u04D8', u'\u04DA', u'\u04DC', u'\u04DE', u'\u04E0',
		u'\u04E2', u'\u04E4', u'\u04E6', u'\u04E8', u'\u04EA', u'\u04EC',
		u'\u04EE', u'\u04F0', u'\u04F2', u'\u04F4', u'\u04F6', u'\u04F8',
		u'\u04FA', u'\u04FC', u'\u04FE', u'\u0500', u'\u0502', u'\u0504',
		u'\u0506', u'\u0508', u'\u050A', u'\u050C', u'\u050E', u'\u0510',
		u'\u0512', u'\u0514', u'\u0516', u'\u0518', u'\u051A', u'\u051C',
		u'\u051E', u'\u0520', u'\u0522', u'\u0524', u'\u0526', u'\u0528',
		u'\u052A', u'\u052C', u'\u052E', u'\u10C7', u'\u10CD', u'\u1E00',
		u'\u1E02', u'\u1E04', u'\u1E06', u'\u1E08', u'\u1E0A', u'\u1E0C',
		u'\u1E0E', u'\u1E10', u'\u1E12', u'\u1E14', u'\u1E16', u'\u1E18',
		u'\u1E1A', u'\u1E1C', u'\u1E1E', u'\u1E20', u'\u1E22', u'\u1E24',
		u'\u1E26', u'\u1E28', u'\u1E2A', u'\u1E2C', u'\u1E2E', u'\u1E30',
		u'\u1E32', u'\u1E34', u'\u1E36', u'\u1E38', u'\u1E3A', u'\u1E3C',
		u'\u1E3E', u'\u1E40', u'\u1E42', u'\u1E44', u'\u1E46', u'\u1E48',
		u'\u1E4A', u'\u1E4C', u'\u1E4E', u'\u1E50', u'\u1E52', u'\u1E54',
		u'\u1E56', u'\u1E58', u'\u1E5A', u'\u1E5C', u'\u1E5E', u'\u1E60',
		u'\u1E62', u'\u1E64', u'\u1E66', u'\u1E68', u'\u1E6A', u'\u1E6C',
		u'\u1E6E', u'\u1E70', u'\u1E72', u'\u1E74', u'\u1E76', u'\u1E78',
		u'\u1E7A', u'\u1E7C', u'\u1E7E', u'\u1E80', u'\u1E82', u'\u1E84',
		u'\u1E86', u'\u1E88', u'\u1E8A', u'\u1E8C', u'\u1E8E', u'\u1E90',
		u'\u1E92', u'\u1E94', u'\u1E9E', u'\u1EA0', u'\u1EA2', u'\u1EA4',
		u'\u1EA6', u'\u1EA8', u'\u1EAA', u'\u1EAC', u'\u1EAE', u'\u1EB0',
		u'\u1EB2', u'\u1EB4', u'\u1EB6', u'\u1EB8', u'\u1EBA', u'\u1EBC',
		u'\u1EBE', u'\u1EC0', u'\u1EC2', u'\u1EC4', u'\u1EC6', u'\u1EC8',
		u'\u1ECA', u'\u1ECC', u'\u1ECE', u'\u1ED0', u'\u1ED2', u'\u1ED4',
		u'\u1ED6', u'\u1ED8', u'\u1EDA', u'\u1EDC', u'\u1EDE', u'\u1EE0',
		u'\u1EE2', u'\u1EE4', u'\u1EE6', u'\u1EE8', u'\u1EEA', u'\u1EEC',
		u'\u1EEE', u'\u1EF0', u'\u1EF2', u'\u1EF4', u'\u1EF6', u'\u1EF8',
		u'\u1EFA', u'\u1EFC', u'\u1EFE', u'\u1F59', u'\u1F5B', u'\u1F5D',
		u'\u1F5F', u'\u2102', u'\u2107', u'\u2115', u'\u2124', u'\u2126',
		u'\u2128', u'\u2145', u'\u2183', u'\u2C60', u'\u2C67', u'\u2C69',
		u'\u2C6B', u'\u2C72', u'\u2C75', u'\u2C82', u'\u2C84', u'\u2C86',
		u'\u2C88', u'\u2C8A', u'\u2C8C', u'\u2C8E', u'\u2C90', u'\u2C92',
		u'\u2C94', u'\u2C96', u'\u2C98', u'\u2C9A', u'\u2C9C', u'\u2C9E',
		u'\u2CA0', u'\u2CA2', u'\u2CA4', u'\u2CA6', u'\u2CA8', u'\u2CAA',
		u'\u2CAC', u'\u2CAE', u'\u2CB0', u'\u2CB2', u'\u2CB4', u'\u2CB6',
		u'\u2CB8', u'\u2CBA', u'\u2CBC', u'\u2CBE', u'\u2CC0', u'\u2CC2',
		u'\u2CC4', u'\u2CC6', u'\u2CC8', u'\u2CCA', u'\u2CCC', u'\u2CCE',
		u'\u2CD0', u'\u2CD2', u'\u2CD4', u'\u2CD6', u'\u2CD8', u'\u2CDA',
		u'\u2CDC', u'\u2CDE', u'\u2CE0', u'\u2CE2', u'\u2CEB', u'\u2CED',
		u'\u2CF2', u'\uA640', u'\uA642', u'\uA644', u'\uA646', u'\uA648',
		u'\uA64A', u'\uA64C', u'\uA64E', u'\uA650', u'\uA652', u'\uA654',
		u'\uA656', u'\uA658', u'\uA65A', u'\uA65C', u'\uA65E', u'\uA660',
		u'\uA662', u'\uA664', u'\uA666', u'\uA668', u'\uA66A', u'\uA66C',
		u'\uA680', u'\uA682', u'\uA684', u'\uA686', u'\uA688', u'\uA68A',
		u'\uA68C', u'\uA68E', u'\uA690', u'\uA692', u'\uA694', u'\uA696',
		u'\uA698', u'\uA69A', u'\uA722', u'\uA724', u'\uA726', u'\uA728',
		u'\uA72A', u'\uA72C', u'\uA72E', u'\uA732', u'\uA734', u'\uA736',
		u'\uA738', u'\uA73A', u'\uA73C', u'\uA73E', u'\uA740', u'\uA742',
		u'\uA744', u'\uA746', u'\uA748', u'\uA74A', u'\uA74C', u'\uA74E',
		u'\uA750', u'\uA752', u'\uA754', u'\uA756', u'\uA758', u'\uA75A',
		u'\uA75C', u'\uA75E', u'\uA760', u'\uA762', u'\uA764', u'\uA766',
		u'\uA768', u'\uA76A', u'\uA76C', u'\uA76E', u'\uA779', u'\uA77B',
		u'\uA780', u'\uA782', u'\uA784', u'\uA786', u'\uA78B', u'\uA78D',
		u'\uA790', u'\uA792', u'\uA796', u'\uA798', u'\uA79A', u'\uA79C',
		u'\uA79E', u'\uA7A0', u'\uA7A2', u'\uA7A4', u'\uA7A6', u'\uA7A8',
		u'\uA7B6', u'\uA7B8', u'\uA7BA', u'\uA7BC', u'\uA7BE', u'\uA7C2',
		u'\uA7C9', u'\uA7F5',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<7>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\xBF' }, { u'\xDF', u'\xFF' }, { u'\u0137', u'\u0138' },
		{ u'\u0148', u'\u0149' }, { u'\u017E', u'\u0180' }, { u'\u018C', u'\u018D' },
		{ u'\u0199', u'\u019B' }, { u'\u01AA', u'\u01AB' }, { u'\u01B9', u'\u01BB' },
		{ u'\u01BD', u'\u01C3' }, { u'\u01C5', u'\u01C6' }, { u'\u01C8', u'\u01C9' },
		{ u'\u01CB', u'\u01CC' }, { u'\u01DC', u'\u01DD' }, { u'\u01EF', u'\u01F0' },
		{ u'\u01F2', u'\u01F3' }, { u'\u0233', u'\u0239' }, { u'\u023F', u'\u0240' },
		{ u'\u024F', u'\u036F' }, { u'\u0373', u'\u0375' }, { u'\u0377', u'\u037E' },
		{ u'\u0380', u'\u0385' }, { u'\u03AC', u'\u03CE' }, { u'\u03D0', u'\u03D1' },
		{ u'\u03D5', u'\u03D7' }, { u'\u03EF', u'\u03F3' }, { u'\u03F5', u'\u03F6' },
		{ u'\u03FB', u'\u03FC' }, { u'\u0430', u'\u045F' }, { u'\u0481', u'\u0489' },
		{ u'\u04CE', u'\u04CF' }, { u'\u052F', u'\u0530' }, { u'\u0557', u'\u109F' },
		{ u'\u10C8', u'\u10CC' }, { u'\u10CE', u'\u139F' }, { u'\u13F6', u'\u1C8F' },
		{ u'\u1CBB', u'\u1CBC' }, { u'\u1CC0', u'\u1DFF' }, { u'\u1E95', u'\u1E9D' },
		{ u'\u1EFF', u'\u1F07' }, { u'\u1F10', u'\u1F17' }, { u'\u1F1E', u'\u1F27' },
		{ u'\u1F30', u'\u1F37' }, { u'\u1F40', u'\u1F47' }, { u'\u1F4E', u'\u1F58' },
		{ u'\u1F60', u'\u1F67' }, { u'\u1F70', u'\u1FB7' }, { u'\u1FBC', u'\u1FC7' },
		{ u'\u1FCC', u'\u1FD7' }, { u'\u1FDC', u'\u1FE7' }, { u'\u1FED', u'\u1FF7' },
		{ u'\u1FFC', u'\u2101' }, { u'\u2103', u'\u2106' }, { u'\u2108', u'\u210A' },
		{ u'\u210E', u'\u210F' }, { u'\u2113', u'\u2114' }, { u'\u2116', u'\u2118' },
		{ u'\u211E', u'\u2123' }, { u'\u212E', u'\u212F' }, { u'\u2134', u'\u213D' },
		{ u'\u2140', u'\u2144' }, { u'\u2146', u'\u215F' }, { u'\u2170', u'\u2182' },
		{ u'\u2184', u'\u24B5' }, { u'\u24D0', u'\u2BFF' }, { u'\u2C2F', u'\u2C5F' },
		{ u'\u2C65', u'\u2C66' }, { u'\u2C73', u'\u2C74' }, { u'\u2C76', u'\u2C7D' },
		{ u'\u2CE3', u'\u2CEA' }, { u'\u2CEE', u'\u2CF1' }, { u'\u2CF3', u'\uA63F' },
		{ u'\uA66D', u'\uA67F' }, { u'\uA69B', u'\uA721' }, { u'\uA72F', u'\uA731' },
		{ u'\uA76F', u'\uA778' }, { u'\uA787', u'\uA78A' }, { u'\uA78E', u'\uA78F' },
		{ u'\uA793', u'\uA795' }, { u'\uA7BF', u'\uA7C1' }, { u'\uA7CA', u'\uA7F4' },
		{ u'\uA7F6', u'\uFF20' }, { u'\uFF3B', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
	static constexpr char16_t false_values[] = 
	{
		u'\xD7', u'\u0101', u'\u0103', u'\u0105', u'\u0107', u'\u0109',
		u'\u010B', u'\u010D', u'\u010F', u'\u0111', u'\u0113', u'\u0115',
		u'\u0117', u'\u0119', u'\u011B', u'\u011D', u'\u011F', u'\u0121',
		u'\u0123', u'\u0125', u'\u0127', u'\u0129', u'\u012B', u'\u012D',
		u'\u012F', u'\u0131', u'\u0133', u'\u0135', u'\u013A', u'\u013C',
		u'\u013E', u'\u0140', u'\u0142', u'\u0144', u'\u0146', u'\u014B',
		u'\u014D', u'\u014F', u'\u0151', u'\u0153', u'\u0155', u'\u0157',
		u'\u0159', u'\u015B', u'\u015D', u'\u015F', u'\u0161', u'\u0163',
		u'\u0165', u'\u0167', u'\u0169', u'\u016B', u'\u016D', u'\u016F',
		u'\u0171', u'\u0173', u'\u0175', u'\u0177', u'\u017A', u'\u017C',
		u'\u0183', u'\u0185', u'\u0188', u'\u0192', u'\u0195', u'\u019E',
		u'\u01A1', u'\u01A3', u'\u01A5', u'\u01A8', u'\u01AD', u'\u01B0',
		u'\u01B4', u'\u01B6', u'\u01CE', u'\u01D0', u'\u01D2', u'\u01D4',
		u'\u01D6', u'\u01D8', u'\u01DA', u'\u01DF', u'\u01E1', u'\u01E3',
		u'\u01E5', u'\u01E7', u'\u01E9', u'\u01EB', u'\u01ED', u'\u01F5',
		u'\u01F9', u'\u01FB', u'\u01FD', u'\u01FF', u'\u0201', u'\u0203',
		u'\u0205', u'\u0207', u'\u0209', u'\u020B', u'\u020D', u'\u020F',
		u'\u0211', u'\u0213', u'\u0215', u'\u0217', u'\u0219', u'\u021B',
		u'\u021D', u'\u021F', u'\u0221', u'\u0223', u'\u0225', u'\u0227',
		u'\u0229', u'\u022B', u'\u022D', u'\u022F', u'\u0231', u'\u023C',
		u'\u0242', u'\u0247', u'\u0249', u'\u024B', u'\u024D', u'\u0371',
		u'\u0387', u'\u038B', u'\u038D', u'\u0390', u'\u03A2', u'\u03D9',
		u'\u03DB', u'\u03DD', u'\u03DF', u'\u03E1', u'\u03E3', u'\u03E5',
		u'\u03E7', u'\u03E9', u'\u03EB', u'\u03ED', u'\u03F8', u'\u0461',
		u'\u0463', u'\u0465', u'\u0467', u'\u0469', u'\u046B', u'\u046D',
		u'\u046F', u'\u0471', u'\u0473', u'\u0475', u'\u0477', u'\u0479',
		u'\u047B', u'\u047D', u'\u047F', u'\u048B', u'\u048D', u'\u048F',
		u'\u0491', u'\u0493', u'\u0495', u'\u0497', u'\u0499', u'\u049B',
		u'\u049D', u'\u049F', u'\u04A1', u'\u04A3', u'\u04A5', u'\u04A7',
		u'\u04A9', u'\u04AB', u'\u04AD', u'\u04AF', u'\u04B1', u'\u04B3',
		u'\u04B5', u'\u04B7', u'\u04B9', u'\u04BB', u'\u04BD', u'\u04BF',
		u'\u04C2', u'\u04C4', u'\u04C6', u'\u04C8', u'\u04CA', u'\u04CC',
		u'\u04D1', u'\u04D3', u'\u04D5', u'\u04D7', u'\u04D9', u'\u04DB',
		u'\u04DD', u'\u04DF', u'\u04E1', u'\u04E3', u'\u04E5', u'\u04E7',
		u'\u04E9', u'\u04EB', u'\u04ED', u'\u04EF', u'\u04F1', u'\u04F3',
		u'\u04F5', u'\u04F7', u'\u04F9', u'\u04FB', u'\u04FD', u'\u04FF',
		u'\u0501', u'\u0503', u'\u0505', u'\u0507', u'\u0509', u'\u050B',
		u'\u050D', u'\u050F', u'\u0511', u'\u0513', u'\u0515', u'\u0517',
		u'\u0519', u'\u051B', u'\u051D', u'\u051F', u'\u0521', u'\u0523',
		u'\u0525', u'\u0527', u'\u0529', u'\u052B', u'\u052D', u'\u10C6',
		u'\u1E01', u'\u1E03', u'\u1E05', u'\u1E07', u'\u1E09', u'\u1E0B',
		u'\u1E0D', u'\u1E0F', u'\u1E11', u'\u1E13', u'\u1E15', u'\u1E17',
		u'\u1E19', u'\u1E1B', u'\u1E1D', u'\u1E1F', u'\u1E21', u'\u1E23',
		u'\u1E25', u'\u1E27', u'\u1E29', u'\u1E2B', u'\u1E2D', u'\u1E2F',
		u'\u1E31', u'\u1E33', u'\u1E35', u'\u1E37', u'\u1E39', u'\u1E3B',
		u'\u1E3D', u'\u1E3F', u'\u1E41', u'\u1E43', u'\u1E45', u'\u1E47',
		u'\u1E49', u'\u1E4B', u'\u1E4D', u'\u1E4F', u'\u1E51', u'\u1E53',
		u'\u1E55', u'\u1E57', u'\u1E59', u'\u1E5B', u'\u1E5D', u'\u1E5F',
		u'\u1E61', u'\u1E63', u'\u1E65', u'\u1E67', u'\u1E69', u'\u1E6B',
		u'\u1E6D', u'\u1E6F', u'\u1E71', u'\u1E73', u'\u1E75', u'\u1E77',
		u'\u1E79', u'\u1E7B', u'\u1E7D', u'\u1E7F', u'\u1E81', u'\u1E83',
		u'\u1E85', u'\u1E87', u'\u1E89', u'\u1E8B', u'\u1E8D', u'\u1E8F',
		u'\u1E91', u'\u1E93', u'\u1E9F', u'\u1EA1', u'\u1EA3', u'\u1EA5',
		u'\u1EA7', u'\u1EA9', u'\u1EAB', u'\u1EAD', u'\u1EAF', u'\u1EB1',
		u'\u1EB3', u'\u1EB5', u'\u1EB7', u'\u1EB9', u'\u1EBB', u'\u1EBD',
		u'\u1EBF', u'\u1EC1', u'\u1EC3', u'\u1EC5', u'\u1EC7', u'\u1EC9',
		u'\u1ECB', u'\u1ECD', u'\u1ECF', u'\u1ED1', u'\u1ED3', u'\u1ED5',
		u'\u1ED7', u'\u1ED9', u'\u1EDB', u'\u1EDD', u'\u1EDF', u'\u1EE1',
		u'\u1EE3', u'\u1EE5', u'\u1EE7', u'\u1EE9', u'\u1EEB', u'\u1EED',
		u'\u1EEF', u'\u1EF1', u'\u1EF3', u'\u1EF5', u'\u1EF7', u'\u1EF9',
		u'\u1EFB', u'\u1EFD', u'\u1F5A', u'\u1F5C', u'\u1F5E', u'\u2125',
		u'\u2127', u'\u2129', u'\u2C61', u'\u2C68', u'\u2C6A', u'\u2C6C',
		u'\u2C71', u'\u2C81', u'\u2C83', u'\u2C85', u'\u2C87', u'\u2C89',
		u'\u2C8B', u'\u2C8D', u'\u2C8F', u'\u2C91', u'\u2C93', u'\u2C95',
		u'\u2C97', u'\u2C99', u'\u2C9B', u'\u2C9D', u'\u2C9F', u'\u2CA1',
		u'\u2CA3', u'\u2CA5', u'\u2CA7', u'\u2CA9', u'\u2CAB', u'\u2CAD',
		u'\u2CAF', u'\u2CB1', u'\u2CB3', u'\u2CB5', u'\u2CB7', u'\u2CB9',
		u'\u2CBB', u'\u2CBD', u'\u2CBF', u'\u2CC1', u'\u2CC3', u'\u2CC5',
		u'\u2CC7', u'\u2CC9', u'\u2CCB', u'\u2CCD', u'\u2CCF', u'\u2CD1',
		u'\u2CD3', u'\u2CD5', u'\u2CD7', u'\u2CD9', u'\u2CDB', u'\u2CDD',
		u'\u2CDF', u'\u2CE1', u'\u2CEC', u'\uA641', u'\uA643', u'\uA645',
		u'\uA647', u'\uA649', u'\uA64B', u'\uA64D', u'\uA64F', u'\uA651',
		u'\uA653', u'\uA655', u'\uA657', u'\uA659', u'\uA65B', u'\uA65D',
		u'\uA65F', u'\uA661', u'\uA663', u'\uA665', u'\uA667', u'\uA669',
		u'\uA66B', u'\uA681', u'\uA683', u'\uA685', u'\uA687', u'\uA689',
		u'\uA68B', u'\uA68D', u'\uA68F', u'\uA691', u'\uA693', u'\uA695',
		u'\uA697', u'\uA699', u'\uA723', u'\uA725', u'\uA727', u'\uA729',
		u'\uA72B', u'\uA72D', u'\uA733', u'\uA735', u'\uA737', u'\uA739',
		u'\uA73B', u'\uA73D', u'\uA73F', u'\uA741', u'\uA743', u'\uA745',
		u'\uA747', u'\uA749', u'\uA74B', u'\uA74D', u'\uA74F', u'\uA751',
		u'\uA753', u'\uA755', u'\uA757', u'\uA759', u'\uA75B', u'\uA75D',
		u'\uA75F', u'\uA761', u'\uA763', u'\uA765', u'\uA767', u'\uA769',
		u'\uA76B', u'\uA76D', u'\uA77A', u'\uA77C', u'\uA77F', u'\uA781',
		u'\uA783', u'\uA785', u'\uA78C', u'\uA791', u'\uA797', u'\uA799',
		u'\uA79B', u'\uA79D', u'\uA79F', u'\uA7A1', u'\uA7A3', u'\uA7A5',
		u'\uA7A7', u'\uA7A9', u'\uA7AF', u'\uA7B5', u'\uA7B7', u'\uA7B9',
		u'\uA7BB', u'\uA7BD', u'\uA7C3', u'\uA7C8',
	};
	for (auto v : false_values)
		REQUIRE(!fn(v));
}

TEST_CASE("unicode - is_non_ascii_whitespace (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_non_ascii_whitespace);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\u2000', u'\u200A' }, { u'\u2028', u'\u2029' },
	};
	for (const auto& r : true_ranges)
	{
		REQUIRE(in(fn, r));
		REQUIRE(in_only<5>(fn, r));
	}
	static constexpr char16_t true_values[] = 
	{
		u'\x85', u'\xA0', u'\u1680', u'\u202F', u'\u205F', u'\u3000',
	};
	for (auto v : true_values)
	{
		REQUIRE(fn(v));
		REQUIRE(in_only<5>(fn, v));
	}
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\x84' }, { u'\x86', u'\x9F' }, { u'\xA1', u'\u167F' },
		{ u'\u1681', u'\u1FFF' }, { u'\u200B', u'\u2027' }, { u'\u202A', u'\u202E' },
		{ u'\u2030', u'\u205E' }, { u'\u2060', u'\u2FFF' }, { u'\u3001', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_code_point (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_code_point);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\0', u'\uD7FF' }, { u'\uE000', u'\uFFFF' },
	};
	for (const auto& r : true_ranges)
		REQUIRE(in(fn, r));
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ 0xD800u, 0xDFFFu },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_combining_mark (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_combining_mark);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'\u0300', u'\u036F' }, { u'\u0483', u'\u0487' }, { u'\u0591', u'\u05BD' },
		{ u'\u05C1', u'\u05C2' }, { u'\u05C4', u'\u05C5' }, { u'\u0610', u'\u061A' },
		{ u'\u064B', u'\u065F' }, { u'\u06D6', u'\u06DC' }, { u'\u06DF', u'\u06E4' },
		{ u'\u06E7', u'\u06E8' }, { u'\u06EA', u'\u06ED' }, { u'\u0730', u'\u074A' },
		{ u'\u07A6', u'\u07B0' }, { u'\u07EB', u'\u07F3' }, { u'\u0816', u'\u0819' },
		{ u'\u081B', u'\u0823' }, { u'\u0825', u'\u0827' }, { u'\u0829', u'\u082D' },
		{ u'\u0859', u'\u085B' }, { u'\u08D3', u'\u08E1' }, { u'\u08E3', u'\u0903' },
		{ u'\u093A', u'\u093C' }, { u'\u093E', u'\u094F' }, { u'\u0951', u'\u0957' },
		{ u'\u0962', u'\u0963' }, { u'\u0981', u'\u0983' }, { u'\u09BE', u'\u09C4' },
		{ u'\u09C7', u'\u09C8' }, { u'\u09CB', u'\u09CD' }, { u'\u09E2', u'\u09E3' },
		{ u'\u0A01', u'\u0A03' }, { u'\u0A3E', u'\u0A42' }, { u'\u0A47', u'\u0A48' },
		{ u'\u0A4B', u'\u0A4D' }, { u'\u0A70', u'\u0A71' }, { u'\u0A81', u'\u0A83' },
		{ u'\u0ABE', u'\u0AC5' }, { u'\u0AC7', u'\u0AC9' }, { u'\u0ACB', u'\u0ACD' },
		{ u'\u0AE2', u'\u0AE3' }, { u'\u0AFA', u'\u0AFF' }, { u'\u0B01', u'\u0B03' },
		{ u'\u0B3E', u'\u0B44' }, { u'\u0B47', u'\u0B48' }, { u'\u0B4B', u'\u0B4D' },
		{ u'\u0B55', u'\u0B57' }, { u'\u0B62', u'\u0B63' }, { u'\u0BBE', u'\u0BC2' },
		{ u'\u0BC6', u'\u0BC8' }, { u'\u0BCA', u'\u0BCD' }, { u'\u0C00', u'\u0C04' },
		{ u'\u0C3E', u'\u0C44' }, { u'\u0C46', u'\u0C48' }, { u'\u0C4A', u'\u0C4D' },
		{ u'\u0C55', u'\u0C56' }, { u'\u0C62', u'\u0C63' }, { u'\u0C81', u'\u0C83' },
		{ u'\u0CBE', u'\u0CC4' }, { u'\u0CC6', u'\u0CC8' }, { u'\u0CCA', u'\u0CCD' },
		{ u'\u0CD5', u'\u0CD6' }, { u'\u0CE2', u'\u0CE3' }, { u'\u0D00', u'\u0D03' },
		{ u'\u0D3B', u'\u0D3C' }, { u'\u0D3E', u'\u0D44' }, { u'\u0D46', u'\u0D48' },
		{ u'\u0D4A', u'\u0D4D' }, { u'\u0D62', u'\u0D63' }, { u'\u0D81', u'\u0D83' },
		{ u'\u0DCF', u'\u0DD4' }, { u'\u0DD8', u'\u0DDF' }, { u'\u0DF2', u'\u0DF3' },
		{ u'\u0E34', u'\u0E3A' }, { u'\u0E47', u'\u0E4E' }, { u'\u0EB4', u'\u0EBC' },
		{ u'\u0EC8', u'\u0ECD' }, { u'\u0F18', u'\u0F19' }, { u'\u0F3E', u'\u0F3F' },
		{ u'\u0F71', u'\u0F84' }, { u'\u0F86', u'\u0F87' }, { u'\u0F8D', u'\u0F97' },
		{ u'\u0F99', u'\u0FBC' }, { u'\u102B', u'\u103E' }, { u'\u1056', u'\u1059' },
		{ u'\u105E', u'\u1060' }, { u'\u1062', u'\u1064' }, { u'\u1067', u'\u106D' },
		{ u'\u1071', u'\u1074' }, { u'\u1082', u'\u108D' }, { u'\u109A', u'\u109D' },
		{ u'\u135D', u'\u135F' }, { u'\u1712', u'\u1714' }, { u'\u1732', u'\u1734' },
		{ u'\u1752', u'\u1753' }, { u'\u1772', u'\u1773' }, { u'\u17B4', u'\u17D3' },
		{ u'\u180B', u'\u180D' }, { u'\u1885', u'\u1886' }, { u'\u1920', u'\u192B' },
		{ u'\u1930', u'\u193B' }, { u'\u1A17', u'\u1A1B' }, { u'\u1A55', u'\u1A5E' },
		{ u'\u1A60', u'\u1A7C' }, { u'\u1AB0', u'\u1ABD' }, { u'\u1ABF', u'\u1AC0' },
		{ u'\u1B00', u'\u1B04' }, { u'\u1B34', u'\u1B44' }, { u'\u1B6B', u'\u1B73' },
		{ u'\u1B80', u'\u1B82' }, { u'\u1BA1', u'\u1BAD' }, { u'\u1BE6', u'\u1BF3' },
		{ u'\u1C24', u'\u1C37' }, { u'\u1CD0', u'\u1CD2' }, { u'\u1CD4', u'\u1CE8' },
		{ u'\u1CF7', u'\u1CF9' }, { u'\u1DC0', u'\u1DF9' }, { u'\u1DFB', u'\u1DFF' },
		{ u'\u20D0', u'\u20DC' }, { u'\u20E5', u'\u20F0' }, { u'\u2CEF', u'\u2CF1' },
		{ u'\u2DE0', u'\u2DFF' }, { u'\u302A', u'\u302F' }, { u'\u3099', u'\u309A' },
		{ u'\uA674', u'\uA67D' }, { u'\uA69E', u'\uA69F' }, { u'\uA6F0', u'\uA6F1' },
		{ u'\uA823', u'\uA827' }, { u'\uA880', u'\uA881' }, { u'\uA8B4', u'\uA8C5' },
		{ u'\uA8E0', u'\uA8F1' }, { u'\uA926', u'\uA92D' }, { u'\uA947', u'\uA953' },
		{ u'\uA980', u'\uA983' }, { u'\uA9B3', u'\uA9C0' }, { u'\uAA29', u'\uAA36' },
		{ u'\uAA4C', u'\uAA4D' }, { u'\uAA7B', u'\uAA7D' }, { u'\uAAB2', u'\uAAB4' },
		{ u'\uAAB7', u'\uAAB8' }, { u'\uAABE', u'\uAABF' }, { u'\uAAEB', u'\uAAEF' },
		{ u'\uAAF5', u'\uAAF6' }, { u'\uABE3', u'\uABEA' }, { u'\uABEC', u'\uABED' },
		{ u'\uFE00', u'\uFE0F' }, { u'\uFE20', u'\uFE2F' },
	};
	for (const auto& r : true_ranges)
		REQUIRE(in(fn, r));
	static constexpr char16_t true_values[] = 
	{
		u'\u05BF', u'\u05C7', u'\u0670', u'\u0711', u'\u07FD', u'\u09BC',
		u'\u09D7', u'\u09FE', u'\u0A3C', u'\u0A51', u'\u0A75', u'\u0ABC',
		u'\u0B3C', u'\u0B82', u'\u0BD7', u'\u0CBC', u'\u0D57', u'\u0DCA',
		u'\u0DD6', u'\u0E31', u'\u0EB1', u'\u0F35', u'\u0F37', u'\u0F39',
		u'\u0FC6', u'\u108F', u'\u17DD', u'\u18A9', u'\u1A7F', u'\u1CED',
		u'\u1CF4', u'\u20E1', u'\u2D7F', u'\uA66F', u'\uA802', u'\uA806',
		u'\uA80B', u'\uA82C', u'\uA8FF', u'\uA9E5', u'\uAA43', u'\uAAB0',
		u'\uAAC1', u'\uFB1E',
	};
	for (auto v : true_values)
		REQUIRE(fn(v));
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'\u02FF' }, { u'\u0370', u'\u0482' }, { u'\u0488', u'\u0590' },
		{ u'\u05C8', u'\u060F' }, { u'\u061B', u'\u064A' }, { u'\u0660', u'\u066F' },
		{ u'\u0671', u'\u06D5' }, { u'\u06DD', u'\u06DE' }, { u'\u06E5', u'\u06E6' },
		{ u'\u06EE', u'\u0710' }, { u'\u0712', u'\u072F' }, { u'\u074B', u'\u07A5' },
		{ u'\u07B1', u'\u07EA' }, { u'\u07F4', u'\u07FC' }, { u'\u07FE', u'\u0815' },
		{ u'\u082E', u'\u0858' }, { u'\u085C', u'\u08D2' }, { u'\u0904', u'\u0939' },
		{ u'\u0958', u'\u0961' }, { u'\u0964', u'\u0980' }, { u'\u0984', u'\u09BB' },
		{ u'\u09C5', u'\u09C6' }, { u'\u09C9', u'\u09CA' }, { u'\u09CE', u'\u09D6' },
		{ u'\u09D8', u'\u09E1' }, { u'\u09E4', u'\u09FD' }, { u'\u09FF', u'\u0A00' },
		{ u'\u0A04', u'\u0A3B' }, { u'\u0A43', u'\u0A46' }, { u'\u0A49', u'\u0A4A' },
		{ u'\u0A4E', u'\u0A50' }, { u'\u0A52', u'\u0A6F' }, { u'\u0A72', u'\u0A74' },
		{ u'\u0A76', u'\u0A80' }, { u'\u0A84', u'\u0ABB' }, { u'\u0ACE', u'\u0AE1' },
		{ u'\u0AE4', u'\u0AF9' }, { u'\u0B04', u'\u0B3B' }, { u'\u0B45', u'\u0B46' },
		{ u'\u0B49', u'\u0B4A' }, { u'\u0B4E', u'\u0B54' }, { u'\u0B58', u'\u0B61' },
		{ u'\u0B64', u'\u0B81' }, { u'\u0B83', u'\u0BBD' }, { u'\u0BC3', u'\u0BC5' },
		{ u'\u0BCE', u'\u0BD6' }, { u'\u0BD8', u'\u0BFF' }, { u'\u0C05', u'\u0C3D' },
		{ u'\u0C4E', u'\u0C54' }, { u'\u0C57', u'\u0C61' }, { u'\u0C64', u'\u0C80' },
		{ u'\u0C84', u'\u0CBB' }, { u'\u0CCE', u'\u0CD4' }, { u'\u0CD7', u'\u0CE1' },
		{ u'\u0CE4', u'\u0CFF' }, { u'\u0D04', u'\u0D3A' }, { u'\u0D4E', u'\u0D56' },
		{ u'\u0D58', u'\u0D61' }, { u'\u0D64', u'\u0D80' }, { u'\u0D84', u'\u0DC9' },
		{ u'\u0DCB', u'\u0DCE' }, { u'\u0DE0', u'\u0DF1' }, { u'\u0DF4', u'\u0E30' },
		{ u'\u0E32', u'\u0E33' }, { u'\u0E3B', u'\u0E46' }, { u'\u0E4F', u'\u0EB0' },
		{ u'\u0EB2', u'\u0EB3' }, { u'\u0EBD', u'\u0EC7' }, { u'\u0ECE', u'\u0F17' },
		{ u'\u0F1A', u'\u0F34' }, { u'\u0F3A', u'\u0F3D' }, { u'\u0F40', u'\u0F70' },
		{ u'\u0F88', u'\u0F8C' }, { u'\u0FBD', u'\u0FC5' }, { u'\u0FC7', u'\u102A' },
		{ u'\u103F', u'\u1055' }, { u'\u105A', u'\u105D' }, { u'\u1065', u'\u1066' },
		{ u'\u106E', u'\u1070' }, { u'\u1075', u'\u1081' }, { u'\u1090', u'\u1099' },
		{ u'\u109E', u'\u135C' }, { u'\u1360', u'\u1711' }, { u'\u1715', u'\u1731' },
		{ u'\u1735', u'\u1751' }, { u'\u1754', u'\u1771' }, { u'\u1774', u'\u17B3' },
		{ u'\u17D4', u'\u17DC' }, { u'\u17DE', u'\u180A' }, { u'\u180E', u'\u1884' },
		{ u'\u1887', u'\u18A8' }, { u'\u18AA', u'\u191F' }, { u'\u192C', u'\u192F' },
		{ u'\u193C', u'\u1A16' }, { u'\u1A1C', u'\u1A54' }, { u'\u1A7D', u'\u1A7E' },
		{ u'\u1A80', u'\u1AAF' }, { u'\u1AC1', u'\u1AFF' }, { u'\u1B05', u'\u1B33' },
		{ u'\u1B45', u'\u1B6A' }, { u'\u1B74', u'\u1B7F' }, { u'\u1B83', u'\u1BA0' },
		{ u'\u1BAE', u'\u1BE5' }, { u'\u1BF4', u'\u1C23' }, { u'\u1C38', u'\u1CCF' },
		{ u'\u1CE9', u'\u1CEC' }, { u'\u1CEE', u'\u1CF3' }, { u'\u1CF5', u'\u1CF6' },
		{ u'\u1CFA', u'\u1DBF' }, { u'\u1E00', u'\u20CF' }, { u'\u20DD', u'\u20E0' },
		{ u'\u20E2', u'\u20E4' }, { u'\u20F1', u'\u2CEE' }, { u'\u2CF2', u'\u2D7E' },
		{ u'\u2D80', u'\u2DDF' }, { u'\u2E00', u'\u3029' }, { u'\u3030', u'\u3098' },
		{ u'\u309B', u'\uA66E' }, { u'\uA670', u'\uA673' }, { u'\uA67E', u'\uA69D' },
		{ u'\uA6A0', u'\uA6EF' }, { u'\uA6F2', u'\uA801' }, { u'\uA803', u'\uA805' },
		{ u'\uA807', u'\uA80A' }, { u'\uA80C', u'\uA822' }, { u'\uA828', u'\uA82B' },
		{ u'\uA82D', u'\uA87F' }, { u'\uA882', u'\uA8B3' }, { u'\uA8C6', u'\uA8DF' },
		{ u'\uA8F2', u'\uA8FE' }, { u'\uA900', u'\uA925' }, { u'\uA92E', u'\uA946' },
		{ u'\uA954', u'\uA97F' }, { u'\uA984', u'\uA9B2' }, { u'\uA9C1', u'\uA9E4' },
		{ u'\uA9E6', u'\uAA28' }, { u'\uAA37', u'\uAA42' }, { u'\uAA44', u'\uAA4B' },
		{ u'\uAA4E', u'\uAA7A' }, { u'\uAA7E', u'\uAAAF' }, { u'\uAAB5', u'\uAAB6' },
		{ u'\uAAB9', u'\uAABD' }, { u'\uAAC2', u'\uAAEA' }, { u'\uAAF0', u'\uAAF4' },
		{ u'\uAAF7', u'\uABE2' }, { u'\uABEE', u'\uFB1D' }, { u'\uFB1F', u'\uFDFF' },
		{ u'\uFE10', u'\uFE1F' }, { u'\uFE30', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
	static constexpr char16_t false_values[] = 
	{
		u'\u05BE', u'\u05C0', u'\u05C3', u'\u05C6', u'\u06E9', u'\u081A',
		u'\u0824', u'\u0828', u'\u08E2', u'\u093D', u'\u0950', u'\u09BD',
		u'\u0A3D', u'\u0ABD', u'\u0AC6', u'\u0ACA', u'\u0B00', u'\u0B3D',
		u'\u0BC9', u'\u0C45', u'\u0C49', u'\u0CBD', u'\u0CC5', u'\u0CC9',
		u'\u0D3D', u'\u0D45', u'\u0D49', u'\u0DD5', u'\u0DD7', u'\u0F36',
		u'\u0F38', u'\u0F85', u'\u0F98', u'\u1061', u'\u108E', u'\u1A5F',
		u'\u1ABE', u'\u1CD3', u'\u1DFA', u'\uAAB1', u'\uAAC0', u'\uABEB',
	};
	for (auto v : false_values)
		REQUIRE(!fn(v));
}

TEST_CASE("unicode - is_decimal_digit (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_decimal_digit);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'0', u'9' },
	};
	for (const auto& r : true_ranges)
		REQUIRE(in(fn, r));
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'/' }, { u':', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_hexadecimal_digit (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_hexadecimal_digit);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'0', u'9' }, { u'A', u'F' }, { u'a', u'f' },
	};
	for (const auto& r : true_ranges)
		REQUIRE(in(fn, r));
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'/' }, { u':', u'@' }, { u'G', u'`' },
		{ u'g', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

TEST_CASE("unicode - is_octal_digit (char16_t)")
{
	static constexpr auto fn = static_cast<code_unit_func<char16_t>*>(is_octal_digit);
 
	// values which should return true
	static constexpr code_unit_range<uint32_t> true_ranges[] = 
	{
		{ u'0', u'7' },
	};
	for (const auto& r : true_ranges)
		REQUIRE(in(fn, r));
 
	// values which should return false
	static constexpr code_unit_range<uint32_t> false_ranges[] = 
	{
		{ u'\0', u'/' }, { u'8', u'\uFFFF' },
	};
	for (const auto& r : false_ranges)
		REQUIRE(not_in(fn, r));
}

template <>
struct code_unit_func_group<char16_t, 1>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_code_point,
		is_non_ascii_code_point,
		is_not_code_point,
	};
};

template <>
struct code_unit_func_group<char16_t, 2>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_hyphen,
		is_non_ascii_hyphen,
		is_not_hyphen,
	};
};

template <>
struct code_unit_func_group<char16_t, 3>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_letter,
		is_non_ascii_letter,
		is_not_letter,
	};
};

template <>
struct code_unit_func_group<char16_t, 4>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_number,
		is_non_ascii_number,
		is_not_number,
	};
};

template <>
struct code_unit_func_group<char16_t, 5>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_whitespace,
		is_non_ascii_whitespace,
		is_not_whitespace,
	};
};

template <>
struct code_unit_func_group<char16_t, 6>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_lowercase,
		is_non_ascii_lowercase,
		is_not_lowercase,
	};
};

template <>
struct code_unit_func_group<char16_t, 7>
{
	static constexpr code_unit_func<char16_t>* functions[] =
	{
		is_ascii_uppercase,
		is_non_ascii_uppercase,
		is_not_uppercase,
	};
};

